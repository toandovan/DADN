{"input":{"ourVersion":"1.45.1","commit":"5763d909d5f12fe19f215cbfdd29a91c0fa9208a","locale":"en","devMode":false,"absoluteFolderPath":"/home/ansi/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1591232263820},"result":[{"name":"cc-nodejs","displayName":"cc-nodejs","description":"Extension pack for frontend and backend typescript development","version":"0.0.3","publisher":"cc-arekzc","engines":{"vscode":"^1.10.0"},"categories":["Extension Packs"],"extensionDependencies":["timonwong.ansible-autocomplete","formulahendry.auto-close-tag","streetsidesoftware.code-spell-checker","kisstkondoros.vscode-codemetrics","EditorConfig.EditorConfig","henriiik.docker-linter","donjayamanne.githistory","michelemelluso.gitignore","eamodio.gitlens","haaaad.ansible","mrmlnc.vscode-less","christian-kohler.path-intellisense","chrmarti.regex","jakob101.RelativePath","glen-84.sass-lint","mrmlnc.vscode-scss","shardulm94.trailing-spaces","eg2.tslint","PeterJausovec.vscode-docker","pprice.better-merge"],"uuid":"31bd6c9c-b957-4a0a-b0b2-c9e61d1d0a62","isBuiltin":false,"isUnderDevelopment":false,"id":"cc-arekzc.cc-nodejs","identifier":{"value":"cc-arekzc.cc-nodejs","_lower":"cc-arekzc.cc-nodejs"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/cc-arekzc.cc-nodejs-0.0.3","path":"/home/ansi/.vscode/extensions/cc-arekzc.cc-nodejs-0.0.3","scheme":"file"}},{"name":"path-intellisense","displayName":"Path Intellisense","description":"Visual Studio Code plugin that autocompletes filenames","version":"1.4.2","publisher":"christian-kohler","engines":{"vscode":"^1.0.0"},"homepage":"https://github.com/ChristianKohler/PathIntellisense","repository":{"type":"git","url":"https://github.com/ChristianKohler/PathIntellisense.git"},"categories":["Other"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"path-intellisense","properties":{"path-intellisense.extensionOnImport":{"type":"boolean","default":false,"description":"Adds the file extension to a import statements"},"path-intellisense.mappings":{"type":"object","default":{},"description":"Mappings for paths"},"path-intellisense.showHiddenFiles":{"type":"boolean","default":false,"description":"Show hidden files"},"path-intellisense.autoSlashAfterDirectory":{"type":"boolean","default":false,"description":"Automatically adds slash after directory"},"path-intellisense.absolutePathToWorkspace":{"type":"boolean","default":true,"description":"Sets an absolute path to the current workspace"}}}},"main":"./out/src/extension","icon":"icon/path-intellisense.png","scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/minimatch":"^2.0.29","typescript":"^2.3.2","vscode":"^0.11.0"},"dependencies":{"minimatch":"^3.0.4"},"uuid":"a41c1549-4053-44d4-bf30-60fc809b4a86","isBuiltin":false,"isUnderDevelopment":false,"id":"christian-kohler.path-intellisense","identifier":{"value":"christian-kohler.path-intellisense","_lower":"christian-kohler.path-intellisense"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/christian-kohler.path-intellisense-1.4.2","path":"/home/ansi/.vscode/extensions/christian-kohler.path-intellisense-1.4.2","scheme":"file"}},{"name":"regex","displayName":"Regex Previewer","description":"Regex matches previewer for JavaScript, TypeScript, PHP and Haxe in Visual Studio Code.","version":"0.2.0","publisher":"chrmarti","repository":{"type":"git","url":"https://github.com/chrmarti/vscode-regex.git"},"license":"MIT","bugs":{"url":"https://github.com/chrmarti/vscode-regex/issues"},"icon":"images/icon.png","engines":{"vscode":"^1.18.0"},"categories":["Other"],"activationEvents":["onLanguage:javascript","onLanguage:typescript","onLanguage:php","onLanguage:haxe","onCommand:extension.toggleRegexPreview"],"main":"./out/src/extension","contributes":{"configuration":{"type":"object","title":"Regex Previewer Configuration","properties":{"regex-previewer.enableCodeLens":{"scope":"resource","type":"boolean","default":true,"description":"Enables code lens for Regex Previewer"}}},"commands":[{"command":"extension.toggleRegexPreview","title":"Toggle Regex Preview In Side-By-Side Editors"}],"keybindings":[{"command":"extension.toggleRegexPreview","key":"ctrl+alt+m","mac":"cmd+alt+m"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^2.2.41","@types/node":"^6.0.71","mocha":"^2.5.3","typescript":"^2.3.2"},"dependencies":{"vscode":"^1.1.0"},"uuid":"7ed7bccd-f358-4c6f-88c0-1296185abaa1","isBuiltin":false,"isUnderDevelopment":false,"id":"chrmarti.regex","identifier":{"value":"chrmarti.regex","_lower":"chrmarti.regex"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/chrmarti.regex-0.2.0","path":"/home/ansi/.vscode/extensions/chrmarti.regex-0.2.0","scheme":"file"}},{"name":"githistory","displayName":"Git History","description":"View git log, file history, compare branches or commits","version":"0.6.5","publisher":"donjayamanne","author":{"name":"Don Jayamanne","email":"don.jayamanne@yahoo.com"},"license":"MIT","homepage":"https://github.com/DonJayamanne/gitHistoryVSCode/blob/master/README.md","repository":{"type":"git","url":"https://github.com/DonJayamanne/gitHistoryVSCode"},"icon":"images/icon.png","bugs":{"url":"https://github.com/DonJayamanne/gitHistoryVSCode/issues"},"galleryBanner":{"color":"#0000FF","theme":"dark"},"engines":{"vscode":"^1.38.0"},"categories":["Other"],"activationEvents":["*"],"main":"./dist/src/extension","contributes":{"views":{"explorer":[{"id":"commitViewProvider","name":"Commits","when":"!config.gitHistory.hideCommitViewExplorer && git.commit.view.show && git.commit.selected"},{"id":"compareCommitViewProvider","name":"Compare Commits","when":"!config.gitHistory.hideCompareCommitViewExplorer && git.commit.compare.view.show && git.commit.compare.compared"}]},"commands":[{"command":"git.commit.view.hide","title":"Hide Commit View Explorer","category":"Git","icon":{"dark":"resources/icons/misc/close-dark.svg","light":"resources/icons/misc/close.svg"}},{"command":"git.commit.view.show","title":"Git: Show Commit View Explorer"},{"command":"git.commit.compare.view.hide","title":"Hide Commit Comparison View Explorer","category":"Git","icon":{"dark":"resources/icons/misc/close-dark.svg","light":"resources/icons/misc/close.svg"}},{"command":"git.commit.compare.view.show","title":"Git: Show Commit Comparison View Explorer"},{"command":"git.viewLineHistory","title":"Git: View Line History"},{"command":"git.viewHistory","title":"Git: View History (git log)","icon":{"dark":"./resources/icons/dark/git.svg","light":"./resources/icons/light/git.svg"}},{"command":"git.viewFileHistory","title":"Git: View File History","icon":{"dark":"./resources/icons/dark/git.svg","light":"./resources/icons/light/git.svg"}},{"command":"git.commit.ViewChangeLog","title":"View Change log"},{"command":"git.commit.cherryPick","title":"Cherrypick into current branch"},{"command":"git.commit.createBranch","title":"Create a branch from this commit"},{"command":"git.commit.FileEntry.ViewFileContents","title":"View File Contents"},{"command":"git.commit.FileEntry.CompareAgainstWorkspace","title":"Compare against workspace version"},{"command":"git.commit.FileEntry.CompareAgainstPrevious","title":"Compare against previous version"},{"command":"git.commit.FileEntry.selectForComparison","title":"Select for comparison"},{"command":"git.commit.FileEntry.compare","title":"Compare against previously selected Commit"},{"command":"git.commit.compare.file.compare","title":"Compare"},{"command":"git.commit.compare.selectForComparison","title":"Select for comparison"},{"command":"git.commit.compare","title":"Compare against previously selected Commit"},{"command":"git.commit.compare.view.showFilesOnly","title":"Show files only"},{"command":"git.commit.compare.view.showFolderView","title":"Show folder view"},{"command":"git.commit.merge","title":"Merge with this commit"},{"command":"git.commit.rebase","title":"Rebase onto this commit"},{"command":"git.commit.view.showFilesOnly","title":"Show files only"},{"command":"git.commit.view.showFolderView","title":"Show folder view"}],"menus":{"commandPalette":[{"command":"git.commit.view.hide","when":"git.commit.view.show"},{"command":"git.commit.view.show","when":"!git.commit.view.show"},{"command":"git.commit.compare.view.hide","when":"git.commit.compare.view.show"},{"command":"git.commit.compare.view.show","when":"!git.commit.compare.view.show"}],"editor/title":[{"command":"git.viewHistory","group":"navigation","when":"config.git.enabled && gitOpenRepositoryCount != 0 && config.gitHistory.showEditorTitleMenuBarIcons"}],"editor/title/context":[{"command":"git.viewFileHistory","group":"git","when":"config.git.enabled && gitOpenRepositoryCount != 0 && config.gitHistory.showEditorTitleMenuBarIcons"}],"scm/title":[{"command":"git.viewHistory","group":"navigation","when":"config.git.enabled && gitOpenRepositoryCount != 0 && config.gitHistory.sourceCodeProviderIntegrationLocation == 'Inline'"},{"command":"git.viewHistory","group":"inline","when":"config.git.enabled && gitOpenRepositoryCount != 0 && config.gitHistory.sourceCodeProviderIntegrationLocation == 'More Actions'"}],"scm/resourceState/context":[{"command":"git.viewFileHistory","when":"config.git.enabled && gitOpenRepositoryCount != 0"}],"explorer/context":[{"command":"git.viewFileHistory","group":"git","when":"config.git.enabled && gitOpenRepositoryCount != 0"}],"editor/context":[{"command":"git.viewFileHistory","group":"git","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.viewLineHistory","group":"git","when":"config.git.enabled && gitOpenRepositoryCount != 0"}],"view/item/context":[{"command":"git.viewFileHistory","when":"view == commitViewProvider && viewItem == file"},{"command":"git.viewFileHistory","when":"view == compareCommitViewProvider && viewItem == file"},{"command":"git.commit.FileEntry.ViewFileContents","when":"view == commitViewProvider && viewItem == file"},{"command":"git.commit.FileEntry.CompareAgainstWorkspace","when":"view == commitViewProvider && viewItem == file"},{"command":"git.commit.FileEntry.CompareAgainstPrevious","when":"view == commitViewProvider && viewItem == file"},{"command":"git.commit.FileEntry.selectForComparison","when":"view == commitViewProvider && viewItem == file && false"},{"command":"git.commit.FileEntry.compare","when":"view == commitViewProvider && viewItem == file && git.commit.FileEntry.selectForComparison && false"}],"view/title":[{"command":"git.commit.compare.view.hide","when":"view == compareCommitViewProvider","group":"navigation@1"},{"command":"git.commit.compare.view.hide","when":"view == compareCommitViewProvider","group":"zMoreSubMenuItems"},{"command":"git.commit.view.hide","when":"view == commitViewProvider","group":"navigation@1"},{"command":"git.commit.view.hide","when":"view == commitViewProvider","group":"zMoreSubMenuItems"},{"command":"git.commit.cherryPick","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.createBranch","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.merge","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.rebase","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.view.showFilesOnly","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.view.showFolderView","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.compare.view.showFilesOnly","when":"view == compareCommitViewProvider && git.commit.compare.compared","group":"zMoreSubMenuItems"},{"command":"git.commit.compare.view.showFolderView","when":"view == compareCommitViewProvider && git.commit.compare.compared","group":"zMoreSubMenuItems"}]},"configuration":{"type":"object","title":"Git History","properties":{"gitHistory.alwaysPromptRepositoryPicker":{"type":"boolean","default":false,"scope":"window","description":"Always prompt with repository picker when running Git History"},"gitHistory.hideCommitViewExplorer":{"type":"boolean","default":false,"scope":"window","description":"Whether to display the commit explorer view"},"gitHistory.showEditorTitleMenuBarIcons":{"type":"boolean","default":true,"scope":"window","description":"Whether to display a button in the editor title menu bar"},"gitHistory.pageSize":{"type":"number","default":100,"scope":"window","description":"Default number of items to be displayed in Git History Viewer"},"gitHistory.avatarCacheExpiration":{"type":"integer","default":60,"scope":"window","description":"Avatar image cache expiration (0 = cache disabled)"},"gitHistory.logLevel":{"type":"string","default":"Info","enum":["None","Info","Debug"],"scope":"window","description":"Output log information"},"gitHistory.sourceCodeProviderIntegrationLocation":{"type":"string","enum":["Inline","More Actions"],"enumDescriptions":["Show the 'Git: View History' action on the title of SCM Providers","Show the 'Git: View History' action in the 'More Actions...' menu on the title of SCM Providers"],"default":"Inline","description":"Specifies where the 'Git: View History' action appears on the title of SCM Providers."}}}},"scripts":{"vscode:prepublish":"npm run lint && tsc --skipLibCheck -p ./ && webpack -p --progress","test-compile":"tsc --skipLibCheck --watch -p ./","test":"jest","test-extension":"node ./dist/test/runTest.js","webpack":"webpack -p --progress --colors","webpack-dev":"webpack --progress --colors --watch","postinstall":"node ./node_modules/vscode/bin/install && node ./build/postInstall.js","lint":"eslint 'src/**/*.ts' && eslint 'browser/src/**/*.ts*'","fix":"eslint --fix 'src/**/*.ts' && eslint --fix 'browser/src/**/*.ts*'","precommit":"lint-staged","storybook":"start-storybook","build-storybook":"build-storybook"},"lint-staged":{"src/**/*.ts":["eslint"],"browser/**/*.{ts,tsx}":["eslint"]},"devDependencies":{"@storybook/addon-actions":"^5.3.17","@storybook/addon-info":"^5.3.17","@storybook/addon-links":"^5.3.17","@storybook/addons":"^5.3.17","@storybook/react":"^5.3.17","@types/chai":"^4.2.9","@types/clipboard":"^2.0.1","@types/fs-extra":"^8.0.0","@types/glob":"^7.1.1","@types/gravatar":"^1.4.28","@types/jest":"^25.1.3","@types/jest-cli":"^24.3.0","@types/node":"^13.7.6","@types/node-emoji":"^1.8.1","@types/query-string":"^6.3.0","@types/react":"^16.9.23","@types/react-bootstrap":"^0.32.20","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@types/react-router":"^5.1.4","@types/react-router-dom":"^5.1.3","@types/react-router-redux":"^5.0.18","@types/redux-actions":"^2.2.2","@typescript-eslint/eslint-plugin":"^2.21.0","@typescript-eslint/parser":"^2.21.0","awesome-typescript-loader":"5.2.1","babel-loader":"^8.0.6","bootstrap":"^3.4.1","chai":"^4.1.2","copy-webpack-plugin":"^5.1.1","css-loader":"^3.4.2","debounce":"^1.1.0","decache":"^4.3.0","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-plugin-prettier":"^3.1.2","extract-loader":"4.0.3","file-loader":"^5.1.0","glob":"^7.1.2","hint.css":"^2.4.1","husky":"^0.14.3","istanbul":"0.4.5","jest":"^25.1.0","jest-cli":"^25.1.0","jest-standard-reporter":"^1.0.4","lint-staged":"^10.0.8","node-emoji":"1.10.0","node-fetch":"2.6.0","prettier":"^1.19.1","re-resizable":"6.2.0","react":"^16.13.0","react-bootstrap":"^0.32.4","react-copy-to-clipboard":"^5.0.1","react-docgen-typescript-loader":"^3.7.1","react-dom":"^16.13.0","react-icons":"^3.9.0","react-redux":"^7.2.0","react-router":"^5.1.2","react-router-dom":"^5.1.2","react-router-redux":"^4.0.8","redux":"^4.0.5","redux-actions":"^2.2.1","redux-thunk":"2.3.0","remap-istanbul":"^0.13.0","simple-git":"^1.131.0","source-map-support":"^0.5.0","style-loader":"^1.1.3","ts-jest":"^25.2.1","ts-loader":"^6.2.1","ts-node":"^8.6.2","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"^3.8.2","vscode":"^1.1.36","vscode-test":"^1.3.0","webpack":"4.41.6","webpack-cli":"^3.3.11"},"dependencies":{"event-stream":"4.0.1","fs-extra":"^8.1.0","gravatar":"^1.6.0","hash.js":"^1.1.7","iconv-lite":"^0.5.1","inversify":"^5.0.1","query-string":"^6.11.0","reflect-metadata":"^0.1.12","stack-trace":"0.0.10","tmp":"0.1.0","vscode-extension-telemetry":"^0.1.1"},"uuid":"5960f38e-0bbe-4644-8f9c-9c8824e82511","isBuiltin":false,"isUnderDevelopment":false,"id":"donjayamanne.githistory","identifier":{"value":"donjayamanne.githistory","_lower":"donjayamanne.githistory"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/donjayamanne.githistory-0.6.5","path":"/home/ansi/.vscode/extensions/donjayamanne.githistory-0.6.5","scheme":"file"}},{"name":"gitlens","displayName":"GitLens — Git supercharged","description":"Supercharge the Git capabilities built into Visual Studio Code — Visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more","version":"10.2.1","author":{"name":"Eric Amodio","email":"eamodio@gmail.com"},"publisher":"eamodio","license":"SEE LICENSE IN LICENSE","homepage":"https://github.com/eamodio/vscode-gitlens/blob/master/README.md","bugs":{"url":"https://github.com/eamodio/vscode-gitlens/issues"},"repository":{"type":"git","url":"https://github.com/eamodio/vscode-gitlens.git"},"engines":{"vscode":"^1.37.0"},"main":"./dist/extension","icon":"images/gitlens-icon.png","preview":false,"badges":[{"url":"https://img.shields.io/badge/vscode--dev--community-gitlens-blue.svg?logo=slack&labelColor=555555","href":"https://vscode-slack.amod.io","description":"Join us in the #gitlens channel"}],"categories":["Other"],"galleryBanner":{"color":"#8647ae","theme":"dark"},"keywords":["gitlens","git","blame","log","annotation","multi-root ready"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"GitLens — Use 'GitLens: Open Settings' for a richer, interactive experience","properties":{"gitlens.autolinks":{"type":"array","items":{"type":"object","required":["prefix","url"],"properties":{"prefix":{"type":"string","description":"Specifies the short prefix to use to generate autolinks for the external resource"},"ignoreCase":{"type":"boolean","description":"Specifies whether case should be ignored when matching the prefix","default":false},"title":{"type":"string","description":"Specifies an optional title for the generated autolink. Use `<num>` as the variable for the reference number","default":null},"url":{"type":"string","description":"Specifies the url of the external resource you want to link to. Use `<num>` as the variable for the reference number"}},"default":null},"uniqueItems":true,"markdownDescription":"Specifies autolinks to external resources in commit messages. Use <num> as the variable for the reference number","scope":"window"},"gitlens.blame.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in the gutter blame annotations","scope":"window"},"gitlens.blame.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (deduplicate) matching adjacent gutter blame annotations","scope":"window"},"gitlens.blame.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in gutter blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.blame.format":{"type":"string","default":"${message|40?} ${agoOrDate|14-}","markdownDescription":"Specifies the format of the gutter blame annotations. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.blame.dateFormat#` setting","scope":"window"},"gitlens.blame.heatmap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a heatmap indicator in the gutter blame annotations","scope":"window"},"gitlens.blame.heatmap.location":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Adds a heatmap indicator on the left edge of the gutter blame annotations","Adds a heatmap indicator on the right edge of the gutter blame annotations"],"markdownDescription":"Specifies where the heatmap indicators will be shown in the gutter blame annotations","scope":"window"},"gitlens.blame.highlight.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight lines associated with the current line","scope":"window"},"gitlens.blame.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the associated line highlights will be shown","scope":"window"},"gitlens.blame.ignoreWhitespace":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to ignore whitespace when comparing revisions during blame operations","scope":"resource"},"gitlens.blame.separateLines":{"type":"boolean","default":true,"markdownDescription":"Specifies whether gutter blame annotations will be separated by a small gap","scope":"window"},"gitlens.blame.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the gutter blame annotations will be toggled","scope":"window"},"gitlens.codeLens.authors.command":{"type":"string","default":"gitlens.toggleFileBlame","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Reveals the commit in the Repositories view","Shows the commits within the range in the Search Commits view","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when an _authors_ code lens is clicked","scope":"window"},"gitlens.codeLens.authors.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an _authors_ code lens, showing number of authors of the file or code block and the most prominent author (if there is more than one)","scope":"window"},"gitlens.codeLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any Git code lens, by default. Use the `Toggle Git Code Lens` command (`gitlens.toggleCodeLens`) to toggle the Git code lens on and off for the current window","scope":"window"},"gitlens.codeLens.includeSingleLineSymbols":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to provide any Git code lens on symbols that span only a single line","scope":"window"},"gitlens.codeLens.recentChange.command":{"type":"string","default":"gitlens.showQuickCommitFileDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Reveals the commit in the Repositories view","Shows the commit in the Search Commits view","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when a _recent change_ code lens is clicked","scope":"window"},"gitlens.codeLens.recentChange.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _recent change_ code lens, showing the author and date of the most recent commit for the file or code block","scope":"window"},"gitlens.codeLens.scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, etc) lines"]},"minItems":1,"maxItems":4,"uniqueItems":true,"markdownDescription":"Specifies where Git code lens will be shown in the document","scope":"resource"},"gitlens.codeLens.scopesByLanguage":{"type":"array","default":[{"language":"azure-pipelines","scopes":["document"]},{"language":"ansible","scopes":["document"]},{"language":"css","scopes":["document"]},{"language":"html","scopes":["document"]},{"language":"json","scopes":["document"]},{"language":"jsonc","scopes":["document"]},{"language":"less","scopes":["document"]},{"language":"postcss","scopes":["document"]},{"language":"python","symbolScopes":["!Module"]},{"language":"scss","scopes":["document"]},{"language":"stylus","scopes":["document"]},{"language":"vue","scopes":["document"]},{"language":"yaml","scopes":["document"]}],"items":{"type":"object","required":["language"],"properties":{"language":{"type":"string","description":"Specifies the language to which this code lens override applies"},"scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks","custom"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, properties, etc) lines","Adds code lens at the start of symbols contained in `symbolScopes`"]},"minItems":1,"maxItems":4,"uniqueItems":true,"description":"Specifies where Git code lens will be shown in the document for the specified language"},"symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"description":"Specifies the set of document symbols where Git code lens will be shown in the document for the specified language. Must be a member of `SymbolKind`"}}},"uniqueItems":true,"markdownDescription":"Specifies where Git code lens will be shown in the document for the specified languages","scope":"resource"},"gitlens.codeLens.symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Specifies a set of document symbols where Git code lens will or will not be shown in the document. Prefix with `!` to avoid providing a Git code lens for the symbol. Must be a member of `SymbolKind`","scope":"resource"},"gitlens.currentLine.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) for the current line blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window","scope":"window"},"gitlens.currentLine.format":{"type":"string","default":"${author}, ${agoOrDate} • ${message}","markdownDescription":"Specifies the format of the current line blame annotation. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting","scope":"window"},"gitlens.currentLine.scrollable":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport","scope":"window"},"gitlens.debug":{"type":"boolean","default":false,"markdownDescription":"Specifies debug mode","scope":"window"},"gitlens.defaultDateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.defaultDateShortFormat":{"type":"string","default":null,"markdownDescription":"Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.defaultDateSource":{"type":"string","default":"authored","enum":["authored","committed"],"enumDescriptions":["Uses the date when the changes were authored (i.e. originally written)","Uses the date when the changes were committed"],"markdownDescription":"Specifies whether commit dates should use the authored or committed date","scope":"window"},"gitlens.defaultDateStyle":{"type":"string","default":"relative","enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed by default","scope":"window"},"gitlens.defaultGravatarsStyle":{"type":"string","default":"robohash","enum":["identicon","mp","monsterid","retro","robohash","wavatar"],"enumDescriptions":["A geometric pattern","A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)","A monster with different colors, faces, etc","8-bit arcade-style pixelated faces","A robot with different colors, faces, etc","A face with differing features and backgrounds"],"markdownDescription":"Specifies the style of the gravatar default (fallback) images","scope":"window"},"gitlens.gitCommands.closeOnFocusOut":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to dismiss the Git Commands menu when focus is lost (if not, press `ESC` to dismiss)","scope":"window"},"gitlens.gitCommands.search.matchAll":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to match all or any commit message search patterns","scope":"window"},"gitlens.gitCommands.search.matchCase":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to match commit search patterns with or without regard to casing","scope":"window"},"gitlens.gitCommands.search.matchRegex":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to match commit search patterns using regular expressions","scope":"window"},"gitlens.gitCommands.search.showResultsInView":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the commit search results in the _Search Commits_ view or directly within the quick pick menu","scope":"window"},"gitlens.gitCommands.skipConfirmations":{"type":"array","default":["fetch:command","stash-push:command","switch:command"],"items":{"type":"string","enum":["branch-create:command","branch-create:menu","co-authors:command","co-authors:menu","fetch:command","fetch:menu","pull:command","pull:menu","push:command","push:menu","stash-apply:command","stash-apply:menu","stash-pop:command","stash-pop:menu","stash-push:command","stash-push:menu","switch:command","switch:menu","tag-create:command","tag-create:menu"],"enumDescriptions":["Skips branch create confirmations when run from a command, e.g. a view action","Skips branch create confirmations when run from the `Git Commands` menu","Skips co-author confirmations when run from a command, e.g. a view action","Skips co-author confirmations when run from the `Git Commands` menu","Skips fetch confirmations when run from a command, e.g. a view action","Skips fetch confirmations when run from the `Git Commands` menu","Skips pull confirmations when run from a command, e.g. a view action","Skips pull confirmations when run from the `Git Commands` menu","Skips push confirmations when run from a command, e.g. a view action","Skips push confirmations when run from the `Git Commands` menu","Skips stash apply confirmations when run from a command, e.g. a view action","Skips stash apply confirmations when run from the `Git Commands` menu","Skips stash pop confirmations when run from a command, e.g. a view action","Skips stash pop confirmations when run from the `Git Commands` menu","Skips stash push confirmations when run from a command, e.g. a view action","Skips stash push confirmations when run from the `Git Commands` menu","Skips switch confirmations when run from a command, e.g. a view action","Skips switch confirmations when run from the `Git Commands` menu","Skips tag create confirmations when run from a command, e.g. a view action","Skips tag create confirmations when run from the `Git Commands` menu"]},"minItems":0,"maxItems":14,"uniqueItems":true,"markdownDescription":"Specifies which (and when) Git commands will skip the confirmation step, using the format: `git-command-name:(menu|command)`","scope":"window"},"gitlens.heatmap.ageThreshold":{"type":"string","default":"90","markdownDescription":"Specifies the age of the most recent change (in days) after which the gutter heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)","scope":"window"},"gitlens.heatmap.coldColor":{"type":"string","default":"#0a60f6","markdownDescription":"Specifies the base color of the gutter heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.hotColor":{"type":"string","default":"#f66a0a","markdownDescription":"Specifies the base color of the gutter heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the gutter heatmap annotations will be toggled","scope":"window"},"gitlens.hovers.annotations.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.over":{"type":"string","default":"line","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers when showing blame annotations","scope":"window"},"gitlens.hovers.currentLine.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for the current line","scope":"window"},"gitlens.hovers.currentLine.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for the current line","scope":"window"},"gitlens.hovers.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers for the current line","scope":"window"},"gitlens.hovers.currentLine.over":{"type":"string","default":"annotation","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers for the current line","scope":"window"},"gitlens.hovers.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in hovers","scope":"window"},"gitlens.hovers.changesDiff":{"type":"string","default":"line","enum":["line","hunk"],"enumDescriptions":["Shows only the changes to the line","Shows the set of related changes"],"markdownDescription":"Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover","scope":"window"},"gitlens.hovers.detailsMarkdownFormat":{"type":"string","default":"${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}\n\n${commands}","markdownDescription":"Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window"},"gitlens.hovers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers","scope":"window"},"gitlens.insiders":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to enable experimental features","scope":"window"},"gitlens.keymap":{"type":"string","default":"chorded","enum":["alternate","chorded","none"],"enumDescriptions":["Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)","Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)","No shortcut keys will be added"],"markdownDescription":"Specifies the keymap to use for GitLens shortcut keys","scope":"window"},"gitlens.liveshare.allowGuestAccess":{"type":"boolean","default":true,"description":"Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share","scope":"window"},"gitlens.menus":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"editor":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"details":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"editorGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"compare":{"type":"boolean"}}}]},"editorTab":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"explorer":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"scmGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"openClose":{"type":"boolean"},"stash":{"type":"boolean"},"stashInline":{"type":"boolean"}}}]},"scmItem":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"},"stash":{"type":"boolean"}}}]}}}],"default":{"editor":{"blame":false,"clipboard":true,"compare":true,"details":false,"history":false,"remote":false},"editorGroup":{"blame":true,"compare":true},"editorTab":{"clipboard":true,"compare":true,"history":true,"remote":true},"explorer":{"clipboard":true,"compare":true,"history":true,"remote":true},"scmGroup":{"compare":true,"openClose":true,"stash":true,"stashInline":true},"scmItem":{"clipboard":true,"compare":true,"history":true,"remote":true,"stash":true}},"markdownDescription":"Specifies which commands will be added to which menus","scope":"window"},"gitlens.mode.active":{"type":"string","markdownDescription":"Specifies the active GitLens mode, if any","scope":"window"},"gitlens.mode.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide the active GitLens mode in the status bar","scope":"window"},"gitlens.mode.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the active GitLens mode alignment in the status bar","scope":"window"},"gitlens.modes":{"type":"object","properties":{"zen":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}},"review":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}}},"additionalProperties":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"annotations":{"type":"string","enum":["blame","heatmap","recentChanges"],"enumDescriptions":["Shows the gutter blame annotations","Shows the gutter heatmap annotations","Shows the recently changed lines annotations"],"description":"Specifies which (if any) file annotations will be shown when this user-defined mode is active"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}},"default":{"zen":{"name":"Zen","statusBarItemName":"Zen","description":"for a zen-like experience, disables many visual features","codeLens":false,"currentLine":false,"hovers":false,"statusBar":false},"review":{"name":"Review","statusBarItemName":"Reviewing","description":"for reviewing code, enables many visual features","codeLens":true,"currentLine":true,"hovers":true}},"markdownDescription":"Specifies the user-defined GitLens modes","scope":"window"},"gitlens.outputLevel":{"type":"string","default":"errors","enum":["silent","errors","verbose","debug"],"enumDescriptions":["Logs nothing","Logs only errors","Logs all errors, warnings, and messages","Logs all errors, warnings, and messages with extra context useful for debugging"],"markdownDescription":"Specifies how much (if any) output will be sent to the GitLens output channel","scope":"window"},"gitlens.recentChanges.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the highlights of the recently changed lines will be shown","scope":"window"},"gitlens.recentChanges.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the recently changed lines annotations will be toggled","scope":"window"},"gitlens.remotes":{"type":"array","default":null,"items":{"type":"object","required":["type","domain"],"properties":{"type":{"type":"string","enum":["Bitbucket","BitbucketServer","Custom","GitHub","GitLab"],"description":"Specifies the type of the custom remote service"},"domain":{"type":"string","description":"Specifies the domain name of the custom remote service"},"name":{"type":"string","description":"Specifies an optional friendly name for the custom remote service"},"protocol":{"type":"string","default":"https","description":"Specifies an optional url protocol for the custom remote service"},"urls":{"type":"object","required":["repository","branches","branch","commit","file","fileInCommit","fileInBranch","fileLine","fileRange"],"properties":{"repository":{"type":"string","description":"Specifies the format of a respository url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path"},"branches":{"type":"string","description":"Specifies the format of a branches url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${branch}` &mdash; branch"},"branch":{"type":"string","description":"Specifies the format of a branch url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${branch}` &mdash; branch"},"commit":{"type":"string","description":"Specifies the format of a commit url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${id}` &mdash; commit id"},"file":{"type":"string","description":"Specifies the format of a file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${line}` &mdash; formatted line information"},"fileInBranch":{"type":"string","description":"Specifies the format of a branch file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${branch}` &mdash; branch\n ${line}` &mdash; formatted line information"},"fileInCommit":{"type":"string","description":"Specifies the format of a commit file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${id}` &mdash; commit id\n ${line}` &mdash; formatted line information"},"fileLine":{"type":"string","description":"Specifies the format of a line in a file url for the custom remote service\nAvailable tokens\n ${line}` &mdash; line"},"fileRange":{"type":"string","description":"Specifies the format of a range in a file url for the custom remote service\nAvailable tokens\n ${start}` &mdash; starting line\n ${end}` &mdash; ending line"}}},"description":"Specifies the url formats of the custom remote service"}},"uniqueItems":true,"markdownDescription":"Specifies user-defined remote (code-hosting) services or custom domains for built-in remote services","scope":"resource"},"gitlens.showWhatsNewAfterUpgrades":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show What's New after upgrading to new feature releases","scope":"window"},"gitlens.sortBranchesBy":{"type":"string","default":"name:desc","enum":["name:desc","name:asc","date:desc","date:asc"],"enumDescriptions":["Sorts branches by name in descending order","Sorts branches by name in ascending order","Sorts branches by the most recent commit date in descending order","Sorts branches by the most recent commit date in ascending order"],"markdownDescription":"Specifies how branches are sorted in quick pick menus and views","scope":"window"},"gitlens.sortTagsBy":{"type":"string","default":"name:desc","enum":["name:desc","name:asc","date:desc","date:asc"],"enumDescriptions":["Sorts tags by name in descending order","Sorts tags by name in ascending order","Sorts tags by date in descending order","Sorts tags by date in ascending order"],"markdownDescription":"Specifies how tags are sorted in quick pick menus and views","scope":"window"},"gitlens.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the blame alignment in the status bar","scope":"window"},"gitlens.statusBar.command":{"type":"string","default":"gitlens.showQuickCommitDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.diffWithWorking","gitlens.toggleCodeLens","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current line commit with the previous","Compares the current line commit with the working tree","Toggles Git code lens","Reveals the commit in the Repositories view","Shows the commit in the Search Commits view","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when the blame status bar item is clicked","scope":"window"},"gitlens.statusBar.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide blame information in the status bar","scope":"window"},"gitlens.statusBar.format":{"type":"string","default":"${author}, ${agoOrDate}","markdownDescription":"Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.statusBar.dateFormat#` setting","scope":"window"},"gitlens.statusBar.reduceFlicker":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors":{"type":"string","default":"Unsaved changes (cannot determine recent change or authors)","markdownDescription":"Specifies the string to be shown in place of both the _recent change_ and _authors_ code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly":{"type":"string","default":"Unsaved changes (cannot determine recent change)","markdownDescription":"Specifies the string to be shown in place of the _recent change_ code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.authorsOnly":{"type":"string","default":"Unsaved changes (cannot determine authors)","markdownDescription":"Specifies the string to be shown in place of the _authors_ code lens when there are unsaved changes","scope":"window"},"gitlens.views.commitFileFormat":{"type":"string","default":"${file}","markdownDescription":"Specifies the format of a committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.views.commitFileDescriptionFormat":{"type":"string","default":"${directory}${  ←  originalPath}","markdownDescription":"Specifies the description format of a committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.views.commitFormat":{"type":"string","default":"${❰ tips ❱➤  }${message}","markdownDescription":"Specifies the format of committed changes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window"},"gitlens.views.commitDescriptionFormat":{"type":"string","default":"${changes  •  }${author}, ${agoOrDate}","markdownDescription":"Specifies the description format of committed changes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window"},"gitlens.views.compare.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Compare_ view","scope":"window"},"gitlens.views.compare.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Compare_ view","scope":"window"},"gitlens.views.compare.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.compare.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.compare.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Compare_ view will display files","scope":"window"},"gitlens.views.compare.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.compare.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Compare_ view","scope":"window"},"gitlens.views.defaultItemLimit":{"type":"number","default":10,"markdownDescription":"Specifies the default number of items to show in a view list. Use 0 to specify no limit","scope":"window"},"gitlens.views.pageItemLimit":{"type":"number","default":20,"markdownDescription":"Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit","scope":"window"},"gitlens.views.fileHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _File History_ view","scope":"window"},"gitlens.views.fileHistory.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _File History_ view","scope":"window"},"gitlens.views.fileHistory.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _File History_ view","scope":"window"},"gitlens.views.lineHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _Line History_ view","scope":"window"},"gitlens.views.lineHistory.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Line History_ view","scope":"window"},"gitlens.views.lineHistory.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Line History_ view","scope":"window"},"gitlens.views.repositories.autoRefresh":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes","scope":"window"},"gitlens.views.repositories.autoReveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files","scope":"window"},"gitlens.views.repositories.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Repositories_ view will display branches","scope":"window"},"gitlens.views.repositories.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Repositories_ view in a compact display density","scope":"window"},"gitlens.views.repositories.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Repositories_ view","scope":"window"},"gitlens.views.repositories.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.repositories.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Repositories_ view will display files","scope":"window"},"gitlens.views.repositories.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.repositories.includeWorkingTree":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Repositories_ view","scope":"window"},"gitlens.views.repositories.showBranchComparison":{"anyOf":[{"enum":[false]},{"type":"string","enum":["branch","working"],"enumDescriptions":["Compares the current branch to the user-selected reference","Compares the working tree to the user-selected reference"]}],"default":"working","markdownDescription":"Specifies whether to show a comparison of a user-selected reference (branch, tag. etc) to the current branch or the working tree in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.showTrackingBranch":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tracking branch when displaying local branches in the _Repositories_ view","scope":"window"},"gitlens.views.search.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Search Commits_ view","scope":"window"},"gitlens.views.search.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Search Commits_ view","scope":"window"},"gitlens.views.search.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.search.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.search.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Search Commits_ view will display files","scope":"window"},"gitlens.views.search.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.search.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Search Commits_ view","scope":"window"},"gitlens.views.showRelativeDateMarkers":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views","scope":"window"},"gitlens.views.stashFileFormat":{"type":"string","default":"${file}","markdownDescription":"Specifies the format of a stashed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.views.stashFileDescriptionFormat":{"type":"string","default":"${directory}${  ←  originalPath}","markdownDescription":"Specifies the description format of a stashed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.views.stashFormat":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of stashes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window"},"gitlens.views.stashDescriptionFormat":{"type":"string","default":"${changes  •  }${agoOrDate}","markdownDescription":"Specifies the description format of stashes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window"},"gitlens.views.statusFileFormat":{"type":"string","default":"${working  }${file}","markdownDescription":"Specifies the format of the status of a working or committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.views.statusFileDescriptionFormat":{"type":"string","default":"${directory}${  ←  originalPath}","markdownDescription":"Specifies the description format of the status of a working or committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window"},"gitlens.advanced.abbreviatedShaLength":{"type":"number","default":"7","markdownDescription":"Specifies the length of abbreviated commit ids (shas)","scope":"window"},"gitlens.advanced.blame.customArguments":{"type":"array","default":null,"items":{"type":"string"},"markdownDescription":"Specifies additional arguments to pass to the `git blame` command","scope":"resource"},"gitlens.advanced.blame.delayAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait","scope":"window"},"gitlens.advanced.blame.sizeThresholdAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.caching.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether git output will be cached — changing the default is not recommended","scope":"window"},"gitlens.advanced.fileHistoryFollowsRenames":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file histories will follow renames — will affect how merge commits are shown in histories","scope":"window"},"gitlens.advanced.maxListItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a list. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.maxSearchItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a search. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.messages":{"type":"object","default":{"suppressCommitHasNoPreviousCommitWarning":false,"suppressCommitNotFoundWarning":false,"suppressFileNotUnderSourceControlWarning":false,"suppressGitDisabledWarning":false,"suppressGitVersionWarning":false,"suppressLineUncommittedWarning":false,"suppressNoRepositoryWarning":false,"suppressSupportGitLensNotification":false},"properties":{"suppressCommitHasNoPreviousCommitWarning":{"type":"boolean","default":false},"suppressCommitNotFoundWarning":{"type":"boolean","default":false},"suppressFileNotUnderSourceControlWarning":{"type":"boolean","default":false},"suppressGitDisabledWarning":{"type":"boolean","default":false},"suppressGitVersionWarning":{"type":"boolean","default":false},"suppressLineUncommittedWarning":{"type":"boolean","default":false},"suppressNoRepositoryWarning":{"type":"boolean","default":false},"suppressSupportGitLensNotification":{"type":"boolean","default":false}},"markdownDescription":"Specifies which messages should be suppressed","scope":"window"},"gitlens.advanced.quickPick.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to dismiss quick pick menus when focus is lost (if not, press `ESC` to dismiss)","scope":"window"},"gitlens.advanced.repositorySearchDepth":{"type":"number","default":1,"markdownDescription":"Specifies how many folders deep to search for repositories","scope":"resource"},"gitlens.advanced.similarityThreshold":{"anyOf":[{"type":"number"},{"type":"null"}],"default":null,"markdownDescription":"Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename","scope":"window"},"gitlens.advanced.telemetry.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable GitLens telemetry (even if enabled still abides by the overall `#telemetry.enableTelemetry#` setting","scope":"window"},"gitlens.advanced.useSymmetricDifferenceNotation":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to use the symmetric difference (three-dot) notation or the range (two-dot) notation for comparisons. See the [Git docs](https://git-scm.com/docs/gitrevisions#_dotted_range_notations)","scope":"window"}}},"colors":[{"id":"gitlens.gutterBackgroundColor","description":"Specifies the background color of the gutter blame annotations","defaults":{"dark":"#FFFFFF13","light":"#0000000C","highContrast":"#FFFFFF13"}},{"id":"gitlens.gutterForegroundColor","description":"Specifies the foreground color of the gutter blame annotations","defaults":{"dark":"#BEBEBE","light":"#747474","highContrast":"#BEBEBE"}},{"id":"gitlens.gutterUncommittedForegroundColor","description":"Specifies the foreground color of an uncommitted line in the gutter blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF2FF"}},{"id":"gitlens.trailingLineBackgroundColor","description":"Specifies the background color of the blame annotation for the current line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"gitlens.trailingLineForegroundColor","description":"Specifies the foreground color of the blame annotation for the current line","defaults":{"dark":"#99999959","light":"#99999959","highContrast":"#99999999"}},{"id":"gitlens.lineHighlightBackgroundColor","description":"Specifies the background color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF233","light":"#00BCF233","highContrast":"#00BCF233"}},{"id":"gitlens.lineHighlightOverviewRulerColor","description":"Specifies the overview ruler color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF299"}}],"commands":[{"command":"gitlens.supportGitLens","title":"Support GitLens ❤","category":"GitLens","icon":{"dark":"images/dark/icon-heart.svg","light":"images/light/icon-heart.svg"}},{"command":"gitlens.showSettingsPage","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showSettingsPage#repositories-view","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showSettingsPage#file-history-view","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showSettingsPage#line-history-view","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showSettingsPage#search-commits-view","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showSettingsPage#compare-view","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showWelcomePage","title":"Welcome","category":"GitLens"},{"command":"gitlens.showCompareView","title":"Show Compare View","category":"GitLens"},{"command":"gitlens.showFileHistoryView","title":"Show File History View","category":"GitLens"},{"command":"gitlens.showLineHistoryView","title":"Show Line History View","category":"GitLens"},{"command":"gitlens.showRepositoriesView","title":"Show Repositories View","category":"GitLens"},{"command":"gitlens.showSearchView","title":"Show Search Commits View","category":"GitLens"},{"command":"gitlens.diffDirectory","title":"Directory Compare Working Tree with...","category":"GitLens"},{"command":"gitlens.diffDirectoryWithHead","title":"Directory Compare All Changes","category":"GitLens"},{"command":"gitlens.diffHeadWith","title":"Compare HEAD with...","category":"GitLens"},{"command":"gitlens.diffWorkingWith","title":"Compare Working Tree with...","category":"GitLens"},{"command":"gitlens.diffWithRef","title":"Open Changes with...","category":"GitLens"},{"command":"gitlens.diffWithNext","title":"Open Changes with Next Revision","category":"GitLens","icon":{"dark":"images/dark/icon-next-commit.svg","light":"images/light/icon-next-commit.svg"},"enablement":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiffLeft","title":"Open Changes with Next Revision","category":"GitLens","icon":{"dark":"images/dark/icon-next-commit.svg","light":"images/light/icon-next-commit.svg"},"enablement":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","title":"Open Changes with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffWithPreviousInDiffRight","title":"Open Changes with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffLineWithPrevious","title":"Open Line Changes with Previous Revision","category":"GitLens"},{"command":"gitlens.diffWithRevision","title":"Open Changes with Revision...","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit-menu.svg","light":"images/light/icon-prev-commit-menu.svg"}},{"command":"gitlens.diffWithWorking","title":"Open Changes with Working File","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.diffLineWithWorking","title":"Open Line Changes with Working File","category":"GitLens"},{"command":"gitlens.toggleFileBlame","title":"Toggle File Blame Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.clearFileAnnotations","title":"Clear File Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git-orange.svg","light":"images/light/icon-git-orange.svg"}},{"command":"gitlens.computingFileAnnotations","title":"Computing File Annotations...","category":"GitLens","icon":{"dark":"images/dark/icon-git-progress.svg","light":"images/light/icon-git-progress.svg"}},{"command":"gitlens.toggleFileHeatmap","title":"Toggle File Heatmap Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.toggleFileRecentChanges","title":"Toggle Recent File Changes Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.toggleLineBlame","title":"Toggle Line Blame Annotations","category":"GitLens"},{"command":"gitlens.toggleCodeLens","title":"Toggle Git Code Lens","category":"GitLens"},{"command":"gitlens.gitCommands","title":"Git Commands","category":"GitLens"},{"command":"gitlens.switchMode","title":"Switch Mode","category":"GitLens"},{"command":"gitlens.toggleReviewMode","title":"Toggle Review Mode","category":"GitLens"},{"command":"gitlens.toggleZenMode","title":"Toggle Zen Mode","category":"GitLens"},{"command":"gitlens.showCommitSearch","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.showLastQuickPick","title":"Show Last Opened Quick Pick","category":"GitLens"},{"command":"gitlens.revealCommitInView","title":"Reveal Commit in Repositories View","category":"GitLens"},{"command":"gitlens.showCommitInView","title":"Show Commit in Search Commits View","category":"GitLens"},{"command":"gitlens.showCommitsInView","title":"Show Commits within Selection in Search Commits View","category":"GitLens"},{"command":"gitlens.showFileHistoryInView","title":"Show in File History View","category":"GitLens"},{"command":"gitlens.showQuickCommitDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickCommitFileDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickRevisionDetails","title":"Show Revision Details","category":"GitLens","icon":{"dark":"images/dark/icon-commit-horizontal.svg","light":"images/light/icon-commit-horizontal.svg"},"enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.showQuickFileHistory","title":"Show File History","category":"GitLens"},{"command":"gitlens.showQuickBranchHistory","title":"Show Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoHistory","title":"Show Current Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoStatus","title":"Show Repository Status","category":"GitLens"},{"command":"gitlens.showQuickStashList","title":"Show Stashes","category":"GitLens"},{"command":"gitlens.copyMessageToClipboard","title":"Copy Commit Message","category":"GitLens","icon":{"dark":"images/dark/icon-copy-message.svg","light":"images/light/icon-copy-message.svg"}},{"command":"gitlens.copyRemoteFileUrlToClipboard","title":"Copy Remote Url","category":"GitLens","icon":{"dark":"images/dark/icon-copy-link.svg","light":"images/light/icon-copy-link.svg"}},{"command":"gitlens.copyShaToClipboard","title":"Copy Commit ID","category":"GitLens","icon":{"dark":"images/dark/icon-copy.svg","light":"images/light/icon-copy.svg"}},{"command":"gitlens.closeUnchangedFiles","title":"Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openChangedFiles","title":"Open Changed Files","category":"GitLens"},{"command":"gitlens.openBranchesInRemote","title":"Open Branches on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openBranchInRemote","title":"Open Branch on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openCommitInRemote","title":"Open Commit on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openFileInRemote","title":"Open File on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openFileRevision","title":"Open Revision...","category":"GitLens"},{"command":"gitlens.openFileRevisionFrom","title":"Open Revision from...","category":"GitLens"},{"command":"gitlens.openRepoInRemote","title":"Open Repository on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openRevisionFile","title":"Open Revision","category":"GitLens","icon":{"dark":"images/dark/icon-open-revision.svg","light":"images/light/icon-open-revision.svg"},"enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.openWorkingFile","title":"Open File","category":"GitLens","icon":{"dark":"images/dark/icon-open-working-file.svg","light":"images/light/icon-open-working-file.svg"}},{"command":"gitlens.stashApply","title":"Apply Stash","category":"GitLens","icon":{"dark":"images/dark/icon-stash-pop.svg","light":"images/light/icon-stash-pop.svg"}},{"command":"gitlens.stashDelete","title":"Delete Stash...","category":"GitLens","icon":{"dark":"images/dark/icon-delete.svg","light":"images/light/icon-delete.svg"}},{"command":"gitlens.stashSave","title":"Stash All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-save.svg","light":"images/light/icon-stash-save.svg"}},{"command":"gitlens.stashSaveFiles","title":"Stash Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-save.svg","light":"images/light/icon-stash-save.svg"}},{"command":"gitlens.externalDiff","title":"Open Changes (with difftool)","category":"GitLens"},{"command":"gitlens.externalDiffAll","title":"Open All Changes (with difftool)","category":"GitLens"},{"command":"gitlens.resetSuppressedWarnings","title":"Reset Suppressed Warnings","category":"GitLens"},{"command":"gitlens.inviteToLiveShare","title":"Invite to Live Share","category":"GitLens","icon":{"dark":"images/dark/icon-link-color.svg","light":"images/light/icon-link-color.svg"}},{"command":"gitlens.exploreRepoAtRevision","title":"Explore Repository from Revision","category":"GitLens","icon":{"dark":"images/dark/icon-open-folder.svg","light":"images/light/icon-open-folder.svg"},"enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.views.exploreRepoAtRevision","title":"Explore Repository from Revision","category":"GitLens","icon":{"dark":"images/dark/icon-open-folder.svg","light":"images/light/icon-open-folder.svg"}},{"command":"gitlens.fetchRepositories","title":"Fetch Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-sync.svg","light":"images/light/icon-sync.svg"}},{"command":"gitlens.pullRepositories","title":"Pull Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-pull.svg","light":"images/light/icon-pull.svg"}},{"command":"gitlens.pushRepositories","title":"Push Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-push.svg","light":"images/light/icon-push.svg"}},{"command":"gitlens.views.addRemote","title":"Add Remote","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.views.highlightChanges","title":"Highlight Changes","category":"GitLens"},{"command":"gitlens.views.highlightRevisionChanges","title":"Highlight Revision Changes","category":"GitLens"},{"command":"gitlens.views.restore","title":"Restore","category":"GitLens","icon":{"dark":"images/dark/icon-checkout.svg","light":"images/light/icon-checkout.svg"}},{"command":"gitlens.views.switchToBranch","title":"Switch to Branch","category":"GitLens","icon":{"dark":"images/dark/icon-checkout.svg","light":"images/light/icon-checkout.svg"}},{"command":"gitlens.views.switchToCommit","title":"Switch to Commit","category":"GitLens","icon":{"dark":"images/dark/icon-checkout.svg","light":"images/light/icon-checkout.svg"}},{"command":"gitlens.views.switchToTag","title":"Switch to Tag","category":"GitLens","icon":{"dark":"images/dark/icon-checkout.svg","light":"images/light/icon-checkout.svg"}},{"command":"gitlens.views.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.repositories.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.fileHistory.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.lineHistory.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.compare.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.search.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.pruneRemote","title":"Prune","category":"GitLens"},{"command":"gitlens.views.fetch","title":"Fetch","category":"GitLens","icon":{"dark":"images/dark/icon-sync.svg","light":"images/light/icon-sync.svg"}},{"command":"gitlens.views.pull","title":"Pull","category":"GitLens","icon":{"dark":"images/dark/icon-pull.svg","light":"images/light/icon-pull.svg"}},{"command":"gitlens.views.push","title":"Push","category":"GitLens","icon":{"dark":"images/dark/icon-push.svg","light":"images/light/icon-push.svg"}},{"command":"gitlens.views.pushWithForce","title":"Push (force)","category":"GitLens","icon":{"dark":"images/dark/icon-push-force.svg","light":"images/light/icon-push-force.svg"}},{"command":"gitlens.views.openInTerminal","title":"Open in Terminal","category":"GitLens"},{"command":"gitlens.views.setAsDefault","title":"Set as Default","category":"GitLens"},{"command":"gitlens.views.unsetAsDefault","title":"Unset as Default","category":"GitLens"},{"command":"gitlens.views.stageDirectory","title":"Stage All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.views.stageFile","title":"Stage Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.views.unstageDirectory","title":"Unstage All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-minus.svg","light":"images/light/icon-minus.svg"}},{"command":"gitlens.views.unstageFile","title":"Unstage Changes","category":"GitLens","icon":{"dark":"images/dark/icon-minus.svg","light":"images/light/icon-minus.svg"}},{"command":"gitlens.views.star","title":"Add to Favorites","category":"GitLens","icon":{"dark":"images/dark/icon-star.svg","light":"images/light/icon-star.svg"}},{"command":"gitlens.views.unstar","title":"Remove from Favorites","category":"GitLens","icon":{"dark":"images/dark/icon-star-filled.svg","light":"images/light/icon-star-filled.svg"}},{"command":"gitlens.views.openDirectoryDiff","title":"Open Directory Compare","category":"GitLens"},{"command":"gitlens.views.openDirectoryDiffWithWorking","title":"Open Directory Compare with Working Tree","category":"GitLens"},{"command":"gitlens.views.openChanges","title":"Open Changes","category":"GitLens"},{"command":"gitlens.views.openChangesWithWorking","title":"Open Changes with Working File","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.views.openFile","title":"Open File","category":"GitLens","icon":{"dark":"images/dark/icon-open-file.svg","light":"images/light/icon-open-file.svg"}},{"command":"gitlens.views.openFileRevision","title":"Open Revision","category":"GitLens","icon":{"dark":"images/dark/icon-open-file.svg","light":"images/light/icon-open-file.svg"}},{"command":"gitlens.views.openFileRevisionInRemote","title":"Open Revision on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.views.openChangedFiles","title":"Open Files","category":"GitLens"},{"command":"gitlens.views.openChangedFileDiffs","title":"Open All Changes","category":"GitLens"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","title":"Open All Changes with Working Tree","category":"GitLens"},{"command":"gitlens.views.openChangedFileRevisions","title":"Open Revisions","category":"GitLens"},{"command":"gitlens.views.applyChanges","title":"Apply Changes","category":"GitLens"},{"command":"gitlens.views.closeRepository","title":"Close Repository","category":"GitLens"},{"command":"gitlens.views.compareAncestryWithWorking","title":"Compare Ancestry with Working Tree","category":"GitLens"},{"command":"gitlens.views.compareWithHead","title":"Compare with HEAD","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.compareWithRemote","title":"Compare with Remote","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-remote.svg","light":"images/light/icon-compare-ref-remote.svg"}},{"command":"gitlens.views.compareWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareFileWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectFileForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareWithWorking","title":"Compare with Working Tree","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.views.contributors.addAuthors","title":"Add Co-authors","category":"GitLens","icon":{"dark":"images/dark/icon-person-add.svg","light":"images/light/icon-person-add.svg"}},{"command":"gitlens.views.contributor.addAuthor","title":"Add as Co-author","category":"GitLens","icon":{"dark":"images/dark/icon-person-add.svg","light":"images/light/icon-person-add.svg"}},{"command":"gitlens.views.contributor.copyToClipboard","title":"Copy","category":"GitLens","icon":{"dark":"images/dark/icon-copy.svg","light":"images/light/icon-copy.svg"}},{"command":"gitlens.views.setComparisonToTwoDot","title":"Switch to Two-dot Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-compare-twodot.svg","light":"images/light/icon-compare-twodot.svg"}},{"command":"gitlens.views.setComparisonToThreeDot","title":"Switch to Three-dot Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-compare-threedot.svg","light":"images/light/icon-compare-threedot.svg"}},{"command":"gitlens.views.cherryPick","title":"Cherry Pick Commit...","category":"GitLens"},{"command":"gitlens.views.createBranch","title":"Create Branch...","category":"GitLens"},{"command":"gitlens.views.deleteBranch","title":"Delete Branch...","category":"GitLens"},{"command":"gitlens.views.renameBranch","title":"Rename Branch...","category":"GitLens"},{"command":"gitlens.views.createTag","title":"Create Tag...","category":"GitLens"},{"command":"gitlens.views.deleteTag","title":"Delete Tag...","category":"GitLens"},{"command":"gitlens.views.mergeBranchInto","title":"Merge Branch into Current...","category":"GitLens"},{"command":"gitlens.views.rebaseOntoBranch","title":"Rebase Current onto Branch...","category":"GitLens"},{"command":"gitlens.views.rebaseOntoCommit","title":"Rebase Current onto Commit...","category":"GitLens"},{"command":"gitlens.views.rebaseOntoUpstream","title":"Rebase Current onto Upstream...","category":"GitLens"},{"command":"gitlens.views.reset","title":"Reset to Commit...","category":"GitLens"},{"command":"gitlens.views.revert","title":"Revert Commit...","category":"GitLens"},{"command":"gitlens.views.terminalPushCommit","title":"Push to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRemoveRemote","title":"Remove Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.views.repositories.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.repositories.setBranchComparisonToWorking","title":"Switch to Working Tree Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.views.repositories.setBranchComparisonToBranch","title":"Switch to Branch Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.repositories.setBranchesLayoutToList","title":"Toggle Branch Layout (Tree)","category":"GitLens","icon":{"dark":"images/dark/icon-view-tree.svg","light":"images/light/icon-view-tree.svg"}},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","title":"Toggle Branch Layout (List)","category":"GitLens","icon":{"dark":"images/dark/icon-view-list.svg","light":"images/light/icon-view-list.svg"}},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","title":"Toggle File Layout (Tree)","category":"GitLens","icon":{"dark":"images/dark/icon-view-tree.svg","light":"images/light/icon-view-tree.svg"}},{"command":"gitlens.views.repositories.setFilesLayoutToList","title":"Toggle File Layout (Auto)","category":"GitLens","icon":{"dark":"images/dark/icon-view-auto.svg","light":"images/light/icon-view-auto.svg"}},{"command":"gitlens.views.repositories.setFilesLayoutToTree","title":"Toggle File Layout (List)","category":"GitLens","icon":{"dark":"images/dark/icon-view-list.svg","light":"images/light/icon-view-list.svg"}},{"command":"gitlens.views.repositories.setAutoRefreshToOn","title":"Enable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","title":"Disable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.fileHistory.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.fileHistory.changeBase","title":"Change Base...","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","title":"Resume File Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location.svg","light":"images/light/icon-location.svg"}},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","title":"Pause File Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location-filled.svg","light":"images/light/icon-location-filled.svg"}},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.views.lineHistory.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.lineHistory.changeBase","title":"Change Base...","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","title":"Resume Line Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location.svg","light":"images/light/icon-location.svg"}},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","title":"Pause Line Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location-filled.svg","light":"images/light/icon-location-filled.svg"}},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.views.compare.selectForCompare","title":"Compare References...","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.compare.clear","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-clear.svg","light":"images/light/icon-clear.svg"}},{"command":"gitlens.views.compare.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.compare.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens","icon":{"dark":"images/dark/icon-view-tree.svg","light":"images/light/icon-view-tree.svg"}},{"command":"gitlens.views.compare.setFilesLayoutToList","title":"List Layout","category":"GitLens","icon":{"dark":"images/dark/icon-view-auto.svg","light":"images/light/icon-view-auto.svg"}},{"command":"gitlens.views.compare.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens","icon":{"dark":"images/dark/icon-view-list.svg","light":"images/light/icon-view-list.svg"}},{"command":"gitlens.views.compare.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.views.compare.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.views.compare.pinComparison","title":"Pin Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-pin.svg","light":"images/light/icon-pin.svg"}},{"command":"gitlens.views.compare.unpinComparison","title":"Unpin Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-unpin.svg","light":"images/light/icon-unpin.svg"}},{"command":"gitlens.views.compare.swapComparison","title":"Swap Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-swap.svg","light":"images/light/icon-swap.svg"}},{"command":"gitlens.views.search.searchCommits","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.views.search.clear","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-clear.svg","light":"images/light/icon-clear.svg"}},{"command":"gitlens.views.search.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.search.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens","icon":{"dark":"images/dark/icon-view-tree.svg","light":"images/light/icon-view-tree.svg"}},{"command":"gitlens.views.search.setFilesLayoutToList","title":"List Layout","category":"GitLens","icon":{"dark":"images/dark/icon-view-auto.svg","light":"images/light/icon-view-auto.svg"}},{"command":"gitlens.views.search.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens","icon":{"dark":"images/dark/icon-view-list.svg","light":"images/light/icon-view-list.svg"}},{"command":"gitlens.views.search.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.views.search.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.views.dismissNode","title":"Dismiss","category":"GitLens","icon":{"dark":"images/dark/icon-close.svg","light":"images/light/icon-close.svg"}},{"command":"gitlens.views.expandNode","title":"Expand","category":"GitLens"},{"command":"gitlens.views.refreshNode","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.showMoreChildren","title":"Show More","category":"GitLens","icon":{"dark":"images/dark/icon-unfold.svg","light":"images/light/icon-unfold.svg"}},{"command":"gitlens.views.showAllChildren","title":"Show All","category":"GitLens","icon":{"dark":"images/dark/icon-unfold.svg","light":"images/light/icon-unfold.svg"}}],"menus":{"commandPalette":[{"command":"gitlens.showSettingsPage#repositories-view","when":"false"},{"command":"gitlens.showSettingsPage#file-history-view","when":"false"},{"command":"gitlens.showSettingsPage#line-history-view","when":"false"},{"command":"gitlens.showSettingsPage#search-commits-view","when":"false"},{"command":"gitlens.showSettingsPage#compare-view","when":"false"},{"command":"gitlens.showCompareView","when":"gitlens:enabled"},{"command":"gitlens.showFileHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showLineHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showRepositoriesView","when":"gitlens:enabled"},{"command":"gitlens.showSearchView","when":"gitlens:enabled"},{"command":"gitlens.diffDirectory","when":"gitlens:enabled"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled"},{"command":"gitlens.diffHeadWith","when":"gitlens:enabled"},{"command":"gitlens.diffWorkingWith","when":"gitlens:enabled"},{"command":"gitlens.diffWithRef","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithNext","when":"gitlens:activeFileStatus =~ /revision/ && !isInDiffEditor"},{"command":"gitlens.diffWithNext","when":"gitlens:activeFileStatus =~ /revision/ && isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffLeft","when":"gitlens:activeFileStatus =~ /revision/ && isInDiffLeftEditor"},{"command":"gitlens.diffWithPrevious","when":"gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"},{"command":"gitlens.diffWithPrevious","when":"gitlens:activeFileStatus =~ /tracked/ && isInDiffLeftEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","when":"gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"},{"command":"gitlens.diffLineWithPrevious","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.externalDiff","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled"},{"command":"gitlens.toggleFileBlame","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed"},{"command":"gitlens.computingFileAnnotations","when":"false"},{"command":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleFileRecentChanges","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleLineBlame","when":"gitlens:enabled"},{"command":"gitlens.toggleCodeLens","when":"gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.gitCommands","when":"gitlens:enabled && !gitlens:readonly"},{"command":"gitlens.switchMode","when":"gitlens:enabled"},{"command":"gitlens.toggleReviewMode","when":"gitlens:enabled"},{"command":"gitlens.toggleZenMode","when":"gitlens:enabled"},{"command":"gitlens.showCommitSearch","when":"gitlens:enabled"},{"command":"gitlens.showLastQuickPick","when":"gitlens:enabled"},{"command":"gitlens.revealCommitInView","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showCommitInView","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showCommitsInView","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickCommitDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickCommitFileDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickBranchHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled"},{"command":"gitlens.showQuickStashList","when":"gitlens:enabled"},{"command":"gitlens.copyMessageToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.copyShaToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openBranchesInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openBranchInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openCommitInRemote","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileInRemote","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openFileRevisionFrom","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openRepoInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openRevisionFile","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.stashApply","when":"gitlens:enabled && !gitlens:readonly"},{"command":"gitlens.stashDelete","when":"false"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly"},{"command":"gitlens.stashSaveFiles","when":"false"},{"command":"gitlens.resetSuppressedWarnings","when":"gitlens:enabled"},{"command":"gitlens.inviteToLiveShare","when":"false"},{"command":"gitlens.exploreRepoAtRevision","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.views.exploreRepoAtRevision","when":"false"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.views.addRemote","when":"false"},{"command":"gitlens.views.highlightChanges","when":"false"},{"command":"gitlens.views.highlightRevisionChanges","when":"false"},{"command":"gitlens.views.restore","when":"false"},{"command":"gitlens.views.switchToBranch","when":"false"},{"command":"gitlens.views.switchToCommit","when":"false"},{"command":"gitlens.views.switchToTag","when":"false"},{"command":"gitlens.views.copy","when":"false"},{"command":"gitlens.views.repositories.copy","when":"false"},{"command":"gitlens.views.fileHistory.copy","when":"false"},{"command":"gitlens.views.lineHistory.copy","when":"false"},{"command":"gitlens.views.compare.copy","when":"false"},{"command":"gitlens.views.search.copy","when":"false"},{"command":"gitlens.views.pruneRemote","when":"false"},{"command":"gitlens.views.fetch","when":"false"},{"command":"gitlens.views.pull","when":"false"},{"command":"gitlens.views.push","when":"false"},{"command":"gitlens.views.pushWithForce","when":"false"},{"command":"gitlens.views.openInTerminal","when":"false"},{"command":"gitlens.views.setAsDefault","when":"false"},{"command":"gitlens.views.unsetAsDefault","when":"false"},{"command":"gitlens.views.stageDirectory","when":"false"},{"command":"gitlens.views.stageFile","when":"false"},{"command":"gitlens.views.unstageDirectory","when":"false"},{"command":"gitlens.views.unstageFile","when":"false"},{"command":"gitlens.views.star","when":"false"},{"command":"gitlens.views.unstar","when":"false"},{"command":"gitlens.views.openChanges","when":"false"},{"command":"gitlens.views.openDirectoryDiff","when":"false"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"false"},{"command":"gitlens.views.openChangesWithWorking","when":"false"},{"command":"gitlens.views.openFile","when":"false"},{"command":"gitlens.views.openFileRevision","when":"false"},{"command":"gitlens.views.openFileRevisionInRemote","when":"false"},{"command":"gitlens.views.openChangedFiles","when":"false"},{"command":"gitlens.views.openChangedFileDiffs","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","when":"false"},{"command":"gitlens.views.openChangedFileRevisions","when":"false"},{"command":"gitlens.views.applyChanges","when":"false"},{"command":"gitlens.views.closeRepository","when":"false"},{"command":"gitlens.views.compareAncestryWithWorking","when":"false"},{"command":"gitlens.views.compareWithHead","when":"false"},{"command":"gitlens.views.compareWithRemote","when":"false"},{"command":"gitlens.views.compareWithSelected","when":"false"},{"command":"gitlens.views.selectForCompare","when":"false"},{"command":"gitlens.views.compareFileWithSelected","when":"false"},{"command":"gitlens.views.selectFileForCompare","when":"false"},{"command":"gitlens.views.compareWithWorking","when":"false"},{"command":"gitlens.views.contributors.addAuthors","when":"false"},{"command":"gitlens.views.contributor.addAuthor","when":"false"},{"command":"gitlens.views.contributor.copyToClipboard","when":"false"},{"command":"gitlens.views.setComparisonToTwoDot","when":"false"},{"command":"gitlens.views.setComparisonToThreeDot","when":"false"},{"command":"gitlens.views.createBranch","when":"false"},{"command":"gitlens.views.deleteBranch","when":"false"},{"command":"gitlens.views.renameBranch","when":"false"},{"command":"gitlens.views.cherryPick","when":"false"},{"command":"gitlens.views.mergeBranchInto","when":"false"},{"command":"gitlens.views.rebaseOntoBranch","when":"false"},{"command":"gitlens.views.rebaseOntoCommit","when":"false"},{"command":"gitlens.views.rebaseOntoUpstream","when":"false"},{"command":"gitlens.views.reset","when":"false"},{"command":"gitlens.views.revert","when":"false"},{"command":"gitlens.views.terminalPushCommit","when":"false"},{"command":"gitlens.views.terminalRemoveRemote","when":"false"},{"command":"gitlens.views.createTag","when":"false"},{"command":"gitlens.views.deleteTag","when":"false"},{"command":"gitlens.views.repositories.refresh","when":"false"},{"command":"gitlens.views.repositories.setBranchComparisonToWorking","when":"false"},{"command":"gitlens.views.repositories.setBranchComparisonToBranch","when":"false"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"false"},{"command":"gitlens.views.fileHistory.refresh","when":"false"},{"command":"gitlens.views.fileHistory.changeBase","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.refresh","when":"false"},{"command":"gitlens.views.lineHistory.changeBase","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.compare.selectForCompare","when":"gitlens:enabled && config.gitlens.views.compare.enabled"},{"command":"gitlens.views.compare.clear","when":"false"},{"command":"gitlens.views.compare.refresh","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.compare.setKeepResultsToOn","when":"false"},{"command":"gitlens.views.compare.setKeepResultsToOff","when":"false"},{"command":"gitlens.views.compare.pinComparison","when":"false"},{"command":"gitlens.views.compare.unpinComparison","when":"false"},{"command":"gitlens.views.search.searchCommits","when":"false"},{"command":"gitlens.views.search.clear","when":"false"},{"command":"gitlens.views.search.refresh","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.search.setKeepResultsToOn","when":"false"},{"command":"gitlens.views.search.setKeepResultsToOff","when":"false"},{"command":"gitlens.views.dismissNode","when":"false"},{"command":"gitlens.views.expandNode","when":"false"},{"command":"gitlens.views.refreshNode","when":"false"},{"command":"gitlens.views.showMoreChildren","when":"false"},{"command":"gitlens.views.showAllChildren","when":"false"}],"editor/context":[{"command":"gitlens.showQuickCommitFileDetails","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.details","group":"2_gitlens@1"},{"command":"gitlens.toggleFileBlame","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.blame","group":"2_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"2_gitlens_remote@1"},{"command":"gitlens.openCommitInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"2_gitlens_remote@2"},{"command":"gitlens.diffLineWithPrevious","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"3_compare@1"},{"command":"gitlens.diffLineWithWorking","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"3_compare@2"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history","group":"4_gitlens@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history","group":"4_gitlens@2"},{"command":"gitlens.copyShaToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_cutcopypaste_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_cutcopypaste_gitlens@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.clipboard","group":"9_cutcopypaste_gitlens@3"}],"editor/title":[{"command":"gitlens.exploreRepoAtRevision","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/","group":"navigation@-100"},{"command":"gitlens.diffWithWorking","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/","group":"navigation@-99"},{"command":"gitlens.openRevisionFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/ && isInDiffEditor","group":"navigation@-98"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/","group":"navigation@-97"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme == git && !isInDiffEditor","group":"navigation@-97"},{"command":"gitlens.diffWithPrevious","alt":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@97"},{"command":"gitlens.diffWithPrevious","alt":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffLeftEditor","group":"navigation@97"},{"command":"gitlens.diffWithPreviousInDiffRight","alt":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@97"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare","group":"navigation@98"},{"command":"gitlens.diffWithNext","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@99"},{"command":"gitlens.diffWithNext","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiffLeft","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffLeftEditor","group":"navigation@99"},{"command":"gitlens.toggleFileBlame","alt":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.computingFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computing && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed && config.gitlens.menus.editorGroup.blame","group":"navigation@100"}],"editor/title/context":[{"command":"gitlens.openRevisionFile","when":"resourceScheme == gitlens","group":"1_co_gitlens@1"},{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens","group":"1_co_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.remote","group":"1_co_gitlens@3"},{"command":"gitlens.diffWithPrevious","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@1"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@2"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@3"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.menus.editorTab.history","group":"1_co_gitlens_2@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:enabled && config.gitlens.menus.editorTab.history","group":"1_co_gitlens_2@2"},{"command":"gitlens.exploreRepoAtRevision","when":"resourceScheme == gitlens","group":"1_co_gitlens_3@1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.clipboard","group":"1_cutcopypaste@100"}],"explorer/context":[{"command":"gitlens.openFileInRemote","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.remote","group":"1_gitlens@100"},{"command":"gitlens.diffWithPrevious","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"3_compare@-2"},{"command":"gitlens.diffWithRevision","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"3_compare@-1"},{"command":"gitlens.showQuickFileHistory","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_gitlens@1"},{"command":"gitlens.showFileHistoryInView","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_gitlens@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.clipboard","group":"6_copypath@100"}],"scm/resourceGroup/context":[{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stashInline","group":"inline@-1"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stash","group":"1_modification@100"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"2_gitlens@1"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"2_gitlens@2"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"3_gitlens@3"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"3_gitlens@4"}],"scm/resourceState/context":[{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.remote","group":"navigation"},{"command":"gitlens.externalDiff","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"navigation"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"1_gitlens@1"},{"command":"gitlens.diffWithRef","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"1_gitlens@2"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_gitlens_1@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_gitlens_1@2"},{"command":"gitlens.stashSaveFiles","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmItem.stash","group":"1_modification@-1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.clipboard","group":"9_gitlens@1"}],"view/title":[{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@10"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@11"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@12"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.files.layout == auto","group":"navigation@13"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.files.layout == list","group":"navigation@13"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.files.layout == tree","group":"navigation@13"},{"command":"gitlens.views.repositories.refresh","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@99"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && !gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.changeBase","when":"view =~ /^gitlens\\.views\\.fileHistory:/","group":"navigation@11"},{"command":"gitlens.views.fileHistory.refresh","when":"view =~ /^gitlens\\.views\\.fileHistory:/","group":"navigation@99"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && !gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.changeBase","when":"view =~ /^gitlens\\.views\\.lineHistory:/","group":"navigation@11"},{"command":"gitlens.views.lineHistory.refresh","when":"view =~ /^gitlens\\.views\\.lineHistory:/","group":"navigation@99"},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.compare.selectForCompare","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@10"},{"command":"gitlens.views.compare.setKeepResultsToOn","when":"view =~ /^gitlens\\.views\\.compare:/ && !gitlens:views:compare:keepResults","group":"navigation@11"},{"command":"gitlens.views.compare.setKeepResultsToOff","when":"view =~ /^gitlens\\.views\\.compare:/ && gitlens:views:compare:keepResults","group":"navigation@11"},{"command":"gitlens.views.compare.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.compare:/ && config.gitlens.views.compare.files.layout == auto","group":"navigation@12"},{"command":"gitlens.views.compare.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.compare:/ && config.gitlens.views.compare.files.layout == list","group":"navigation@12"},{"command":"gitlens.views.compare.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.compare:/ && config.gitlens.views.compare.files.layout == tree","group":"navigation@12"},{"command":"gitlens.views.compare.clear","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@98"},{"command":"gitlens.views.compare.refresh","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@99"},{"command":"gitlens.views.search.searchCommits","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@10"},{"command":"gitlens.views.search.setKeepResultsToOn","when":"view =~ /^gitlens\\.views\\.search:/ && !gitlens:views:search:keepResults","group":"navigation@11"},{"command":"gitlens.views.search.setKeepResultsToOff","when":"view =~ /^gitlens\\.views\\.search:/ && gitlens:views:search:keepResults","group":"navigation@11"},{"command":"gitlens.views.search.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.search:/ && config.gitlens.views.search.files.layout == auto","group":"navigation@12"},{"command":"gitlens.views.search.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.search:/ && config.gitlens.views.search.files.layout == list","group":"navigation@12"},{"command":"gitlens.views.search.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.search:/ && config.gitlens.views.search.files.layout == tree","group":"navigation@12"},{"command":"gitlens.views.search.clear","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@98"},{"command":"gitlens.views.search.refresh","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@99"},{"command":"gitlens.supportGitLens","when":"view =~ /^gitlens\\.views\\..*:/ && config.gitlens.advanced.messages.suppressSupportGitLensNotification != true && gitlens:views:supportGitLens:hide != true","group":"navigation@1"},{"command":"gitlens.showSettingsPage#repositories-view","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"9_gitlens"},{"command":"gitlens.showSettingsPage#file-history-view","when":"view =~ /^gitlens\\.views\\.fileHistory:/","group":"9_gitlens"},{"command":"gitlens.showSettingsPage#line-history-view","when":"view =~ /^gitlens\\.views\\.lineHistory:/","group":"9_gitlens"},{"command":"gitlens.showSettingsPage#search-commits-view","when":"view =~ /^gitlens\\.views\\.search:/","group":"9_gitlens"},{"command":"gitlens.showSettingsPage","when":"view =~ /^gitlens\\.views\\.compare:/","group":"9_gitlens"}],"view/item/context":[{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == tree","group":"inline@1"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == list","group":"inline@1"},{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/","group":"inline@98"},{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.push","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+ahead\\b)/","group":"inline@8","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+behind\\b)/","group":"inline@9"},{"command":"gitlens.views.switchToBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b/","group":"inline@10"},{"command":"gitlens.views.compareWithRemote","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/","group":"inline@97"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/","group":"inline@98","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)/","group":"inline@98"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.switchToBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.mergeBranchInto","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@3"},{"command":"gitlens.views.rebaseOntoBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@4"},{"command":"gitlens.views.rebaseOntoUpstream","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)/","group":"1_gitlens_actions@4"},{"command":"gitlens.views.deleteBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@5"},{"command":"gitlens.views.renameBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b/","group":"1_gitlens_actions@6"},{"command":"gitlens.views.createBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b/","group":"1_gitlens_actions@7"},{"command":"gitlens.views.createTag","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b/","group":"1_gitlens_actions@8"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"viewItem =~ /gitlens:(branch|tag)\\b/","group":"3_gitlens_explore@20"},{"command":"gitlens.views.compareWithRemote","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/","group":"4_gitlens_compare@1"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/","group":"4_gitlens_compare@2"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"4_gitlens_compare@3"},{"command":"gitlens.views.compareAncestryWithWorking","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"4_gitlens_compare@4"},{"command":"gitlens.views.compareWithSelected","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && gitlens:views:canCompare","group":"4_gitlens_compare@98"},{"command":"gitlens.views.selectForCompare","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"4_gitlens_compare@99"},{"command":"gitlens.views.compareFileWithSelected","when":"viewItem =~ /gitlens:file\\b/ && gitlens:views:canCompare:file","group":"4_gitlens_compare@98"},{"command":"gitlens.views.selectFileForCompare","when":"viewItem =~ /gitlens:file\\b/","group":"4_gitlens_compare@99"},{"command":"gitlens.openBranchInRemote","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"5_gitlens_open@1"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.contributors.addAuthors","when":"viewItem =~ /gitlens:contributors\\b/","group":"inline@1"},{"command":"gitlens.views.contributors.addAuthors","when":"viewItem =~ /gitlens:contributors\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.inviteToLiveShare","when":"gitlens:vsls && gitlens:vsls != guest && viewItem =~ /gitlens:contributor\\b/","group":"inline@1"},{"command":"gitlens.views.contributor.addAuthor","when":"viewItem =~ /gitlens:contributor\\b/","group":"inline@2"},{"command":"gitlens.views.contributor.copyToClipboard","when":"viewItem =~ /gitlens:contributor\\b/","group":"inline@98"},{"command":"gitlens.inviteToLiveShare","when":"gitlens:vsls && gitlens:vsls != guest && viewItem =~ /gitlens:contributor\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.contributor.addAuthor","when":"viewItem =~ /gitlens:contributor\\b/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.contributor.copyToClipboard","when":"viewItem =~ /gitlens:contributor\\b/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:commit\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"inline@99"},{"command":"gitlens.views.cherryPick","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.revert","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.reset","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/","group":"1_gitlens_actions@3"},{"command":"gitlens.views.switchToCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions@4"},{"command":"gitlens.views.rebaseOntoCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions@5"},{"command":"gitlens.views.createBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions_1@1"},{"command":"gitlens.views.createTag","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.openChangedFileDiffs","when":"viewItem =~ /gitlens:(commit|stash|results:files)\\b/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","when":"viewItem =~ /gitlens:(commit|stash|results:files)\\b/","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openChangedFiles","when":"viewItem =~ /gitlens:(commit|stash|results:files)\\b/","group":"2_gitlens_quickopen_@1"},{"command":"gitlens.views.openChangedFileRevisions","when":"viewItem =~ /gitlens:(commit|stash|results:files)\\b/","group":"2_gitlens_quickopen_@2"},{"command":"gitlens.revealCommitInView","when":"viewItem =~ /gitlens:commit\\b/","group":"3_gitlens_explore@1"},{"command":"gitlens.showCommitInView","when":"viewItem =~ /gitlens:commit\\b/","group":"3_gitlens_explore@2"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"5_gitlens_open@1"},{"command":"gitlens.views.terminalPushCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/","group":"6_gitlens_terminal@1"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))\\b/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(commit|stash|file\\b(?=.*?\\b\\+committed\\b))\\b/","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/","group":"inline@1"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+history\\b)/","group":"inline@1","alt":"gitlens.views.openFileRevision"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+history\\b)/","group":"inline@1","alt":"gitlens.views.openFile"},{"command":"gitlens.views.stageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/","group":"inline@1"},{"command":"gitlens.views.unstageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/","group":"inline@1"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b/","group":"inline@97"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(file\\b(?!.*?\\b\\+(un)?staged\\b)|history:(file|line))\\b/ && gitlens:hasRemotes","group":"inline@99","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.views.stageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.unstageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.stashSaveFiles","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+(un)?staged\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openChanges","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.externalDiff","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens_quickopen@3"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/","group":"2_gitlens_quickopen_@1"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/","group":"2_gitlens_quickopen_@2"},{"command":"gitlens.views.highlightChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/","group":"3_gitlens_explore@1"},{"command":"gitlens.views.highlightRevisionChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/","group":"3_gitlens_explore@2"},{"command":"gitlens.showFileHistoryInView","when":"viewItem =~ /gitlens:file\\b/","group":"3_gitlens_explore@4"},{"command":"gitlens.revealCommitInView","when":"viewItem =~ /gitlens:file\\b(?!(:stash|:status))/","group":"3_gitlens_explore@3"},{"command":"gitlens.showCommitInView","when":"viewItem =~ /gitlens:file\\b(?!(:stash|:status))/","group":"3_gitlens_explore@4"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:file\\b/ && gitlens:hasRemotes","group":"5_gitlens_open@1"},{"command":"gitlens.views.openFileRevisionInRemote","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && gitlens:hasRemotes","group":"5_gitlens_open@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/ && gitlens:hasRemotes","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.views.applyChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.restore","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/","group":"8_gitlens_actions@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && gitlens:hasRemotes","group":"5_gitlens_open@2"},{"command":"gitlens.views.applyChanges","when":"!gitlens:readonly && viewItem == gitlens:file:stash","group":"1_gitlens_actions@1"},{"command":"gitlens.views.restore","when":"!gitlens:readonly && viewItem == gitlens:file:stash","group":"1_gitlens_actions@2"},{"command":"gitlens.views.addRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:remotes\\b/","group":"inline@1"},{"command":"gitlens.views.addRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:remotes\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.fetch","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"inline@97"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"inline@98"},{"command":"gitlens.views.fetch","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pruneRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"1_gitlens_actions@2"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"5_gitlens_open@1"},{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"5_gitlens_open@2"},{"command":"gitlens.views.terminalRemoveRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"6_gitlens_terminal@1"},{"command":"gitlens.views.setAsDefault","when":"viewItem =~ /gitlens:remote\\b(?!.*?\\b\\+default\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unsetAsDefault","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+default\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.exploreRepoAtRevision","when":"viewItem =~ /gitlens:(branch|commit|file\\b((?=.*?\\b\\+committed\\b)|:results)|stash|tag)\\b/","group":"3_gitlens_explore@10"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@95","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@96"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@97"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/","group":"inline@98"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:repository\\b/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:repository\\b/ && gitlens:hasRemotes","group":"5_gitlens_open@1"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/","group":"3_gitlens_explore@1"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"8_gitlens_actions@1"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"8_gitlens_actions@2"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+starred\\b)/","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.closeRepository","when":"viewItem =~ /gitlens:repository\\b/","group":"8_gitlens_actions_@2"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"inline@1","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind","group":"inline@2"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens_actions@2"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\b\\+pinned\\b)|search)\\b(?!:(commits|files))/","group":"inline@99"},{"command":"gitlens.views.setComparisonToTwoDot","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+threedot\\b)/","group":"inline@1"},{"command":"gitlens.views.setComparisonToThreeDot","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+twodot\\b)/","group":"inline@1"},{"command":"gitlens.views.repositories.setBranchComparisonToWorking","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+branch\\b)/","group":"inline@2"},{"command":"gitlens.views.repositories.setBranchComparisonToBranch","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+working\\b)/","group":"inline@2"},{"command":"gitlens.views.setComparisonToTwoDot","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+threedot\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.setComparisonToThreeDot","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+twodot\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.repositories.setBranchComparisonToWorking","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+branch\\b)/","group":"1_gitlens@2"},{"command":"gitlens.views.repositories.setBranchComparisonToBranch","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+working\\b)/","group":"1_gitlens@2"},{"command":"gitlens.views.setComparisonToTwoDot","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+threedot\\b)/","group":"inline@2"},{"command":"gitlens.views.setComparisonToThreeDot","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+twodot\\b)/","group":"inline@2"},{"command":"gitlens.views.compare.swapComparison","when":"viewItem =~ /gitlens:compare:results\\b/","group":"inline@3"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results)\\b/","group":"inline@4"},{"command":"gitlens.views.compare.pinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?!.*?\\b\\+pinned\\b)/","group":"inline@98"},{"command":"gitlens.views.compare.unpinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+pinned\\b)/","group":"inline@98"},{"command":"gitlens.views.openDirectoryDiff","when":"viewItem =~ /gitlens:compare:results\\b/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.setComparisonToTwoDot","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+threedot\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.setComparisonToThreeDot","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+twodot\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.compare.swapComparison","when":"viewItem =~ /gitlens:compare:results\\b/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.compare.pinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?!.*?\\b\\+pinned\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.compare.unpinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+pinned\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.search.searchCommits","when":"viewItem == gitlens:search:results","group":"inline@1"},{"command":"gitlens.views.refreshNode","when":"viewItem == gitlens:search:results","group":"inline@2"},{"command":"gitlens.views.search.searchCommits","when":"viewItem == gitlens:search:results","group":"1_gitlens_actions@1"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"inline@98"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stashes","group":"inline@99"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"1_gitlens_actions@1"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stashes","group":"1_gitlens_actions@2"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"inline@98"},{"command":"gitlens.stashDelete","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"inline@99"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"1_gitlens_actions@1"},{"command":"gitlens.stashDelete","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"1_gitlens_actions@2"},{"command":"gitlens.views.switchToTag","when":"!gitlens:readonly && viewItem =~ /gitlens:tag\\b/","group":"inline@10"},{"command":"gitlens.views.switchToTag","when":"!gitlens:readonly && viewItem =~ /gitlens:tag\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.deleteTag","when":"!gitlens:readonly && viewItem == gitlens:tag","group":"1_gitlens_actions@2"},{"command":"gitlens.views.createBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:tag\\b/","group":"1_gitlens_actions@3"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"inline@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"inline@2"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\b\\+pinned\\b)|search)\\b(?!:(commits|files))/","group":"8_gitlens_actions@98"},{"command":"gitlens.views.expandNode","when":"viewItem =~ /gitlens:(branch|compare|folder|results|search|status)\\b/","group":"9_gitlens@1"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:(?!file\\b)/","group":"9_gitlens@99"},{"command":"gitlens.views.showAllChildren","when":"viewItem =~ /gitlens:pager\\b/","group":"inline@1"},{"command":"gitlens.views.showAllChildren","when":"viewItem =~ /gitlens:pager\\b/","group":"1_gitlens_actions@1"}]},"keybindings":[{"command":"gitlens.key.left","key":"left","when":"gitlens:key:left"},{"command":"gitlens.key.alt+left","key":"alt+left","when":"gitlens:key:alt+left"},{"command":"gitlens.key.ctrl+left","key":"ctrl+left","mac":"cmd+left","when":"gitlens:key:ctrl+left"},{"command":"gitlens.key.right","key":"right","when":"gitlens:key:right"},{"command":"gitlens.key.alt+right","key":"alt+right","when":"gitlens:key:alt+right"},{"command":"gitlens.key.ctrl+right","key":"ctrl+right","mac":"cmd+right","when":"gitlens:key:ctrl+right"},{"command":"gitlens.key.alt+,","key":"alt+,","when":"gitlens:key:,"},{"command":"gitlens.key.alt+.","key":"alt+.","when":"gitlens:key:."},{"command":"gitlens.key.escape","key":"escape","when":"gitlens:key:escape && editorTextFocus && !findWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !isInEmbeddedEditor"},{"command":"gitlens.toggleFileBlame","key":"alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"shift+alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"alt+-","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"alt+/","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"alt+h","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"shift+alt+h","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"alt+s","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"alt+c","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && !isInDiffEditor"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffLeft","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffLeftEditor"},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffLeftEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"},{"command":"gitlens.diffLineWithPrevious","key":"shift+alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"shift+alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","key":"alt+w","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.toggleFileBlame","key":"ctrl+shift+g b","mac":"cmd+alt+g b","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"ctrl+shift+g shift+b","mac":"cmd+alt+g shift+b","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"ctrl+shift+g -","mac":"cmd+alt+g -","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"ctrl+shift+g /","mac":"cmd+alt+g /","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"ctrl+shift+g h","mac":"cmd+alt+g h","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"ctrl+shift+g shift+h","mac":"cmd+alt+g shift+h","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"ctrl+shift+g s","mac":"cmd+alt+g s","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"ctrl+shift+g c","mac":"cmd+alt+g c","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && !isInDiffEditor"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffLeft","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffLeftEditor"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffLeftEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"},{"command":"gitlens.diffLineWithPrevious","key":"ctrl+shift+g shift+,","mac":"cmd+alt+g shift+,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"ctrl+shift+g shift+.","mac":"cmd+alt+g shift+.","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","key":"ctrl+shift+g w","mac":"cmd+alt+g w","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"workbench.view.scm","key":"ctrl+shift+g g","mac":"ctrl+shift+g","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.views.repositories.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"},{"command":"gitlens.views.fileHistory.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.fileHistory/"},{"command":"gitlens.views.lineHistory.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.lineHistory/"},{"command":"gitlens.views.compare.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.compare/"},{"command":"gitlens.views.search.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.search/"}],"resourceLabelFormatters":[{"scheme":"gitlens","authority":"*","formatting":{"label":"${path} (${authority})","separator":"/"}}],"viewsContainers":{"activitybar":[{"id":"gitlens","title":"GitLens","icon":"images/gitlens-activitybar.svg"}]},"views":{"gitlens":[{"id":"gitlens.views.repositories:gitlens","name":"Repositories","when":"config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == gitlens"},{"id":"gitlens.views.fileHistory:gitlens","name":"File History","when":"config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == gitlens"},{"id":"gitlens.views.lineHistory:gitlens","name":"Line History","when":"config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == gitlens"},{"id":"gitlens.views.compare:gitlens","name":"Compare","when":"config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == gitlens"},{"id":"gitlens.views.search:gitlens","name":"Search Commits","when":"config.gitlens.views.search.enabled && config.gitlens.views.search.location == gitlens"}],"explorer":[{"id":"gitlens.views.repositories:explorer","name":"GitLens: Repositories","when":"gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == explorer"},{"id":"gitlens.views.fileHistory:explorer","name":"GitLens: File History","when":"gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == explorer"},{"id":"gitlens.views.lineHistory:explorer","name":"GitLens: Line History","when":"gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == explorer"},{"id":"gitlens.views.compare:explorer","name":"GitLens: Compare","when":"gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == explorer"},{"id":"gitlens.views.search:explorer","name":"GitLens: Search Commits","when":"gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == explorer"}],"scm":[{"id":"gitlens.views.repositories:scm","name":"GitLens: Repositories","when":"gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == scm"},{"id":"gitlens.views.fileHistory:scm","name":"GitLens: File History","when":"gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == scm"},{"id":"gitlens.views.lineHistory:scm","name":"GitLens: Line History","when":"gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == scm"},{"id":"gitlens.views.compare:scm","name":"GitLens: Compare","when":"gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == scm"},{"id":"gitlens.views.search:scm","name":"GitLens: Search Commits","when":"gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == scm"}]}},"scripts":{"analyze:bundle":"webpack --env.analyzeBundle","analyze:deps":"webpack --env.analyzeDeps","build":"webpack --env.development","bundle":"webpack --env.production","clean":"git clean -Xdf -e !node_modules -e !node_modules/**/*","lint":"eslint src/**/*.ts --fix","pack":"vsce package --yarn","pretty":"prettier --config .prettierrc --loglevel warn --write \"./**/*.{ts,md,json}\"","pub":"vsce publish --yarn","rebuild":"yarn run reset && yarn run build","reset":"yarn run clean && yarn --frozen-lockfile","watch":"webpack --watch --env.development --info-verbosity verbose","webviews:optimize":"webpack --config-name webviews --env.optimizeImages","webviews:watch":"webpack --watch --config-name webviews --env.development --info-verbosity verbose","update:emoji":"pushd emoji && node ./shortcodeToEmoji.js && popd","vscode:prepublish":"yarn run bundle"},"dependencies":{"dayjs":"1.8.17","iconv-lite":"0.5.0","lodash-es":"4.17.15","vsls":"0.3.1291"},"devDependencies":{"@types/lodash-es":"4.17.3","@types/node":"10.14.22","@types/vscode":"1.37.0","@typescript-eslint/eslint-plugin":"2.7.0","@typescript-eslint/parser":"2.7.0","circular-dependency-plugin":"5.2.0","clean-webpack-plugin":"3.0.0","csp-html-webpack-plugin":"3.0.4","css-loader":"3.2.0","eslint":"6.6.0","eslint-cli":"1.1.1","eslint-config-prettier":"6.6.0","eslint-plugin-import":"2.18.2","fork-ts-checker-webpack-plugin":"3.1.0","html-webpack-exclude-assets-plugin":"0.0.7","html-webpack-inline-source-plugin":"0.0.10","html-webpack-plugin":"3.2.0","imagemin-webpack-plugin":"2.4.2","mini-css-extract-plugin":"0.8.0","node-sass":"4.13.0","prettier":"1.19.1","sass-loader":"8.0.0","terser-webpack-plugin":"2.2.1","ts-loader":"6.2.1","typescript":"3.7.2","vsce":"1.69.0","webpack":"4.41.2","webpack-bundle-analyzer":"3.6.0","webpack-cli":"3.3.10"},"uuid":"4de763bd-505d-4978-9575-2b7696ecf94e","isBuiltin":false,"isUnderDevelopment":false,"id":"eamodio.gitlens","identifier":{"value":"eamodio.gitlens","_lower":"eamodio.gitlens"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/eamodio.gitlens-10.2.1","path":"/home/ansi/.vscode/extensions/eamodio.gitlens-10.2.1","scheme":"file"}},{"name":"EditorConfig","displayName":"EditorConfig for VS Code","description":"EditorConfig Support for Visual Studio Code","publisher":"EditorConfig","version":"0.15.1","icon":"EditorConfig_icon.png","engines":{"vscode":"^1.43.0"},"author":"EditorConfig Team","license":"MIT","categories":["Other"],"keywords":["editor","config","multi-root ready"],"homepage":"https://github.com/editorconfig/editorconfig-vscode/blob/master/README.md","repository":{"type":"git","url":"https://github.com/editorconfig/editorconfig-vscode.git"},"bugs":{"url":"https://github.com/editorconfig/editorconfig-vscode/issues"},"galleryBanner":{"color":"#37699A","theme":"dark"},"activationEvents":["*"],"main":"./out/editorConfigMain.js","types":"./out/editorConfigMain.d.ts","contributes":{"commands":[{"command":"EditorConfig.generate","title":"Generate .editorconfig"}],"menus":{"commandPalette":[{"command":"EditorConfig.generate","when":"explorerResourceIsFolder"}],"explorer/context":[{"command":"EditorConfig.generate","when":"explorerResourceIsFolder","group":"EditorConfig@1"}]},"languages":[{"id":"editorconfig","aliases":["EditorConfig","editorconfig"],"filenames":[".editorconfig"],"configuration":"./editorconfig.language-configuration.json"}],"grammars":[{"language":"editorconfig","scopeName":"source.editorconfig","path":"./syntaxes/editorconfig.tmLanguage.json"}]},"dependencies":{"editorconfig":"^0.15.3","lodash.get":"^4.4.2"},"devDependencies":{"@types/glob":"^7.1.1","@types/lodash":"^4.14.149","@types/lodash.get":"^4.4.6","@types/mocha":"^5.2.7","@types/node":"^12.12.17","@types/vscode":"^1.43.0","@typescript-eslint/eslint-plugin":"^2.11.0","@typescript-eslint/parser":"^2.11.0","cash-cp":"^0.2.0","eslint":"^6.7.2","eslint-config-prettier":"^6.7.0","eslint-config-xo":"^0.27.2","eslint-plugin-prettier":"^3.1.1","glob":"^7.1.6","husky":"^3.1.0","lint-staged":"^9.5.0","mocha":"^6.2.2","prettier":"^1.19.1","rimraf":"^3.0.0","typescript":"^3.7.3","vscode-test":"^1.3.0","vscode-test-utils":"1.0.0"},"scripts":{"clean":"rimraf out","prebuild":"npm run clean","build":"tsc","postbuild":"cp -r src/test/suite/fixtures out/test/suite","lint":"eslint src/**/*.ts","pretest":"npm run lint && npm run build","prewatch":"npm run build","watch":"tsc -watch","check-types":"tsc --noEmit","test":"node out/test/runTest.js","vscode:prepublish":"npm run build"},"husky":{"hooks":{"pre-commit":"lint-staged","pre-push":"npm run lint && npm run check-types"}},"lint-staged":{"*.ts":["eslint --fix","prettier --write","git add"],"*.{json,md}":["prettier --write","git add"],"*.js":["git reset"]},"eslintConfig":{"extends":["xo","prettier"],"env":{"jest":true,"node":true},"rules":{"prettier/prettier":"error"},"plugins":["prettier"]},"prettier":{"arrowParens":"avoid","proseWrap":"always","semi":false,"singleQuote":true,"trailingComma":"all"},"uuid":"f60a60a6-95ba-42d4-b41c-3d24c1b89588","isBuiltin":false,"isUnderDevelopment":false,"id":"EditorConfig.EditorConfig","identifier":{"value":"EditorConfig.EditorConfig","_lower":"editorconfig.editorconfig"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/editorconfig.editorconfig-0.15.1","path":"/home/ansi/.vscode/extensions/editorconfig.editorconfig-0.15.1","scheme":"file"}},{"name":"tslint","displayName":"TSLint (deprecated)","description":"TSLint for Visual Studio Code","version":"1.0.44","author":"Microsoft Corporation","license":"MIT","publisher":"eg2","icon":"TSLint_icon.png","galleryBanner":{"color":"#5c2d91","theme":"dark"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-tslint.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-tslint/issues"},"categories":["Programming Languages","Linters"],"keywords":["multi-root ready"],"engines":{"vscode":"^1.26.0"},"activationEvents":["onLanguage:typescript","onLanguage:typescriptreact","onLanguage:javascript","onLanguage:javascriptreact","onCommand:tslint.fixAllProblems","onCommand:tslint.createConfig","onCommand:tslint.showOutputChannel"],"main":"./out/extension","contributes":{"languages":[{"id":"jsonc","filenames":["tslint.json"]}],"configuration":{"type":"object","title":"TSLint","properties":{"tslint.enable":{"type":"boolean","default":true,"description":"Control whether tslint is enabled for TypeScript files or not.","scope":"resource"},"tslint.jsEnable":{"type":"boolean","default":false,"description":"Control whether tslint is enabled for JavaScript files or not.","scope":"resource"},"tslint.rulesDirectory":{"type":["string","array"],"items":{"type":"string"},"description":"An additional rules directory","default":"","scope":"resource"},"tslint.validateWithDefaultConfig":{"type":"boolean","description":"Validate a file when there is only a default tslint configuration is found","default":false,"scope":"resource"},"tslint.configFile":{"type":"string","description":"The path to the rules configuration file","default":"","scope":"resource"},"tslint.ignoreDefinitionFiles":{"type":"boolean","default":true,"description":"Control if TypeScript definition files should be ignored","scope":"resource"},"tslint.exclude":{"type":["string","array"],"items":{"type":"string"},"description":"Configure glob patterns of file paths to exclude from linting","scope":"resource"},"tslint.run":{"type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)","scope":"resource"},"tslint.nodePath":{"type":"string","default":"","description":"A path added to NODE_PATH when resolving the tslint module.","scope":"resource"},"tslint.autoFixOnSave":{"type":["boolean","array"],"items":{"type":"string"},"default":false,"description":"Turns auto fix on save on or off, or defines which rules (e.g. `no-var-keyword`) to auto fix on save.","scope":"resource"},"tslint.alwaysShowRuleFailuresAsWarnings":{"type":"boolean","default":false,"description":"Always show rule failures as warnings, independent of the tslint configuration.","scope":"resource"},"tslint.alwaysShowStatus":{"type":"boolean","default":false,"description":"Always show the TSlint status bar item, not only when there are errors or warnings.","scope":"window"},"tslint.trace.server":{"scope":"window","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VSCode and the tslint linter service."},"tslint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn"],"default":"npm","description":"The package manager to use to locate the tslint module."}}},"commands":[{"title":"Fix all auto-fixable problems","category":"TSLint","command":"tslint.fixAllProblems"},{"title":"Create a 'tslint.json' file","category":"TSLint","command":"tslint.createConfig"},{"title":"Show output","category":"TSLint","command":"tslint.showOutputChannel"}],"jsonValidation":[{"fileMatch":"tslint.json","url":"http://json.schemastore.org/tslint"}],"problemPatterns":[{"name":"tslint4","regexp":"^(\\(\\S*\\)\\s+)?(\\S.*)\\[(\\d+), (\\d+)\\]:\\s+(.*)$","file":2,"line":3,"column":4,"message":5},{"name":"tslint5","regexp":"^(WARNING|ERROR):(\\s+\\(\\S*\\))?\\s+(\\S.*)\\[(\\d+), (\\d+)\\]:\\s+(.*)$","severity":1,"file":3,"line":4,"column":5,"message":6}],"problemMatchers":[{"name":"tslint4","label":"tslint (version 4) warnings","owner":"tslint","source":"tslint","applyTo":"closedDocuments","fileLocation":"absolute","severity":"warning","pattern":"$tslint4"},{"name":"tslint5","owner":"tslint","source":"tslint","label":"tslint (version 5) warnings","applyTo":"closedDocuments","fileLocation":"absolute","severity":"warning","pattern":"$tslint5"}]},"scripts":{"postinstall":"node ./node_modules/vscode/bin/install","vscode:prepublish":"cd ../tslint-server && npm run compile && cd ../tslint && tsc -p ./","compile":"tsc -p ./","watch":"tsc -watch -p ./","update-vscode":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^5.2.1","@types/node":"^10.3.0","typescript":"^2.9.1","vscode":"^1.1.35"},"dependencies":{"global":"^4.3.2","vscode-languageclient":"^5.0.1"},"uuid":"513cf511-3894-4ee2-8c34-13ab83ddfd37","isBuiltin":false,"isUnderDevelopment":false,"id":"eg2.tslint","identifier":{"value":"eg2.tslint","_lower":"eg2.tslint"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/eg2.tslint-1.0.44","path":"/home/ansi/.vscode/extensions/eg2.tslint-1.0.44","scheme":"file"}},{"name":"auto-close-tag","displayName":"Auto Close Tag","description":"Automatically add HTML/XML close tag, same as Visual Studio IDE or Sublime Text","version":"0.5.7","publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.16.0"},"categories":["Other","Programming Languages"],"keywords":["AutoComplete","close","tag","html","xml","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-auto-close-tag/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-auto-close-tag/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-auto-close-tag.git"},"extensionKind":["ui","workspace"],"activationEvents":["*","onCommand:auto-close-tag.closeTag"],"main":"./out/src/extension","contributes":{"commands":[{"command":"auto-close-tag.closeTag","title":"Close Tag"}],"keybindings":[{"command":"auto-close-tag.closeTag","key":"alt+.","mac":"cmd+alt+."}],"configuration":{"type":"object","title":"Auto Close Tag configuration","properties":{"auto-close-tag.activationOnLanguage":{"type":"array","default":["xml","php","blade","ejs","jinja","javascript","javascriptreact","typescript","typescriptreact","plaintext","markdown","vue","liquid","erb","lang-cfml","cfml","HTML (EEx)","HTML (Eex)","plist"],"description":"Set the languages that the extension will be activated.  e.g. [\"html\",\"xml\",\"php\"]. Use [\"*\"] to activate for all languages.","scope":"resource"},"auto-close-tag.excludedTags":{"type":"array","default":["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"],"description":"Set the tag list that would not be auto closed.","scope":"resource"},"auto-close-tag.SublimeText3Mode":{"type":"boolean","default":false,"description":"Auto close tag when </ is typed, same as Sublime Text 3","scope":"resource"},"auto-close-tag.enableAutoCloseTag":{"type":"boolean","default":true,"description":"Whether to insert close tag automatically","scope":"resource"},"auto-close-tag.enableAutoCloseSelfClosingTag":{"type":"boolean","default":true,"description":"Whether to close self-closing tag automatically","scope":"resource"},"auto-close-tag.fullMode":{"type":"boolean","default":false,"description":"Enable both Visual Studio and Sublime Text mode","scope":"resource"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","mocha":"^2.3.3","@types/node":"^6.0.40","@types/mocha":"^2.2.32"},"uuid":"d3836729-9cc1-42c1-b2af-d50071f57d29","isBuiltin":false,"isUnderDevelopment":false,"id":"formulahendry.auto-close-tag","identifier":{"value":"formulahendry.auto-close-tag","_lower":"formulahendry.auto-close-tag"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/formulahendry.auto-close-tag-0.5.7","path":"/home/ansi/.vscode/extensions/formulahendry.auto-close-tag-0.5.7","scheme":"file"}},{"name":"sass-lint","displayName":"Sass Lint","description":"Sass Lint for Visual Studio Code","author":"glen-84","publisher":"glen-84","version":"1.0.6","license":"MIT","icon":"sass-lint.png","repository":{"type":"git","url":"https://github.com/glen-84/vscode-sass-lint.git"},"bugs":{"url":"https://github.com/glen-84/vscode-sass-lint/issues"},"engines":{"vscode":"^1.38.0"},"categories":["Linters"],"keywords":["multi-root ready"],"activationEvents":["onLanguage:sass","onLanguage:scss"],"main":"./out/extension","contributes":{"configuration":{"type":"object","title":"Sass Lint configuration","properties":{"sasslint.enable":{"type":"boolean","default":true,"description":"Enable or disable linting","scope":"resource"},"sasslint.configFile":{"type":"string","description":"A .sass-lint.yml or .sasslintrc file to use/fallback to if no config file is found in the current project","default":"","scope":"resource"},"sasslint.resolvePathsRelativeToConfig":{"type":"boolean","description":"This option allows you to choose to resolve file paths relative to your config file rather than relative to the root of your currently open project","default":false,"scope":"resource"},"sasslint.run":{"type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)","scope":"resource"},"sasslint.packageManager":{"type":"string","enum":["npm","yarn"],"default":"npm","description":"The package manager to use to locate the sass-lint module.","scope":"resource"},"sasslint.nodePath":{"type":"string","default":"","description":"A path added to NODE_PATH when resolving the sass-lint module.","scope":"resource"},"sasslint.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VSCode and the sass-lint linter service.","scope":"window"}}},"commands":[{"title":"Show output","category":"SassLint","command":"sasslint.showOutputChannel"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","watch":"tsc -watch -p ./"},"devDependencies":{"@types/node":"^12.7.4","@types/vscode":"^1.38.0","typescript":"^3.6.2"},"dependencies":{"vscode-languageclient":"^5.3.0-next.9"},"uuid":"997fc03c-d81e-4815-8bd1-2c4f9a1ac1a5","isBuiltin":false,"isUnderDevelopment":false,"id":"glen-84.sass-lint","identifier":{"value":"glen-84.sass-lint","_lower":"glen-84.sass-lint"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/glen-84.sass-lint-1.0.6","path":"/home/ansi/.vscode/extensions/glen-84.sass-lint-1.0.6","scheme":"file"}},{"name":"ansible","displayName":"language-Ansible","description":"Ansible syntax highlighting support","version":"0.2.8","publisher":"haaaad","engines":{"vscode":"^1.0.0"},"keywords":["ansible"],"categories":["Languages"],"license":"MIT","icon":"images/ansible.png","repository":{"type":"git","url":"https://github.com/haad/vs-language-ansible.git"},"bugs":{"url":"https://github.com/haad/vs-language-ansible/issues"},"contributes":{"languages":[{"id":"ansible","aliases":["Ansible","ansible"],"extensions":["ansible"],"configuration":"./ansible.configuration.json"},{"id":"ansible-advanced","aliases":["Ansible (advanced)","ansible (advanced)","Ansible","ansible"],"extensions":["ansible-advanced"],"configuration":"./ansible.configuration.json"}],"grammars":[{"language":"ansible","scopeName":"source.ansible","path":"./syntaxes/ansible.tmLanguage"},{"language":"ansible-advanced","scopeName":"source.ansible-advanced","path":"./syntaxes/ansible-advanced.tmLanguage"}]},"uuid":"c821cdcd-134b-4c94-99ab-34d3cd83ab74","isBuiltin":false,"isUnderDevelopment":false,"id":"haaaad.ansible","identifier":{"value":"haaaad.ansible","_lower":"haaaad.ansible"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/haaaad.ansible-0.2.8","path":"/home/ansi/.vscode/extensions/haaaad.ansible-0.2.8","scheme":"file"}},{"name":"docker-linter","displayName":"Docker Linter","description":"Lint perl, python and/or ruby in your docker containers.","version":"0.5.0","author":"Henrik Sjööh <hello@enhenrik.nu> (http://www.enhenrik.nu)","license":"MIT","repository":{"type":"git","url":"https://github.com/henriiik/vscode-docker-linter"},"bugs":{"url":"https://github.com/henriiik/vscode-docker-linter/issues"},"homepage":"https://github.com/henriiik/vscode-docker-linter/tree/master/docker-linter","categories":["Linters"],"icon":"docker-linter-logo.png","galleryBanner":{"color":"#118DB6","theme":"dark"},"publisher":"henriiik","engines":{"vscode":"^1.15.0"},"activationEvents":["onLanguage:perl","onLanguage:perl+mojolicious","onLanguage:php","onLanguage:python","onLanguage:ruby"],"main":"./out/src/extension","contributes":{"configuration":{"type":"object","title":"docker-linter configuration","properties":{"docker-linter.debug":{"type":"boolean","default":false,"description":"Enable this to output debug info to the console in VSCode"},"docker-linter.perl.enable":{"type":"boolean","default":false,"description":"Control whether perl compile linting is enabled for perl files."},"docker-linter.perl.machine":{"type":"string","default":"default","description":"The name of the docker-machine in which you run your containers."},"docker-linter.perl.container":{"type":"string","default":"docker-linter","description":"The name of the docker container in which you want to run your linting."},"docker-linter.perl.command":{"type":"string","default":"perl -c","description":"The command to which the buffer contents is sent."},"docker-linter.perl.regexp":{"type":"string","default":"(.*) at ([^\\s]*) line (\\d+)","description":"The regex that is is used to match for errors."},"docker-linter.perl.message":{"type":"number","default":1,"description":"The number of the group that matches the error."},"docker-linter.perl.line":{"type":"number","default":3,"description":"The number of the group that matches the line."},"docker-linter.perl.column":{"type":"number","default":0,"description":"The number of the group that matches the column."},"docker-linter.perl.severity":{"type":["number","string"],"default":0,"description":"The number of the group that matches the severity. Or a fixed severity (error, warning, info)."},"docker-linter.perl.code":{"type":"number","default":0,"description":"The number of the group that matches the code."},"docker-linter.perlcritic.enable":{"type":"boolean","default":false,"description":"Control whether perlcritic linting is enabled for perl files."},"docker-linter.perlcritic.machine":{"type":"string","default":"default","description":"The name of the docker-machine in which you run your containers."},"docker-linter.perlcritic.container":{"type":"string","default":"docker-linter","description":"The name of the docker container in which you want to run your linting."},"docker-linter.perlcritic.command":{"type":"string","default":"perlcritic --verbose 1 -","description":"The command to which the buffer contents is sent."},"docker-linter.perlcritic.regexp":{"type":"string","default":":(\\d+):(\\d+):(.*)","description":"The regex that is is used to match for errors."},"docker-linter.perlcritic.message":{"type":"number","default":3,"description":"The number of the group that matches the error."},"docker-linter.perlcritic.line":{"type":"number","default":1,"description":"The number of the group that matches the line."},"docker-linter.perlcritic.column":{"type":"number","default":2,"description":"The number of the group that matches the column."},"docker-linter.perlcritic.severity":{"type":["number","string"],"default":0,"description":"The number of the group that matches the severity. Or a fixed severity (error, warning, info)."},"docker-linter.perlcritic.code":{"type":"number","default":0,"description":"The number of the group that matches the code."},"docker-linter.flake8.enable":{"type":"boolean","default":false,"description":"Control whether flake8 linting is enabled for python files or not."},"docker-linter.flake8.machine":{"type":"string","default":"default","description":"The name of the docker-machine in which you run your containers."},"docker-linter.flake8.container":{"type":"string","default":"docker-linter","description":"The name of the docker container in which you want to run your linting."},"docker-linter.flake8.command":{"type":"string","default":"flake8 -","description":"The command to which the buffer contents is sent."},"docker-linter.flake8.regexp":{"type":"string","default":"(\\d+):(\\d+): (.*)","description":"The regex that is is used to match for errors."},"docker-linter.flake8.message":{"type":"number","default":3,"description":"The number of the group that matches the error."},"docker-linter.flake8.line":{"type":"number","default":1,"description":"The number of the group that matches the line."},"docker-linter.flake8.column":{"type":"number","default":2,"description":"The number of the group that matches the column."},"docker-linter.flake8.severity":{"type":["number","string"],"default":0,"description":"The number of the group that matches the severity. Or a fixed severity (error, warning, info)."},"docker-linter.flake8.code":{"type":"number","default":0,"description":"The number of the group that matches the code."},"docker-linter.php.enable":{"type":"boolean","default":false,"description":"Control whether php linting is enabled for php files or not."},"docker-linter.php.machine":{"type":"string","default":"default","description":"The name of the docker-machine in which you run your containers."},"docker-linter.php.container":{"type":"string","default":"docker-linter","description":"The name of the docker container in which you want to run your linting."},"docker-linter.php.command":{"type":"string","default":"php -l","description":"The command to which the buffer contents is sent."},"docker-linter.php.regexp":{"type":"string","default":"(.*) in - on line (\\d+)","description":"The regex that is is used to match for errors."},"docker-linter.php.message":{"type":"number","default":1,"description":"The number of the group that matches the error."},"docker-linter.php.line":{"type":"number","default":2,"description":"The number of the group that matches the line."},"docker-linter.php.column":{"type":"number","default":0,"description":"The number of the group that matches the column."},"docker-linter.php.severity":{"type":["number","string"],"default":0,"description":"The number of the group that matches the severity. Or a fixed severity (error, warning, info)."},"docker-linter.php.code":{"type":"number","default":0,"description":"The number of the group that matches the code."},"docker-linter.rubocop.enable":{"type":"boolean","default":false,"description":"Control whether rubocop linting is enabled for ruby files or not."},"docker-linter.rubocop.machine":{"type":"string","default":"default","description":"The name of the docker-machine in which you run your containers."},"docker-linter.rubocop.container":{"type":"string","default":"docker-linter","description":"The name of the docker container in which you want to run your linting."},"docker-linter.rubocop.command":{"type":"string","default":"rubocop --cache false --except=Style/FileName --format simple --stdin -","description":"The command to which the buffer contents is sent."},"docker-linter.rubocop.regexp":{"type":"string","default":":\\s*(\\d+):\\s*(\\d+): (.*)","description":"The regex that is is used to match for errors."},"docker-linter.rubocop.message":{"type":"number","default":3,"description":"The number of the group that matches the error."},"docker-linter.rubocop.line":{"type":"number","default":1,"description":"The number of the group that matches the line."},"docker-linter.rubocop.column":{"type":"number","default":2,"description":"The number of the group that matches the column."},"docker-linter.rubocop.severity":{"type":["number","string"],"default":0,"description":"The number of the group that matches the severity. Or a fixed severity (error, warning, info)."},"docker-linter.rubocop.code":{"type":"number","default":0,"description":"The number of the group that matches the code."}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","update-vscode":"node ./node_modules/vscode/bin/install","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^2.2.44","@types/node":"^8.0.53","typescript":"^2.6.1","vscode":"^1.1.7"},"dependencies":{"vscode-languageclient":"^3.5.0"},"uuid":"5e1ad6e2-8470-4064-95b4-8f4e4f218af5","isBuiltin":false,"isUnderDevelopment":false,"id":"henriiik.docker-linter","identifier":{"value":"henriiik.docker-linter","_lower":"henriiik.docker-linter"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/henriiik.docker-linter-0.5.0","path":"/home/ansi/.vscode/extensions/henriiik.docker-linter-0.5.0","scheme":"file"}},{"name":"RelativePath","description":"Get relative url paths from files in the current workspace.","version":"1.4.0","repository":{"type":"git","url":"https://github.com/jakob101/RelativePath"},"publisher":"jakob101","galleryBanner":{"color":"#373277","theme":"dark"},"engines":{"vscode":"^1.16.0"},"categories":["Other"],"license":"MIT","displayName":"Relative Path","activationEvents":["onCommand:extension.relativePath"],"main":"./out/src/extension","contributes":{"commands":[{"command":"extension.relativePath","title":"Relative Path"}],"keybindings":[{"command":"extension.relativePath","key":"ctrl+shift+h","mac":"cmd+shift+h","when":"editorTextFocus"}],"configuration":{"title":"RelativePath extension configuration","type":"object","properties":{"relativePath.ignore":{"type":"array","default":["**/node_modules/**","**/*.dll","**/obj/**","**/objd/**"],"description":"An array of glob keys to ignore when searching.","items":{"type":"string"}},"relativePath.removeExtension":{"type":"boolean","default":false,"description":"Excludes the extension from the relative path url (Useful for systemjs imports)."},"relativePath.excludedExtensions":{"type":"array","default":[".js"],"description":"An array of extensions to exclude from the relative path url (Useful for used with Webpack or when importing files of mixed types)"},"relativePath.removeLeadingDot":{"type":"boolean","default":true,"description":"Removes the leading ./ character when the path is pointing to a parent folder."}}}},"icon":"icon.png","keywords":["relative","path","url","file"],"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.40","mocha":"^2.3.3","typescript":"^2.6.2","vscode":"^1.1.10"},"dependencies":{"@types/glob":"^5.0.34","glob":"^7.1.2"},"uuid":"e8b469bd-915d-4070-bfc2-05c9b546f8ee","isBuiltin":false,"isUnderDevelopment":false,"id":"jakob101.RelativePath","identifier":{"value":"jakob101.RelativePath","_lower":"jakob101.relativepath"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/jakob101.relativepath-1.4.0","path":"/home/ansi/.vscode/extensions/jakob101.relativepath-1.4.0","scheme":"file"}},{"name":"vscode-codemetrics","private":true,"description":"Computes complexity in TypeScript / JavaScript files.","author":"Tamas Kiss","publisher":"kisstkondoros","license":"MIT","version":"1.24.0","displayName":"CodeMetrics","icon":"images/logo.png","engines":{"vscode":"^1.40.0"},"repository":{"type":"git","url":"https://github.com/kisstkondoros/codemetrics.git"},"keywords":["vscode","code","metrics","typescript","javascript"],"categories":["Other"],"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:lua","onLanguage:vue","onLanguage:html","onCommand:codemetrics.toggleCodeMetricsForArrowFunctions","onCommand:codemetrics.toggleCodeMetricsDisplayed"],"contributes":{"commands":[{"command":"codemetrics.toggleCodeMetricsForArrowFunctions","title":"Toggle code lenses for arrow functions"},{"command":"codemetrics.toggleCodeMetricsDisplayed","title":"Toggle code metrics"}],"configuration":{"type":"object","title":"CodeMetrics configuration","properties":{"codemetrics.basics.Exclude":{"scope":"resource","description":"Array of exclusion patterns (in glob format)","type":"array","default":[]},"codemetrics.basics.OverviewRulerModeEnabled":{"scope":"resource","default":true,"description":"A flag which indicates whether code metrics are shown on the overview ruler","type":"boolean"},"codemetrics.basics.DecorationModeEnabled":{"scope":"resource","default":true,"description":"A flag which indicates whether code metrics are shown as inline decoration","type":"boolean"},"codemetrics.basics.DecorationTemplate":{"scope":"resource","default":"<svg xmlns='http://www.w3.org/2000/svg' width='{{size}}px' height='{{size}}px' viewbox='0 0 {{size}} {{size}}'><rect width='{{size}}' height='{{size}}' style='fill:{{color}};stroke-width:1;stroke:#fff'/></svg>","description":"A flag which indicates whether code metrics are shown as inline decoration","type":"string"},"codemetrics.basics.CodeLensEnabled":{"scope":"resource","default":true,"description":"A flag which indicates whether code metrics are shown as code lens","type":"boolean"},"codemetrics.basics.DiagnosticsEnabled":{"scope":"resource","default":false,"description":"A flag which indicates whether code metrics are shown as diagnostics","type":"boolean"},"codemetrics.basics.MetricsForClassDeclarationsToggled":{"scope":"resource","default":true,"description":"A flag which indicates whether code metrics are enabled for class declarations","type":"boolean"},"codemetrics.basics.MetricsForConstructorsToggled":{"scope":"resource","default":true,"description":"A flag which indicates whether code metrics are enabled for constructors","type":"boolean"},"codemetrics.basics.MetricsForEnumDeclarationsToggled":{"scope":"resource","default":true,"description":"A flag which indicates whether code metrics are enabled for enum declarations","type":"boolean"},"codemetrics.basics.MetricsForFunctionDeclarationsToggled":{"scope":"resource","default":true,"description":"A flag which indicates whether code metrics are enabled for function declarations","type":"boolean"},"codemetrics.basics.MetricsForFunctionExpressionsToggled":{"scope":"resource","default":true,"description":"A flag which indicates whether code metrics are enabled for function expressions","type":"boolean"},"codemetrics.basics.MetricsForMethodDeclarationsToggled":{"scope":"resource","default":true,"description":"A flag which indicates whether code metrics are enabled for methods declarations","type":"boolean"},"codemetrics.basics.MetricsForArrowFunctionsToggled":{"scope":"resource","default":true,"description":"A flag which indicates whether code metrics are enabled for arrow functions (can also be toggled via a command)","type":"boolean"},"codemetrics.basics.FileSizeLimitMB":{"scope":"resource","default":0.5,"description":"File size limit in megabytes, above this codemetrics are not going to be computed, use a negative number to allow any size","type":"number"},"codemetrics.basics.EnabledForVue":{"scope":"resource","default":true,"description":"A flag which indicates whether codemetrics are enabled for Vue","type":"boolean"},"codemetrics.basics.EnabledForHTML":{"scope":"resource","default":true,"description":"A flag which indicates whether codemetrics are enabled for HTML","type":"boolean"},"codemetrics.basics.EnabledForLua":{"scope":"resource","default":true,"description":"A flag which indicates whether codemetrics are enabled for Lua","type":"boolean"},"codemetrics.basics.EnabledForJS":{"scope":"resource","default":true,"description":"A flag which indicates whether codemetrics are enabled for JS","type":"boolean"},"codemetrics.basics.EnabledForJSX":{"scope":"resource","default":true,"description":"A flag which indicates whether codemetrics are enabled for JSX","type":"boolean"},"codemetrics.basics.EnabledForTS":{"scope":"resource","default":true,"description":"A flag which indicates whether codemetrics are enabled for TS","type":"boolean"},"codemetrics.basics.EnabledForTSX":{"scope":"resource","default":true,"description":"A flag which indicates whether codemetrics are enabled for TSX","type":"boolean"},"codemetrics.basics.ComplexityColorLow":{"scope":"resource","default":"#4bb14f","description":"Color for the low complexity level","type":"string"},"codemetrics.basics.ComplexityColorNormal":{"scope":"resource","default":"#ffc208","description":"Color for the normal complexity level","type":"string"},"codemetrics.basics.ComplexityColorHigh":{"scope":"resource","default":"#f44034","description":"Color for the high complexity level","type":"string"},"codemetrics.basics.ComplexityColorExtreme":{"scope":"resource","default":"#ff0000","description":"Color for the extreme complexity level","type":"string"},"codemetrics.basics.ComplexityLevelExtreme":{"scope":"resource","default":25,"description":"Threshold to determine extreme high complexity level","type":"number"},"codemetrics.basics.ComplexityLevelHigh":{"scope":"resource","default":10,"description":"Threshold to determine high complexity level","type":"number"},"codemetrics.basics.ComplexityLevelNormal":{"scope":"resource","default":5,"description":"Threshold to determine normal complexity level","type":"number"},"codemetrics.basics.ComplexityLevelLow":{"scope":"resource","default":0,"description":"Threshold to determine low complexity level","type":"number"},"codemetrics.basics.CodeLensHiddenUnder":{"scope":"resource","default":3,"description":"Threshold to show code lens for code metrics","type":"number"},"codemetrics.basics.ComplexityLevelExtremeDescription":{"scope":"resource","default":"Bloody hell...","description":"Code lens message for extreme high complexity level","type":"string"},"codemetrics.basics.ComplexityLevelHighDescription":{"scope":"resource","default":"You must be kidding","description":"Code lens message for high complexity level","type":"string"},"codemetrics.basics.ComplexityLevelNormalDescription":{"scope":"resource","default":"It's time to do something...","description":"Code lens message for normal complexity level","type":"string"},"codemetrics.basics.ComplexityLevelLowDescription":{"scope":"resource","default":"Everything is cool!","description":"Code lens message for low complexity level","type":"string"},"codemetrics.basics.ComplexityTemplate":{"scope":"resource","default":"Complexity is {0} {1}","description":"Code lens message template {0} stands for the actual value {1} is for the complexity level description","type":"string"},"codemetrics.luaconfiguration.LabelStatement":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.BreakStatement":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.GotoStatement":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.ReturnStatement":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.IfStatement":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.IfClause":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.ElseifClause":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.ElseClause":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.WhileStatement":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.DoStatement":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.RepeatStatement":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.LocalStatement":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.AssignmentStatement":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.CallStatement":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.FunctionDeclaration":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.ForNumericStatement":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.ForGenericStatement":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.Chunk":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.Identifier":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.StringLiteral":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.NumericLiteral":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.BooleanLiteral":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.NilLiteral":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.VarargLiteral":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.TableKey":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.TableKeyString":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.TableValue":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.TableConstructorExpression":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.LogicalExpression":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.BinaryExpression":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.UnaryExpression":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.MemberExpression":{"scope":"resource","type":"number","default":1},"codemetrics.luaconfiguration.IndexExpression":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.CallExpression":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.TableCallExpression":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.StringCallExpression":{"scope":"resource","type":"number","default":0},"codemetrics.luaconfiguration.Comment":{"scope":"resource","type":"number","default":0},"codemetrics.nodeconfiguration.AnyKeyword":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.AnyKeywordDescription":{"scope":"resource","default":"Any keyword","type":"string"},"codemetrics.nodeconfiguration.ArrayBindingPattern":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ArrayBindingPatternDescription":{"scope":"resource","default":"Array binding pattern","type":"string"},"codemetrics.nodeconfiguration.ArrayLiteralExpression":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ArrayLiteralExpressionDescription":{"scope":"resource","default":"Array literal expression","type":"string"},"codemetrics.nodeconfiguration.ArrowFunction":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.ArrowFunctionDescription":{"scope":"resource","default":"Arrow function","type":"string"},"codemetrics.nodeconfiguration.BinaryExpression":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.BinaryExpressionDescription":{"scope":"resource","default":"Binary expression","type":"string"},"codemetrics.nodeconfiguration.BindingElement":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.BindingElementDescription":{"scope":"resource","default":"Binding element","type":"string"},"codemetrics.nodeconfiguration.Block":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.BlockDescription":{"scope":"resource","default":"Block","type":"string"},"codemetrics.nodeconfiguration.BreakStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.BreakStatementDescription":{"scope":"resource","default":"Break statement","type":"string"},"codemetrics.nodeconfiguration.CallExpression":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.CallExpressionDescription":{"scope":"resource","default":"Call expression","type":"string"},"codemetrics.nodeconfiguration.CallSignature":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.CallSignatureDescription":{"scope":"resource","default":"Call signature","type":"string"},"codemetrics.nodeconfiguration.CaseClause":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.CaseClauseDescription":{"scope":"resource","default":"Case clause","type":"string"},"codemetrics.nodeconfiguration.ClassDeclaration":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ClassDeclarationDescription":{"scope":"resource","default":"Class declaration","type":"string"},"codemetrics.nodeconfiguration.CatchClause":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.CatchClauseDescription":{"scope":"resource","default":"Catch clause","type":"string"},"codemetrics.nodeconfiguration.ConditionalExpression":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.ConditionalExpressionDescription":{"scope":"resource","default":"Conditional expression","type":"string"},"codemetrics.nodeconfiguration.Constructor":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.ConstructorDescription":{"scope":"resource","default":"Constructor","type":"string"},"codemetrics.nodeconfiguration.ConstructorType":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ConstructorTypeDescription":{"scope":"resource","default":"Constructor type","type":"string"},"codemetrics.nodeconfiguration.ContinueStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.ContinueStatementDescription":{"scope":"resource","default":"Continue statement","type":"string"},"codemetrics.nodeconfiguration.DebuggerStatement":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.DebuggerStatementDescription":{"scope":"resource","default":"Debugger statement","type":"string"},"codemetrics.nodeconfiguration.DefaultClause":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.DefaultClauseDescription":{"scope":"resource","default":"Default case","type":"string"},"codemetrics.nodeconfiguration.DoStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.DoStatementDescription":{"scope":"resource","default":"Do statement","type":"string"},"codemetrics.nodeconfiguration.ElementAccessExpression":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ElementAccessExpressionDescription":{"scope":"resource","default":"Element access expression","type":"string"},"codemetrics.nodeconfiguration.EnumDeclaration":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.EnumDeclarationDescription":{"scope":"resource","default":"Enum declaration","type":"string"},"codemetrics.nodeconfiguration.ExportAssignment":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.ExportAssignmentDescription":{"scope":"resource","default":"Export assignment","type":"string"},"codemetrics.nodeconfiguration.ExpressionStatement":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ExpressionStatementDescription":{"scope":"resource","default":"Expression statement","type":"string"},"codemetrics.nodeconfiguration.ForStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.ForStatementDescription":{"scope":"resource","default":"For statement","type":"string"},"codemetrics.nodeconfiguration.ForInStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.ForInStatementDescription":{"scope":"resource","default":"For in statement","type":"string"},"codemetrics.nodeconfiguration.ForOfStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.ForOfStatementDescription":{"scope":"resource","default":"For of statement","type":"string"},"codemetrics.nodeconfiguration.FunctionDeclaration":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.FunctionDeclarationDescription":{"scope":"resource","default":"Function declaration","type":"string"},"codemetrics.nodeconfiguration.FunctionExpression":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.FunctionExpressionDescription":{"scope":"resource","default":"Function expression","type":"string"},"codemetrics.nodeconfiguration.FunctionType":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.FunctionTypeDescription":{"scope":"resource","default":"Function type","type":"string"},"codemetrics.nodeconfiguration.GetAccessor":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.GetAccessorDescription":{"scope":"resource","default":"Get accessor","type":"string"},"codemetrics.nodeconfiguration.Identifier":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.IdentifierDescription":{"scope":"resource","default":"Identifier","type":"string"},"codemetrics.nodeconfiguration.IfWithElseStatement":{"scope":"resource","default":2,"type":"number"},"codemetrics.nodeconfiguration.IfWithElseStatementDescription":{"scope":"resource","default":"If with else statement","type":"string"},"codemetrics.nodeconfiguration.IfStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.IfStatementDescription":{"scope":"resource","default":"If statement","type":"string"},"codemetrics.nodeconfiguration.ImportDeclaration":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ImportDeclarationDescription":{"scope":"resource","default":"Import declaration","type":"string"},"codemetrics.nodeconfiguration.ImportEqualsDeclaration":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ImportEqualsDeclarationDescription":{"scope":"resource","default":"Import equals declaration","type":"string"},"codemetrics.nodeconfiguration.IndexSignature":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.IndexSignatureDescription":{"scope":"resource","default":"Index signature","type":"string"},"codemetrics.nodeconfiguration.InterfaceDeclaration":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.InterfaceDeclarationDescription":{"scope":"resource","default":"Interface declaration","type":"string"},"codemetrics.nodeconfiguration.JsxElement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.JsxElementDescription":{"scope":"resource","default":"Jsx element","type":"string"},"codemetrics.nodeconfiguration.JsxSelfClosingElement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.JsxSelfClosingElementDescription":{"scope":"resource","default":"Jsx self closingElement","type":"string"},"codemetrics.nodeconfiguration.LabeledStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.LabeledStatementDescription":{"scope":"resource","default":"Labeled statement","type":"string"},"codemetrics.nodeconfiguration.MethodDeclaration":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.MethodDeclarationDescription":{"scope":"resource","default":"Method declaration","type":"string"},"codemetrics.nodeconfiguration.MethodSignature":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.MethodSignatureDescription":{"scope":"resource","default":"Method signature","type":"string"},"codemetrics.nodeconfiguration.ModuleDeclaration":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ModuleDeclarationDescription":{"scope":"resource","default":"Module declaration","type":"string"},"codemetrics.nodeconfiguration.NamedImports":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.NamedImportsDescription":{"scope":"resource","default":"Named imports","type":"string"},"codemetrics.nodeconfiguration.NamespaceImport":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.NamespaceImportDescription":{"scope":"resource","default":"Namespace import","type":"string"},"codemetrics.nodeconfiguration.NewExpression":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.NewExpressionDescription":{"scope":"resource","default":"New expression","type":"string"},"codemetrics.nodeconfiguration.ObjectBindingPattern":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ObjectBindingPatternDescription":{"scope":"resource","default":"","type":"string"},"codemetrics.nodeconfiguration.ObjectLiteralExpression":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ObjectLiteralExpressionDescription":{"scope":"resource","default":"Object literal expression","type":"string"},"codemetrics.nodeconfiguration.Parameter":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.ParameterDescription":{"scope":"resource","default":"Parameter","type":"string"},"codemetrics.nodeconfiguration.PostfixUnaryExpression":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.PostfixUnaryExpressionDescription":{"scope":"resource","default":"Postfix unary expression","type":"string"},"codemetrics.nodeconfiguration.PrefixUnaryExpression":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.PrefixUnaryExpressionDescription":{"scope":"resource","default":"Prefix unary expression","type":"string"},"codemetrics.nodeconfiguration.PropertyAccessExpression":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.PropertyAccessExpressionDescription":{"scope":"resource","default":"Property access expression","type":"string"},"codemetrics.nodeconfiguration.PropertyAssignment":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.PropertyAssignmentDescription":{"scope":"resource","default":"Property assignment","type":"string"},"codemetrics.nodeconfiguration.PropertyDeclaration":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.PropertyDeclarationDescription":{"scope":"resource","default":"Property declaration","type":"string"},"codemetrics.nodeconfiguration.PropertySignature":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.PropertySignatureDescription":{"scope":"resource","default":"Property signature","type":"string"},"codemetrics.nodeconfiguration.RegularExpressionLiteral":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.RegularExpressionLiteralDescription":{"scope":"resource","default":"Regular expression literal","type":"string"},"codemetrics.nodeconfiguration.ReturnStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.ReturnStatementDescription":{"scope":"resource","default":"Return statement","type":"string"},"codemetrics.nodeconfiguration.SetAccessor":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.SetAccessorDescription":{"scope":"resource","default":"Set accessor","type":"string"},"codemetrics.nodeconfiguration.SourceFile":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.SourceFileDescription":{"scope":"resource","default":"Source file","type":"string"},"codemetrics.nodeconfiguration.StringLiteral":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.StringLiteralDescription":{"scope":"resource","default":"String literal","type":"string"},"codemetrics.nodeconfiguration.SwitchStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.SwitchStatementDescription":{"scope":"resource","default":"Switch statement","type":"string"},"codemetrics.nodeconfiguration.TemplateExpression":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.TemplateExpressionDescription":{"scope":"resource","default":"Template expression","type":"string"},"codemetrics.nodeconfiguration.ThrowStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.ThrowStatementDescription":{"scope":"resource","default":"Throw statement","type":"string"},"codemetrics.nodeconfiguration.TryStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.TryStatementDescription":{"scope":"resource","default":"Try statement","type":"string"},"codemetrics.nodeconfiguration.TypeAssertionExpression":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.TypeAssertionExpressionDescription":{"scope":"resource","default":"Type assertion expression","type":"string"},"codemetrics.nodeconfiguration.TypeLiteral":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.TypeLiteralDescription":{"scope":"resource","default":"Type literal","type":"string"},"codemetrics.nodeconfiguration.TypeReference":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.TypeReferenceDescription":{"scope":"resource","default":"Type reference","type":"string"},"codemetrics.nodeconfiguration.VariableDeclaration":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.VariableDeclarationDescription":{"scope":"resource","default":"Variable declaration","type":"string"},"codemetrics.nodeconfiguration.VariableStatement":{"scope":"resource","default":0,"type":"number"},"codemetrics.nodeconfiguration.VariableStatementDescription":{"scope":"resource","default":"Variable statement","type":"string"},"codemetrics.nodeconfiguration.WhileStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.WhileStatementDescription":{"scope":"resource","default":"While statement","type":"string"},"codemetrics.nodeconfiguration.WithStatement":{"scope":"resource","default":1,"type":"number"},"codemetrics.nodeconfiguration.WithStatementDescription":{"scope":"resource","default":"With statement","type":"string"}}}},"main":"./dist/extension","scripts":{"vscode:prepublish":"webpack --mode production","webpack":"webpack --mode development","webpack-prod":"webpack --mode production","webpack-dev":"webpack --mode development --watch","analyze":"webpack --mode development --json | npx webpack-bundle-size-analyzer"},"devDependencies":{"@types/minimatch":"^3.0.3","@types/node":"^12.12.14","@types/vscode":"^1.40.0","ts-loader":"^6.2.1","tsconfig-paths":"^3.9.0","webpack":"^4.41.2","webpack-cli":"^3.3.10"},"dependencies":{"luaparse":"^0.2.1","minimatch":"^3.0.4","tsmetrics-core":"^1.2.1","typescript":"^3.7.3","vscode-languageclient":"5.3.0-next.6","vscode-languageserver":"5.3.0-next.7"},"uuid":"4dd4cb5f-8946-4882-bf7c-e5997ab40481","isBuiltin":false,"isUnderDevelopment":false,"id":"kisstkondoros.vscode-codemetrics","identifier":{"value":"kisstkondoros.vscode-codemetrics","_lower":"kisstkondoros.vscode-codemetrics"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/kisstkondoros.vscode-codemetrics-1.24.0","path":"/home/ansi/.vscode/extensions/kisstkondoros.vscode-codemetrics-1.24.0","scheme":"file"}},{"name":"gitignore","displayName":"gitignore","description":"Add file to .gitignore","version":"1.0.1","publisher":"michelemelluso","engines":{"vscode":"^1.0.0"},"categories":["Snippets"],"activationEvents":["*"],"main":"./out/src/extension","contributes":{"commands":[{"command":"gitignore.add","title":"Add to .gitignore"}],"menus":{"explorer/context":[{"command":"gitignore.add","group":"navigation"}]}},"scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^1.8.10","vscode":"^0.11.13"},"uuid":"0fa141d2-0184-49b6-b8f6-b572f965b164","isBuiltin":false,"isUnderDevelopment":false,"id":"michelemelluso.gitignore","identifier":{"value":"michelemelluso.gitignore","_lower":"michelemelluso.gitignore"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/michelemelluso.gitignore-1.0.1","path":"/home/ansi/.vscode/extensions/michelemelluso.gitignore-1.0.1","scheme":"file"}},{"name":"vscode-less","displayName":"Less IntelliSense","description":"Advanced autocompletion and refactoring support for Less","version":"0.6.3","preview":true,"publisher":"mrmlnc","license":"MIT","engines":{"vscode":"^1.11.0"},"icon":"icon.png","homepage":"https://github.com/mrmlnc/vscode-less/blob/master/README.md","repository":{"type":"git","url":"https://github.com/mrmlnc/vscode-less"},"keywords":["less","autocompletion","intellisense","refactor"],"categories":["Languages"],"activationEvents":["onLanguage:less"],"main":"./out/client.js","contributes":{"configuration":{"properties":{"less.scannerDepth":{"type":"number","default":30,"description":"The maximum number of nested directories to scan."},"less.scannerExclude":{"type":"array","items":{"type":"string"},"default":["**/.git","**/node_modules","**/bower_components"],"description":"List of Glob-patterns for directories that are excluded when scanning."},"less.scanImportedFiles":{"type":"boolean","default":true,"description":"Allows scan imported files."},"less.scanImportedFilesDepth":{"type":"number","default":50,"description":"The maximum number of imported files to scan."},"less.implicitlyLabel":{"type":["string","null"],"default":"(implicitly)","description":"The text of a label that the file imported implicitly. If `null` then label not displayed."},"less.showErrors":{"type":"boolean","default":false,"description":"Allows to display errors."},"less.suggestVariables":{"type":"boolean","default":true,"description":"Allows prompt Variables."},"less.suggestMixins":{"type":"boolean","default":true,"description":"Allows prompt Mixins."}}}},"devDependencies":{"@types/micromatch":"^2.3.29","@types/mocha":"^2.2.41","@types/node":"^7.0.18","mocha":"^3.3.0","rimraf":"^2.6.1","tslint":"^5.2.0","tslint-config-xo":"^1.2.0","typescript":"^2.3.2","vscode":"^1.1.0"},"dependencies":{"vscode-languageclient":"3.2.2","vscode-languageserver":"3.2.2","vscode-css-languageservice":"2.0.3","vscode-uri":"1.0.0","readdir-enhanced":"1.5.2","micromatch":"2.3.11","less-symbols-parser":"2.1.1"},"scripts":{"postinstall":"node ./node_modules/vscode/bin/install","clean":"rimraf out","lint":"tslint src/**/*.ts","compile":"tsc","test":"mocha out/**/*.spec.js","build":"npm run clean && npm run lint && npm run compile && npm test","watch":"npm run clean && npm run lint && npm run compile -- --watch"},"uuid":"e8e7b42a-e70c-489f-a2dd-ebf10cf14a33","isBuiltin":false,"isUnderDevelopment":false,"id":"mrmlnc.vscode-less","identifier":{"value":"mrmlnc.vscode-less","_lower":"mrmlnc.vscode-less"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/mrmlnc.vscode-less-0.6.3","path":"/home/ansi/.vscode/extensions/mrmlnc.vscode-less-0.6.3","scheme":"file"}},{"name":"vscode-scss","displayName":"SCSS IntelliSense","description":"Advanced autocompletion and refactoring support for SCSS","version":"0.9.0","preview":true,"publisher":"mrmlnc","license":"MIT","engines":{"vscode":"^1.30.0"},"icon":"icon.png","homepage":"https://github.com/mrmlnc/vscode-scss/blob/master/README.md","repository":{"type":"git","url":"https://github.com/mrmlnc/vscode-scss"},"keywords":["scss","autocompletion","intellisense","refactor"],"categories":["Programming Languages"],"activationEvents":["onLanguage:scss","onLanguage:vue"],"main":"./out/client.js","contributes":{"configuration":{"properties":{"scss.scannerDepth":{"type":"number","default":30,"description":"The maximum number of nested directories to scan."},"scss.scannerExclude":{"type":"array","items":{"type":"string"},"default":["**/.git","**/node_modules","**/bower_components"],"description":"List of Glob-patterns for directories that are excluded when scanning."},"scss.scanImportedFiles":{"type":"boolean","default":true,"description":"Allows scan imported files."},"scss.implicitlyLabel":{"type":["string","null"],"default":"(implicitly)","description":"The text of a label that the file imported implicitly. If `null` then label not displayed."},"scss.showErrors":{"type":"boolean","default":false,"description":"Allows to display errors."},"scss.suggestVariables":{"type":"boolean","default":true,"description":"Allows prompt Variables."},"scss.suggestMixins":{"type":"boolean","default":true,"description":"Allows prompt Mixins."},"scss.suggestFunctions":{"type":"boolean","default":true,"description":"Allows prompt Functions."},"scss.suggestFunctionsInStringContextAfterSymbols":{"type":"string","default":" (+-*%","description":"Allows prompt Functions in String context after specified symbols."},"scss.dev.serverPort":{"type":"number","description":"The port that SCSS IntelliSense server listens to. Can be used for attaching to the server Node process for debugging / profiling.","default":-1}}}},"devDependencies":{"@nodelib/fs.macchiato":"^1.0.2","@types/glob":"^7.1.1","@types/micromatch":"^3.1.0","@types/mocha":"^5.2.7","@types/node":"10.17.6","@types/parse-glob":"^3.0.29","@types/sinon":"^7.5.0","@types/vscode":"1.30.0","glob":"^7.1.6","husky":"^3.0.9","lint-staged":"^9.4.2","mocha":"^6.2.2","prettier":"^1.19.1","rimraf":"^2.6.1","sinon":"^7.5.0","tslint":"^5.4.3","tslint-config-xo":"^2.0.0","typescript":"^3.7.2","vscode-test":"^1.2.3"},"dependencies":{"color":"3.0.0","color-name":"1.1.3","fast-glob":"3.1.0","scss-symbols-parser":"2.0.1","vscode-css-languageservice":"4.0.3-next.25","vscode-languageclient":"^5.2.1","vscode-languageserver":"^5.2.1","vscode-languageserver-types":"^3.14.0","vscode-uri":"^2.1.1"},"scripts":{"clean":"rimraf out","lint":"tslint src/**/*.ts --project ./tsconfig.json","compile":"tsc","test":"mocha \"out/**/*.spec.js\"","test:e2e":"node ./out/test/e2e/runTest.js","build":"npm run clean && npm run lint && npm run compile && npm test","watch":"npm run clean && npm run lint && tsc --watch"},"husky":{"hooks":{"pre-commit":"lint-staged","pre-push":"yarn test"}},"lint-staged":{"*.ts":["prettier --write","tslint --fix","git add"],"*.json":["prettier --write","git add"]},"uuid":"beb68b20-7c55-471c-9b63-3486f9423566","isBuiltin":false,"isUnderDevelopment":false,"id":"mrmlnc.vscode-scss","identifier":{"value":"mrmlnc.vscode-scss","_lower":"mrmlnc.vscode-scss"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/mrmlnc.vscode-scss-0.9.0","path":"/home/ansi/.vscode/extensions/mrmlnc.vscode-scss-0.9.0","scheme":"file"}},{"name":"python","displayName":"Python","description":"Linting, Debugging (multi-threaded, remote), Intellisense, Jupyter Notebooks, code formatting, refactoring, unit tests, snippets, and more.","version":"2020.5.80290","featureFlags":{"usingNewInterpreterStorage":true},"languageServerVersion":"0.5.30","publisher":"ms-python","enableProposedApi":false,"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+python","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.43.0"},"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Snippets","Formatters","Other"],"activationEvents":["onLanguage:python","onLanguage:jupyter","onDebugResolve:python","onCommand:python.execInTerminal","onCommand:python.sortImports","onCommand:python.runtests","onCommand:python.debugtests","onCommand:python.setInterpreter","onCommand:python.setShebangInterpreter","onCommand:python.viewTestUI","onCommand:python.viewLanguageServerOutput","onCommand:python.viewTestOutput","onCommand:python.viewOutput","onCommand:python.datascience.viewJupyterOutput","onCommand:python.selectAndRunTestMethod","onCommand:python.selectAndDebugTestMethod","onCommand:python.selectAndRunTestFile","onCommand:python.runCurrentTestFile","onCommand:python.runFailedTests","onCommand:python.execSelectionInTerminal","onCommand:python.execSelectionInDjangoShell","onCommand:python.buildWorkspaceSymbols","onCommand:python.startREPL","onCommand:python.goToPythonObject","onCommand:python.setLinter","onCommand:python.enableLinting","onCommand:python.createTerminal","onCommand:python.discoverTests","onCommand:python.configureTests","onCommand:python.switchOffInsidersChannel","onCommand:python.switchToDailyChannel","onCommand:python.switchToWeeklyChannel","onCommand:python.clearWorkspaceInterpreter","onCommand:python.resetInterpreterSecurityStorage","onCommand:python.datascience.createnewnotebook","onCommand:python.datascience.showhistorypane","onCommand:python.datascience.importnotebook","onCommand:python.datascience.importnotebookfile","onCommand:python.datascience.opennotebook","onCommand:python.datascience.selectjupyteruri","onCommand:python.datascience.exportfileasnotebook","onCommand:python.datascience.exportfileandoutputasnotebook","onCommand:python.datascience.selectJupyterInterpreter","onCommand:python.datascience.selectjupytercommandline","onCommand:python.enableSourceMapSupport","onCustomEditor:NativeEditorProvider.ipynb","workspaceContains:**/mspythonconfig.json"],"main":"./out/client/extension","contributes":{"snippets":[{"language":"python","path":"./snippets/python.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !python.datascience.ownsSelection"},{"command":"python.datascience.execSelectionInteractive","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && python.datascience.ownsSelection && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcelladvance","key":"shift+enter","when":"editorTextFocus && !editorHasSelection && python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcell","key":"ctrl+enter","when":"editorTextFocus && !editorHasSelection && python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcellandaddbelow","key":"alt+enter","when":"editorTextFocus && !editorHasSelection && python.datascience.hascodecells && python.datascience.featureenabled"}],"commands":[{"command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","category":"Python"},{"command":"python.sortImports","title":"Sort Imports","category":"Python Refactor"},{"command":"python.startREPL","title":"Start REPL","category":"Python"},{"command":"python.createTerminal","title":"Create Terminal","category":"Python"},{"command":"python.buildWorkspaceSymbols","title":"Build Workspace Symbols","category":"Python"},{"command":"python.openTestNodeInEditor","title":"Open","icon":{"light":"resources/light/open-file.svg","dark":"resources/dark/open-file.svg"}},{"command":"python.runTestNode","title":"Run","icon":{"light":"resources/light/start.svg","dark":"resources/dark/start.svg"}},{"command":"python.debugTestNode","title":"Debug","icon":{"light":"resources/light/debug.svg","dark":"resources/dark/debug.svg"}},{"command":"python.runtests","title":"Run All Tests","category":"Python","icon":{"light":"resources/light/run-tests.svg","dark":"resources/dark/run-tests.svg"}},{"command":"python.debugtests","title":"Debug All Tests","category":"Python","icon":{"light":"resources/light/debug.svg","dark":"resources/dark/debug.svg"}},{"command":"python.execInTerminal","title":"Run Python File in Terminal","category":"Python"},{"command":"python.execInTerminal-icon","title":"Run Python File in Terminal","category":"Python","icon":{"light":"resources/light/run-file.svg","dark":"resources/dark/run-file.svg"}},{"command":"python.setInterpreter","title":"Select Interpreter","category":"Python"},{"command":"python.switchOffInsidersChannel","title":"Switch to Default Channel","category":"Python"},{"command":"python.switchToDailyChannel","title":"Switch to Insiders Daily Channel","category":"Python"},{"command":"python.switchToWeeklyChannel","title":"Switch to Insiders Weekly Channel","category":"Python"},{"command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","category":"Python"},{"command":"python.resetInterpreterSecurityStorage","title":"Reset Stored Info for Untrusted Interpreters","category":"Python"},{"command":"python.refactorExtractVariable","title":"Extract Variable","category":"Python Refactor"},{"command":"python.refactorExtractMethod","title":"Extract Method","category":"Python Refactor"},{"command":"python.viewTestOutput","title":"Show Test Output","category":"Python","icon":{"light":"resources/light/repl.svg","dark":"resources/dark/repl.svg"}},{"command":"python.datascience.viewJupyterOutput","title":"Show Jupyter Output","category":"Python"},{"command":"python.datascience.selectJupyterInterpreter","title":"Select Interpreter to start Jupyter server","category":"Python"},{"command":"python.viewLanguageServerOutput","title":"Show Language Server Output","category":"Python","enablement":"python.hasLanguageServerOutputChannel"},{"command":"python.viewOutput","title":"Show Output","category":"Python","icon":{"light":"resources/light/repl.svg","dark":"resources/dark/repl.svg"}},{"command":"python.selectAndRunTestMethod","title":"Run Test Method ...","category":"Python"},{"command":"python.selectAndDebugTestMethod","title":"Debug Test Method ...","category":"Python"},{"command":"python.selectAndRunTestFile","title":"Run Test File ...","category":"Python"},{"command":"python.runCurrentTestFile","title":"Run Current Test File","category":"Python"},{"command":"python.runFailedTests","title":"Run Failed Tests","category":"Python","icon":{"light":"resources/light/run-failed-tests.svg","dark":"resources/dark/run-failed-tests.svg"}},{"command":"python.discoverTests","title":"Discover Tests","category":"Python","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"python.discoveringTests","title":"Discovering...","category":"Python","icon":{"light":"resources/light/discovering-tests.svg","dark":"resources/dark/discovering-tests.svg"}},{"command":"python.stopTests","title":"Stop","category":"Python","icon":{"light":"resources/light/stop.svg","dark":"resources/dark/stop.svg"}},{"command":"python.configureTests","title":"Configure Tests","category":"Python"},{"command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","category":"Python"},{"command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","category":"Python"},{"command":"python.goToPythonObject","title":"Go to Python Object","category":"Python"},{"command":"python.setLinter","title":"Select Linter","category":"Python"},{"command":"python.enableLinting","title":"Enable Linting","category":"Python"},{"command":"python.runLinting","title":"Run Linting","category":"Python"},{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python"},{"command":"python.datascience.debugcell","title":"Debug Cell","category":"Python"},{"command":"python.datascience.debugstepover","title":"Step Over","category":"Python"},{"command":"python.datascience.debugstop","title":"Stop","category":"Python"},{"command":"python.datascience.debugcontinue","title":"Continue","category":"Python"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python"},{"command":"python.datascience.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Python"},{"command":"python.datascience.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Python"},{"command":"python.datascience.debugcurrentcell.palette","title":"Debug Current Cell","category":"Python"},{"command":"python.datascience.execSelectionInteractive","title":"Run Selection/Line in Python Interactive Window","category":"Python"},{"command":"python.datascience.showhistorypane","title":"Show Python Interactive Window","category":"Python"},{"command":"python.datascience.runFileInteractive","title":"Run Current File in Python Interactive Window","category":"Python"},{"command":"python.datascience.debugFileInteractive","title":"Debug Current File in Python Interactive Window","category":"Python"},{"command":"python.datascience.runallcells","title":"Run All Cells","category":"Python"},{"command":"python.datascience.runallcellsabove","title":"Run Above","category":"Python"},{"command":"python.datascience.runcellandallbelow","title":"Run Below","category":"Python"},{"command":"python.datascience.runcell","title":"Run Cell","category":"Python"},{"command":"python.datascience.runtoline","title":"Run To Line in Python Interactive Window","category":"Python"},{"command":"python.datascience.runfromline","title":"Run From Line in Python Interactive Window","category":"Python"},{"command":"python.datascience.selectjupyteruri","title":"Specify local or remote Jupyter server for connections","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.selectjupytercommandline","title":"Specify Jupyter command line arguments","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"},{"command":"python.datascience.importnotebookfile","title":"Convert to Python Script","category":"Python"},{"command":"python.datascience.opennotebook","title":"Open in Notebook Editor","category":"Python"},{"command":"python.datascience.exportoutputasnotebook","title":"Export Python Interactive Window as Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Python"},{"command":"python.datascience.undocells","title":"Undo Last Python Interactive Action","category":"Python"},{"command":"python.datascience.redocells","title":"Redo Last Python Interactive Action","category":"Python"},{"command":"python.datascience.notebookeditor.undocells","title":"Undo Last Python Interactive Action","category":"Python"},{"command":"python.datascience.notebookeditor.redocells","title":"Redo Last Python Interactive Action","category":"Python"},{"command":"python.datascience.removeallcells","title":"Delete All Python Interactive Cells","category":"Python"},{"command":"python.datascience.interruptkernel","title":"Interrupt IPython Kernel","category":"Python"},{"command":"python.datascience.restartkernel","title":"Restart IPython Kernel","category":"Python"},{"command":"python.datascience.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Python"},{"command":"python.datascience.notebookeditor.interruptkernel","title":"Interrupt IPython Kernel","category":"Python"},{"command":"python.datascience.notebookeditor.restartkernel","title":"Restart IPython Kernel","category":"Python"},{"command":"python.datascience.notebookeditor.runallcells","title":"Run All Notebook Cells","category":"Python"},{"command":"python.datascience.notebookeditor.runselectedcell","title":"Run Selected Notebook Cell","category":"Python"},{"command":"python.datascience.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Python"},{"command":"python.datascience.expandallcells","title":"Expand All Python Interactive Cells","category":"Python"},{"command":"python.datascience.collapseallcells","title":"Collapse All Python Interactive Cells","category":"Python"},{"command":"python.datascience.addcellbelow","title":"Add Empty Cell to File","category":"Python"},{"command":"python.datascience.createnewnotebook","title":"Create New Blank Jupyter Notebook","category":"Python"},{"command":"python.datascience.scrolltocell","title":"Scroll Cell Into View","category":"Python"},{"command":"python.analysis.clearCache","title":"Clear Module Analysis Cache","category":"Python"},{"command":"python.datascience.switchKernel","title":"Select a Kernel","category":"Python","enablement":"python.datascience.isnativeactive"},{"command":"python.datascience.gatherquality","title":"DataScience.gatherQuality","category":"Python"}],"menus":{"editor/context":[{"command":"python.refactorExtractVariable","title":"Refactor: Extract Variable","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.refactorExtractMethod","title":"Refactor: Extract Method","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.sortImports","title":"Refactor: Sort Imports","group":"Refactor","when":"editorLangId == python"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == python","command":"python.runCurrentTestFile","group":"Python"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runallcells","group":"Python2"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runcurrentcell","group":"Python2"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runcurrentcelladvance","group":"Python2"},{"command":"python.datascience.runFileInteractive","group":"Python2","when":"editorFocus && editorLangId == python && python.datascience.featureenabled"},{"command":"python.datascience.runfromline","group":"Python2","when":"editorFocus && editorLangId == python && python.datascience.ownsSelection && python.datascience.featureenabled"},{"command":"python.datascience.runtoline","group":"Python2","when":"editorFocus && editorLangId == python && python.datascience.ownsSelection && python.datascience.featureenabled"},{"command":"python.datascience.execSelectionInteractive","group":"Python2","when":"editorFocus && editorLangId == python && python.datascience.featureenabled && python.datascience.ownsSelection"},{"when":"editorFocus && editorLangId == python && resourceLangId == jupyter && python.datascience.featureenabled","command":"python.datascience.importnotebook","group":"Python3@1"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.exportfileasnotebook","group":"Python3@2"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.exportfileandoutputasnotebook","group":"Python3@3"}],"editor/title":[{"command":"python.execInTerminal-icon","title":"Run Python File in Terminal","group":"navigation","when":"resourceLangId == python && python.showPlayIcon"}],"explorer/context":[{"when":"resourceLangId == python && !busyTests","command":"python.runtests","group":"Python"},{"when":"resourceLangId == python && !busyTests","command":"python.debugtests","group":"Python"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == python && python.datascience.featureenabled","command":"python.datascience.runFileInteractive","group":"Python2"},{"when":"resourceLangId == jupyter","command":"python.datascience.opennotebook","group":"Python"},{"when":"resourceLangId == jupyter","command":"python.datascience.importnotebookfile","group":"Python"}],"commandPalette":[{"command":"python.switchOffInsidersChannel","title":"Switch to Default Channel","category":"Python","when":"config.python.insidersChannel != 'default'"},{"command":"python.switchToDailyChannel","title":"Switch to Insiders Daily Channel","category":"Python","when":"config.python.insidersChannel != 'daily'"},{"command":"python.switchToWeeklyChannel","title":"Switch to Insiders Weekly Channel","category":"Python","when":"config.python.insidersChannel != 'weekly'"},{"command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","category":"Python"},{"command":"python.resetInterpreterSecurityStorage","title":"Reset Stored Info for Untrusted Interpreters","category":"Python"},{"command":"python.viewOutput","title":"Show Output","category":"Python"},{"command":"python.runTestNode","title":"Run","category":"Python","when":"config.noExists"},{"command":"python.discoveringTests","category":"Python","when":"config.noExists"},{"command":"python.stopTests","category":"Python","when":"config.noExists"},{"command":"python.debugTestNode","title":"Debug","category":"Python","when":"config.noExists"},{"command":"python.openTestNodeInEditor","title":"Open","category":"Python","when":"config.noExists"},{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.debugcurrentcell.palette","title":"Debug Current Cell","category":"Python","when":"editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.showhistorypane","title":"Show Python Interactive Window","category":"Python","when":"python.datascience.featureenabled && !python.datascience.isinteractiveactive"},{"command":"python.datascience.runallcells","title":"Run All Cells","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.scrolltocell","title":"Scroll Cell Into View","category":"Python","when":"false"},{"command":"python.datascience.debugcell","title":"Debug Cell","category":"Python","when":"config.noExists"},{"command":"python.datascience.runcell","title":"Run Cell","category":"Python","when":"config.noExists"},{"command":"python.datascience.runFileInteractive","title":"Run Current File in Python Interactive Window","category":"Python","when":"editorLangId == python && python.datascience.featureenabled"},{"command":"python.datascience.debugFileInteractive","title":"Debug Current File in Python Interactive Window","category":"Python","when":"editorLangId == python && python.datascience.featureenabled"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"},{"command":"python.datascience.opennotebook","title":"Open in Notebook Editor","category":"Python"},{"command":"python.datascience.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive"},{"command":"python.datascience.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive"},{"command":"python.datascience.undocells","title":"Undo Last Python Interactive Action","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive"},{"command":"python.datascience.redocells","title":"Redo Last Python Interactive Action","category":"Python","when":"python.datascience.haveredoablecells && python.datascience.featureenabled && python.datascience.ispythonorinteractiveornativeeactive"},{"command":"python.datascience.removeallcells","title":"Delete All Python Interactive Cells","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive"},{"command":"python.datascience.interruptkernel","title":"Interrupt IPython Kernel","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive"},{"command":"python.datascience.restartkernel","title":"Restart IPython Kernel","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive"},{"command":"python.datascience.notebookeditor.undocells","title":"Undo Last Python Interactive Action","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled && python.datascience.isnativeactive"},{"command":"python.datascience.notebookeditor.redocells","title":"Redo Last Python Interactive Action","category":"Python","when":"python.datascience.havenativeredoablecells && python.datascience.featureenabled && python.datascience.isnativeactive"},{"command":"python.datascience.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Python","when":"python.datascience.havenativecells && python.datascience.featureenabled && python.datascience.isnativeactive"},{"command":"python.datascience.notebookeditor.interruptkernel","title":"Interrupt IPython Kernel","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled"},{"command":"python.datascience.notebookeditor.restartkernel","title":"Restart IPython Kernel","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled"},{"command":"python.datascience.notebookeditor.runallcells","title":"Run All Notebook Cells","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled"},{"command":"python.datascience.notebookeditor.runselectedcell","title":"Run Selected Notebook Cell","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled && python.datascience.havecellselected"},{"command":"python.datascience.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled"},{"command":"python.datascience.expandallcells","title":"Expand All Python Interactive Cells","category":"Python","when":"python.datascience.isinteractiveactive && python.datascience.featureenabled"},{"command":"python.datascience.collapseallcells","title":"Collapse All Python Interactive Cells","category":"Python","when":"python.datascience.isinteractiveactive && python.datascience.featureenabled"},{"command":"python.datascience.exportoutputasnotebook","title":"Export Python Interactive Window as Jupyter Notebook","category":"Python","when":"python.datascience.isinteractiveactive && python.datascience.featureenabled"},{"command":"python.datascience.runcellandallbelow","category":"Python","when":"config.noExists"},{"command":"python.datascience.runallcellsabove","category":"Python","when":"config.noExists"},{"command":"python.datascience.debugcontinue","category":"Python","when":"config.noExists"},{"command":"python.datascience.debugstop","category":"Python","when":"config.noExists"},{"command":"python.datascience.debugstepover","category":"Python","when":"config.noExists"},{"command":"python.datascience.debugcell","category":"Python","when":"config.noExists"},{"command":"python.datascience.addcellbelow","title":"Add Empty Cell to File","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.createnewnotebook","title":"Create New Blank Jupyter Notebook","category":"Python"},{"command":"python.datascience.runtoline","category":"Python","when":"config.noExists"},{"command":"python.datascience.runfromline","category":"Python","when":"config.noExists"},{"command":"python.datascience.execSelectionInteractive","category":"Python","when":"editorLangId == python && python.datascience.featureenabled"},{"command":"python.datascience.switchKernel","title":"Select a Kernel","category":"Python","when":"python.datascience.isnativeactive"},{"command":"python.datascience.gatherquality","title":"Did gather work as desired?","category":"Python","when":"false"}],"view/title":[{"command":"python.debugtests","when":"view == python_tests && !busyTests","group":"navigation@3"},{"command":"python.runtests","when":"view == python_tests && !busyTests","group":"navigation@1"},{"command":"python.stopTests","when":"view == python_tests && busyTests","group":"navigation@1"},{"command":"python.discoverTests","when":"view == python_tests && !busyTests","group":"navigation@4"},{"command":"python.discoveringTests","when":"view == python_tests && discoveringTests","group":"navigation@4"},{"command":"python.runFailedTests","when":"view == python_tests && hasFailedTests && !busyTests","group":"navigation@2"},{"command":"python.viewTestOutput","when":"view == python_tests","group":"navigation@5"}],"view/item/context":[{"command":"python.runtests","when":"view == python_tests && viewItem == testWorkspaceFolder && !busyTests","group":"inline@0"},{"command":"python.debugtests","when":"view == python_tests && viewItem == testWorkspaceFolder && !busyTests","group":"inline@1"},{"command":"python.discoverTests","when":"view == python_tests && viewItem == testWorkspaceFolder && !busyTests","group":"inline@2"},{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == function","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == function && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == function && !busyTests","group":"inline@0"},{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == file","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == file && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == file && !busyTests","group":"inline@0"},{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == suite","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == suite && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == suite && !busyTests","group":"inline@0"}]},"breakpoints":[{"language":"python"},{"language":"html"},{"language":"jinja"}],"debuggers":[{"type":"python","label":"Python","languages":["python"],"program":"./out/client/debugger/debugAdapter/main.js","runtime":"node","variables":{"pickProcess":"python.pickLocalProcess"},"configurationSnippets":[],"configurationAttributes":{"launch":{"properties":{"module":{"type":"string","description":"Name of the module to be debugged.","default":""},"program":{"type":"string","description":"Absolute path to the program.","default":"${file}"},"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings","default":"${config:python.interpreterPath}"},"args":{"type":"array","description":"Command line arguments passed to the program","default":[],"items":{"type":"string"}},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":true},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"integratedTerminal"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{},"additionalProperties":{"type":"string"}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"port":{"type":"number","description":"Debug port (default is 0, resulting in the use of a dynamic port).","default":0},"host":{"type":"string","description":"IP address of the of the local debug server (default is localhost).","default":"localhost"},"pathMappings":{"type":"array","label":"Path mappings.","items":{"type":"object","label":"Path mapping","required":["localRoot","remoteRoot"],"properties":{"localRoot":{"type":"string","label":"Local source root.","default":"${workspaceFolder}"},"remoteRoot":{"type":"string","label":"Remote source root.","default":""}}},"default":[]},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"justMyCode":{"type":"boolean","description":"Debug only user-written code.","default":true},"gevent":{"type":"boolean","description":"Enable debugging of gevent monkey-patched code.","default":false},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"sudo":{"type":"boolean","description":"Running debug program under elevated permissions (on Unix).","default":false},"pyramid":{"type":"boolean","description":"Whether debugging Pyramid applications","default":false},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false}}},"test":{"properties":{"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings","default":"${config:python.interpreterPath}"},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":true},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"internalConsole"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{},"additionalProperties":{"type":"string"}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"justMyCode":{"type":"boolean","description":"Debug only user-written code.","default":true}}},"attach":{"properties":{"connect":{"type":"object","label":"Attach by connecting to debugpy over a socket.","properties":{"port":{"type":"number","description":"Port to connect to."},"host":{"type":"string","description":"Hostname or IP address to connect to.","default":"127.0.0.1"}},"required":["port"]},"listen":{"type":"object","label":"Attach by listening for incoming socket connection from debugpy","properties":{"port":{"type":"number","description":"Port to listen on."},"host":{"type":"string","description":"Hostname or IP address of the interface to listen on.","default":"127.0.0.1"}},"required":["port"]},"port":{"type":"number","description":"Port to connect to."},"host":{"type":"string","description":"Hostname or IP address to connect to.","default":"127.0.0.1"},"pathMappings":{"type":"array","label":"Path mappings.","items":{"type":"object","label":"Path mapping","required":["localRoot","remoteRoot"],"properties":{"localRoot":{"type":"string","label":"Local source root.","default":"${workspaceFolder}"},"remoteRoot":{"type":"string","label":"Remote source root.","default":""}}},"default":[]},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"justMyCode":{"type":"boolean","description":"Debug only user-written code.","default":true},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":true},"processId":{"anyOf":[{"enum":["${command:pickProcess}"],"description":"Use process picker to select a process to attach, or Process ID as integer.","default":"${command:pickProcess}"},{"type":"integer","description":"ID of the local process to attach to."}]}}}}}],"configuration":{"type":"object","title":"Python","properties":{"python.diagnostics.sourceMapsEnabled":{"type":"boolean","default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application"},"python.autoComplete.addBrackets":{"type":"boolean","default":false,"description":"Automatically add brackets for functions.","scope":"resource"},"python.autoComplete.extraPaths":{"type":"array","default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource"},"python.autoComplete.showAdvancedMembers":{"type":"boolean","default":true,"description":"Controls appearance of methods with double underscores in the completion list.","scope":"resource"},"python.autoComplete.typeshedPaths":{"type":"array","items":{"type":"string"},"default":[],"description":"Specifies paths to local typeshed repository clone(s) for the Python language server.","scope":"resource"},"python.autoUpdateLanguageServer":{"type":"boolean","default":true,"description":"Automatically update the language server.","scope":"application"},"python.experiments.enabled":{"type":"boolean","default":true,"description":"Enables/disables A/B tests.","scope":"machine"},"python.defaultInterpreterPath":{"type":"string","default":"python","description":"Path to Python, you can use a custom version of Python by modifying this setting to include the full path.","scope":"machine"},"python.experiments.optInto":{"type":"array","default":[],"items":{"enum":["LS - enabled","AlwaysDisplayTestExplorer - experiment","ShowExtensionSurveyPrompt - enabled","DebugAdapterFactory - experiment","PtvsdWheels37 - experiment","Reload - experiment","AA_testing - experiment","WebHostNotebook - experiment","LocalZMQKernel - experiment","UseTerminalToGetActivatedEnvVars - experiment","CollectLSRequestTiming - experiment","CollectNodeLSRequestTiming - experiment","DeprecatePythonPath - experiment","RunByLine - experiment","All"]},"description":"List of experiment to opt into. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.","scope":"machine"},"python.experiments.optOutFrom":{"type":"array","default":[],"items":{"enum":["LS - enabled","AlwaysDisplayTestExplorer - experiment","ShowExtensionSurveyPrompt - enabled","DebugAdapterFactory - experiment","PtvsdWheels37 - experiment","Reload - experiment","AA_testing - experiment","WebHostNotebook - experiment","LocalZMQKernel - experiment","UseTerminalToGetActivatedEnvVars - experiment","CollectLSRequestTiming - experiment","CollectNodeLSRequestTiming - experiment","DeprecatePythonPath - experiment","RunByLine - experiment","All"]},"description":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.","scope":"machine"},"python.dataScience.allowImportFromNotebook":{"type":"boolean","default":true,"description":"Allows a user to import a jupyter notebook into a python file anytime one is opened.","scope":"resource"},"python.dataScience.widgetScriptSources":{"type":"array","default":[],"items":{"type":"string","enum":["jsdelivr.com","unpkg.com"],"enumDescriptions":["Loads widget (javascript) scripts from https://www.jsdelivr.com/","Loads widget (javascript) scripts from https://unpkg.com/"]},"uniqueItems":true,"markdownDescription":"Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.","scope":"machine"},"python.dataScience.askForLargeDataFrames":{"type":"boolean","default":true,"description":"Warn the user before trying to open really large data frames.","scope":"application"},"python.dataScience.askForKernelRestart":{"type":"boolean","default":true,"description":"Warn the user before restarting a kernel.","scope":"application"},"python.dataScience.enabled":{"type":"boolean","default":true,"description":"Enable the experimental data science features in the python extension.","scope":"resource"},"python.dataScience.exportWithOutputEnabled":{"type":"boolean","default":false,"description":"Enable exporting a python file into a jupyter notebook and run all cells when doing so.","scope":"resource"},"python.dataScience.jupyterLaunchTimeout":{"type":"number","default":60000,"description":"Amount of time (in ms) to wait for the Jupyter Notebook server to start.","scope":"resource"},"python.dataScience.jupyterLaunchRetries":{"type":"number","default":3,"description":"Number of times to attempt to connect to the Jupyter Notebook","scope":"resource"},"python.dataScience.jupyterServerURI":{"type":"string","default":"local","description":"When a Notebook Editor or Interactive Window session is started, create the kernel on the specified Jupyter server. Select 'local' to create a new Jupyter server on this local machine.","scope":"resource"},"python.dataScience.jupyterCommandLineArguments":{"type":"array","default":[],"description":"When a Notebook Editor or Interactive Window Jupyter server is started, these arguments will be passed to it. By default this list is generated by the Python Extension.","scope":"resource"},"python.dataScience.notebookFileRoot":{"type":"string","default":"${fileDirname}","description":"Set the root directory for loading files for the Python Interactive window.","scope":"resource"},"python.dataScience.searchForJupyter":{"type":"boolean","default":true,"description":"Search all installed Python interpreters for a Jupyter installation when starting the Python Interactive window","scope":"resource"},"python.dataScience.changeDirOnImportExport":{"type":"boolean","default":false,"description":"When importing or exporting a Jupyter Notebook add a directory change command to allow relative path loading to work.","scope":"resource"},"python.dataScience.useDefaultConfigForJupyter":{"type":"boolean","default":true,"description":"When running Jupyter locally, create a default empty Jupyter config for the Python Interactive window","scope":"resource"},"python.dataScience.jupyterInterruptTimeout":{"type":"number","default":10000,"description":"Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.","scope":"resource"},"python.dataScience.allowInput":{"type":"boolean","default":true,"description":"Allow the inputting of python code directly into the Python Interactive window"},"python.dataScience.showCellInputCode":{"type":"boolean","default":true,"description":"Show cell input code.","scope":"resource"},"python.dataScience.collapseCellInputCodeByDefault":{"type":"boolean","default":true,"description":"Collapse cell input code by default.","scope":"resource"},"python.dataScience.maxOutputSize":{"type":"number","default":400,"description":"Maximum size (in pixels) of text output in the Python Interactive window and Notebook Editor before a scrollbar appears. First enable scrolling for cell outputs in settings.","scope":"resource"},"python.dataScience.alwaysScrollOnNewCell":{"type":"boolean","default":false,"description":"Automatically scroll the interactive window to show the output of the last statement executed. If false, the interactive window will only automatically scroll if the bottom of the prior cell is visible.","scope":"resource"},"python.dataScience.enableScrollingForCellOutputs":{"type":"boolean","default":true,"description":"Enables scrolling for large cell outputs.","scope":"resource"},"python.dataScience.errorBackgroundColor":{"type":"string","default":"#FFFFFF","description":"Background color (in hex) for exception messages in the Python Interactive window.","scope":"resource","deprecationMessage":"No longer necessary as the theme colors are used for error messages"},"python.dataScience.sendSelectionToInteractiveWindow":{"type":"boolean","default":false,"description":"Determines if selected code in a python file will go to the terminal or the Python Interactive window when hitting shift+enter","scope":"resource"},"python.dataScience.showJupyterVariableExplorer":{"type":"boolean","default":true,"description":"Show the variable explorer in the Python Interactive window.","deprecationMessage":"This setting no longer applies. It is ignored.","scope":"resource"},"python.dataScience.variableExplorerExclude":{"type":"string","default":"module;function;builtin_function_or_method","description":"Types to exclude from showing in the Python Interactive variable explorer","scope":"resource"},"python.dataScience.codeRegularExpression":{"type":"string","default":"^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])","description":"Regular expression used to identify code cells. All code until the next match is considered part of this cell. \nDefaults to '^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])' if left blank","scope":"resource"},"python.dataScience.defaultCellMarker":{"type":"string","default":"# %%","description":"Cell marker used for delineating a cell in a python file.","scope":"resource"},"python.dataScience.markdownRegularExpression":{"type":"string","default":"^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)","description":"Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown. \nDefaults to '^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)' if left blank","scope":"resource"},"python.dataScience.allowLiveShare":{"type":"boolean","default":true,"description":"Allow the Python Interactive window to be shared during a Live Share session","scope":"resource"},"python.dataScience.ignoreVscodeTheme":{"type":"boolean","default":false,"description":"Don't use the VS Code theme in the Python Interactive window (requires reload of VS Code). This forces the Python Interactive window to use 'Light +(default light)' and disables matplotlib defaults.","scope":"resource"},"python.dataScience.themeMatplotlibPlots":{"type":"boolean","default":false,"description":"In the Python Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme.","scope":"resource"},"python.dataScience.liveShareConnectionTimeout":{"type":"number","default":1000,"description":"Amount of time to wait for guest connections to verify they have the Python extension installed.","scope":"application"},"python.dataScience.decorateCells":{"type":"boolean","default":true,"description":"Draw a highlight behind the currently active cell.","scope":"resource"},"python.dataScience.enableCellCodeLens":{"type":"boolean","default":true,"description":"Enables code lens for 'cells' in a python file.","scope":"resource"},"python.dataScience.enableAutoMoveToNextCell":{"type":"boolean","default":true,"description":"Enables moving to the next cell when clicking on a 'Run Cell' code lens.","scope":"resource"},"python.dataScience.autoPreviewNotebooksInInteractivePane":{"type":"boolean","deprecationMessage":"No longer supported. Notebooks open directly in their own editor now.","default":false,"description":"When opening ipynb files, automatically preview the contents in the Python Interactive window.","scope":"resource"},"python.dataScience.useNotebookEditor":{"type":"boolean","default":true,"description":"Automatically open .ipynb files in the Notebook Editor.","scope":"resource"},"python.dataScience.allowUnauthorizedRemoteConnection":{"type":"boolean","default":false,"description":"Allow for connecting the Python Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.","scope":"resource"},"python.dataScience.enablePlotViewer":{"type":"boolean","default":true,"description":"Modify plot output so that it can be expanded into a plot viewer window.","scope":"resource"},"python.dataScience.enableGather":{"type":"boolean","default":true,"description":"Python Insiders Only: Enable experimental gather feature for executed cells. For a gathered cell, that cell and only the code it depends on will be exported to a new notebook.","scope":"resource"},"python.dataScience.gatherToScript":{"type":"boolean","default":false,"description":"Python Insiders Only: If experimental gather feature is enabled, gather code to a python script rather than a notebook.","scope":"resource"},"python.dataScience.gatherSpecPath":{"type":"string","default":"","description":"Python Insiders Only: If experimental gather feature is enabled, this setting specifies a folder that contains additional or replacement spec files used for analysis.","scope":"resource"},"python.dataScience.codeLenses":{"type":"string","default":"python.datascience.runcell,  python.datascience.runallcellsabove, python.datascience.debugcell","description":"Set of commands to put as code lens above a cell. Defaults to 'python.datascience.runcell,  python.datascience.runallcellsabove, python.datascience.debugcell'","scope":"resource"},"python.dataScience.debugCodeLenses":{"type":"string","default":"python.datascience.debugcontinue, python.datascience.debugstop, python.datascience.debugstepover","description":"Set of debug commands to put as code lens above a cell while debugging.","scope":"resource"},"python.dataScience.ptvsdDistPath":{"type":"string","default":"","description":"Path to ptvsd experimental bits for debugging cells.","scope":"resource"},"python.dataScience.stopOnFirstLineWhileDebugging":{"type":"boolean","default":true,"description":"When debugging a cell, stop on the first line.","scope":"resource"},"python.dataScience.remoteDebuggerPort":{"type":"number","default":-1,"description":"When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.","scope":"resource"},"python.dataScience.disableJupyterAutoStart":{"type":"boolean","default":false,"description":"When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter.","scope":"resource"},"python.dataScience.textOutputLimit":{"type":"number","default":20000,"description":"Limit the amount of text in Python Interactive cell text output to this value. 0 to allow any amount of characters.","scope":"resource"},"python.dataScience.colorizeInputBox":{"type":"boolean","default":true,"description":"Whether or not to use the theme's peek color as the background for the input box.","scope":"resource"},"python.dataScience.stopOnError":{"type":"boolean","default":true,"description":"Stop running cells if a cell throws an exception.","scope":"resource"},"python.dataScience.addGotoCodeLenses":{"type":"boolean","default":true,"description":"After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.","scope":"resource"},"python.dataScience.variableQueries":{"type":"array","description":"Language to query mapping for returning the list of active variables in a Jupyter kernel. Used by the Variable Explorer in both the Interactive Window and Notebooks. Example: \n'[\n{\n   \"language\": \"python\",\n   \"query\": \"%who_ls\",\n  \"parseExpr\": \"'(\\\\w+)'\"\n}\n]'","scope":"machine","examples":[[{"language":"python","query":"_rwho_ls = %who_ls\\nprint(_rwho_ls)","parseExpr":"'(\\w+)'"},{"language":"julia","query":"whos","parseExpr":"'(\\w+)'"}]]},"python.disableInstallationCheck":{"type":"boolean","default":false,"description":"Whether to check if Python is installed (also warn when using the macOS-installed Python).","scope":"resource"},"python.envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env","scope":"resource"},"python.formatting.autopep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.autopep8Path":{"type":"string","default":"autopep8","description":"Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path.","scope":"resource"},"python.formatting.provider":{"type":"string","default":"autopep8","description":"Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.","enum":["autopep8","black","yapf","none"],"scope":"resource"},"python.formatting.blackArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.blackPath":{"type":"string","default":"black","description":"Path to Black, you can use a custom version of Black by modifying this setting to include the full path.","scope":"resource"},"python.formatting.yapfArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.yapfPath":{"type":"string","default":"yapf","description":"Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path.","scope":"resource"},"python.globalModuleInstallation":{"type":"boolean","default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource"},"python.jediEnabled":{"type":"boolean","default":true,"description":"Enables Jedi as IntelliSense engine instead of Microsoft Python Analysis Engine.","scope":"resource"},"python.jediMemoryLimit":{"type":"number","default":0,"description":"Memory limit for the Jedi completion engine in megabytes. Zero (default) means 1024 MB. -1 means unlimited (disable memory limit check)","scope":"resource"},"python.jediPath":{"type":"string","default":"","description":"Path to directory containing the Jedi library (this path will contain the 'Jedi' sub directory).","scope":"resource"},"python.languageServer":{"type":"string","enum":["Jedi","Microsoft","None"],"default":"Microsoft","description":"Defines type of the language server.","scope":"resource"},"python.analysis.openFilesOnly":{"type":"boolean","default":true,"description":"Only show errors and warnings for open files rather than for the entire workspace.","scope":"resource"},"python.analysis.diagnosticPublishDelay":{"type":"integer","default":1000,"description":"Delay before diagnostic messages are transferred to the problems list (in milliseconds).","scope":"resource"},"python.analysis.errors":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as errors.","scope":"resource"},"python.analysis.warnings":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as warnings.","scope":"resource"},"python.analysis.information":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as information.","scope":"resource"},"python.analysis.disabled":{"type":"array","default":[],"items":{"type":"string"},"description":"List of suppressed diagnostic messages.","scope":"resource"},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths to Typeshed stub folders. Default is Typeshed installed with the language server. Change requires restart.","scope":"resource"},"python.analysis.cacheFolderPath":{"type":"string","description":"Path to a writable folder where analyzer can cache its data. Change requires restart.","scope":"resource"},"python.analysis.memory.keepLibraryAst":{"type":"boolean","default":false,"description":"Allows code analysis to keep parser trees in memory. Increases memory consumption but may improve performance with large library analysis.","scope":"resource"},"python.analysis.memory.keepLibraryLocalVariables":{"type":"boolean","default":false,"description":"Allows code analysis to keep library function local variables. Allows code navigation in Python libraries function bodies. Increases memory consumption.","scope":"resource"},"python.analysis.logLevel":{"type":"string","enum":["Error","Warning","Information","Trace"],"default":"Error","description":"Defines type of log messages language server writes into the output window.","scope":"resource"},"python.analysis.symbolsHierarchyDepthLimit":{"type":"integer","default":10,"description":"Limits depth of the symbol tree in the document outline.","scope":"resource"},"python.analysis.cachingLevel":{"type":"string","enum":["Default","None","System","Library"],"default":"Default","description":"Defines which types of modules get their analysis cached.","scope":"resource"},"python.linting.enabled":{"type":"boolean","default":true,"description":"Whether to lint Python files.","scope":"resource"},"python.linting.flake8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.flake8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.F":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Flake8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using flake8","scope":"resource"},"python.linting.flake8Path":{"type":"string","default":"flake8","description":"Path to flake8, you can use a custom version of flake8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.ignorePatterns":{"type":"array","description":"Patterns used to exclude files or folders from being linted.","default":[".vscode/*.py","**/site-packages/**/*.py"],"items":{"type":"string"},"scope":"resource"},"python.linting.lintOnSave":{"type":"boolean","default":true,"description":"Whether to lint Python files when saved.","scope":"resource"},"python.linting.maxNumberOfProblems":{"type":"number","default":100,"description":"Controls the maximum number of problems produced by the server.","scope":"resource"},"python.linting.banditArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.banditEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using bandit.","scope":"resource"},"python.linting.banditPath":{"type":"string","default":"bandit","description":"Path to bandit, you can use a custom version of bandit by modifying this setting to include the full path.","scope":"resource"},"python.linting.mypyArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["--ignore-missing-imports","--follow-imports=silent","--show-column-numbers"],"items":{"type":"string"},"scope":"resource"},"python.linting.mypyCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Mypy message type 'Error'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyCategorySeverity.note":{"type":"string","default":"Information","description":"Severity of Mypy message type 'Note'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using mypy.","scope":"resource"},"python.linting.mypyPath":{"type":"string","default":"mypy","description":"Path to mypy, you can use a custom version of mypy by modifying this setting to include the full path.","scope":"resource"},"python.linting.pycodestyleArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pycodestyleCategorySeverity.E":{"type":"string","default":"Error","description":"Severity of pycodestyle message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pycodestyleCategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of pycodestyle message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pycodestyleEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pycodestyle","scope":"resource"},"python.linting.pycodestylePath":{"type":"string","default":"pycodestyle","description":"Path to pycodestyle, you can use a custom version of pycodestyle by modifying this setting to include the full path.","scope":"resource"},"python.linting.prospectorArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.prospectorEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using prospector.","scope":"resource"},"python.linting.prospectorPath":{"type":"string","default":"prospector","description":"Path to Prospector, you can use a custom version of prospector by modifying this setting to include the full path.","scope":"resource"},"python.linting.pydocstyleArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pydocstyleEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pydocstyle","scope":"resource"},"python.linting.pydocstylePath":{"type":"string","default":"pydocstyle","description":"Path to pydocstyle, you can use a custom version of pydocstyle by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylamaArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylamaEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pylama.","scope":"resource"},"python.linting.pylamaPath":{"type":"string","default":"pylama","description":"Path to pylama, you can use a custom version of pylama by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylintCategorySeverity.convention":{"type":"string","default":"Information","description":"Severity of Pylint message type 'Convention/C'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Error/E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.fatal":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Fatal/F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.refactor":{"type":"string","default":"Hint","description":"Severity of Pylint message type 'Refactor/R'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.warning":{"type":"string","default":"Warning","description":"Severity of Pylint message type 'Warning/W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintEnabled":{"type":"boolean","default":true,"description":"Whether to lint Python files using pylint.","scope":"resource"},"python.linting.pylintPath":{"type":"string","default":"pylint","description":"Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintUseMinimalCheckers":{"type":"boolean","default":true,"description":"Whether to run Pylint with minimal set of rules.","scope":"resource"},"python.pythonPath":{"type":"string","default":"python","description":"Path to Python, you can use a custom version of Python by modifying this setting to include the full path.","scope":"resource"},"python.condaPath":{"type":"string","default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"resource"},"python.pipenvPath":{"type":"string","default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"resource"},"python.poetryPath":{"type":"string","default":"poetry","description":"Path to the poetry executable.","scope":"resource"},"python.sortImports.args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.sortImports.path":{"type":"string","description":"Path to isort script, default using inner version","default":"","scope":"resource"},"python.terminal.activateEnvironment":{"type":"boolean","default":true,"description":"Activate Python Environment in Terminal created using the Extension.","scope":"resource"},"python.terminal.executeInFileDir":{"type":"boolean","default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource"},"python.terminal.launchArgs":{"type":"array","default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource"},"python.terminal.activateEnvInCurrentTerminal":{"type":"boolean","default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource"},"python.testing.cwd":{"type":"string","default":null,"description":"Optional working directory for tests.","scope":"resource"},"python.testing.debugPort":{"type":"number","default":3000,"description":"Port number used for debugging of tests.","scope":"resource"},"python.testing.nosetestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.testing.nosetestsEnabled":{"type":"boolean","default":false,"description":"Enable testing using nosetests.","scope":"resource"},"python.testing.nosetestPath":{"type":"string","default":"nosetests","description":"Path to nosetests, you can use a custom version of nosetests by modifying this setting to include the full path.","scope":"resource"},"python.testing.promptToConfigure":{"type":"boolean","default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource"},"python.testing.pytestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.testing.pytestEnabled":{"type":"boolean","default":false,"description":"Enable testing using pytest.","scope":"resource"},"python.testing.pytestPath":{"type":"string","default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"resource"},"python.testing.unittestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["-v","-s",".","-p","*test*.py"],"items":{"type":"string"},"scope":"resource"},"python.testing.unittestEnabled":{"type":"boolean","default":false,"description":"Enable testing using unittest.","scope":"resource"},"python.testing.autoTestDiscoverOnSaveEnabled":{"type":"boolean","default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource"},"python.venvFolders":{"type":"array","default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","scope":"resource","items":{"type":"string"}},"python.venvPath":{"type":"string","default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"resource"},"python.workspaceSymbols.ctagsPath":{"type":"string","default":"ctags","description":"Fully qualified path to the ctags executable (else leave as ctags, assuming it is in current path).","scope":"resource"},"python.workspaceSymbols.enabled":{"type":"boolean","default":false,"description":"Set to 'true' to enable ctags to provide Workspace Symbols.","scope":"resource"},"python.workspaceSymbols.exclusionPatterns":{"type":"array","default":["**/site-packages/**"],"items":{"type":"string"},"description":"Pattern used to exclude files and folders from ctags See http://ctags.sourceforge.net/ctags.html.","scope":"resource"},"python.workspaceSymbols.rebuildOnFileSave":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on when changes made to python files are saved.","scope":"resource"},"python.workspaceSymbols.rebuildOnStart":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on start (defaults to true).","scope":"resource"},"python.workspaceSymbols.tagFilePath":{"type":"string","default":"${workspaceFolder}/.vscode/tags","description":"Fully qualified path to tag file (exuberant ctag file), used to provide workspace symbols.","scope":"resource"},"python.dataScience.magicCommandsAsComments":{"type":"boolean","default":false,"description":"Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.","scope":"resource"},"python.dataScience.runMagicCommands":{"type":"string","default":"","deprecationMessage":"This setting has been deprecated in favor of 'runStartupCommands'.","description":"A series of Python instructions or iPython magic commands separated by '\\n' that will be executed when the interactive window loads.","scope":"application"},"python.dataScience.runStartupCommands":{"type":"string","default":"","description":"A series of Python instructions or iPython magic commands separated by '\\n' that will be executed when the interactive window loads. For instance, set this to '%load_ext autoreload\\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.","scope":"application"},"python.dataScience.debugJustMyCode":{"type":"boolean","default":true,"description":"When debugging, debug just my code.","scope":"resource"},"python.insidersChannel":{"type":"string","default":"off","description":"Set to \"weekly\" or \"daily\" to automatically download and install the latest Insiders builds of the python extension, which include upcoming features and bug fixes.","enum":["off","weekly","daily"],"scope":"application"}}},"languages":[{"id":"pip-requirements","aliases":["pip requirements","requirements.txt"],"filenames":["requirements.txt","constraints.txt","requirements.in"],"filenamePatterns":["*-requirements.txt","requirements-*.txt","constraints-*.txt","*-constraints.txt","*-requirements.in","requirements-*.in"],"configuration":"./languages/pip-requirements.json"},{"id":"yaml","filenames":[".condarc"]},{"id":"toml","filenames":["poetry.lock","Pipfile"]},{"id":"json","filenames":["Pipfile.lock"]},{"id":"ini","filenames":[".flake8"]},{"id":"jinja","extensions":[".jinja2",".j2"],"aliases":["Jinja"]},{"id":"jupyter","aliases":["Jupyter","Notebook"],"extensions":[".ipynb"]}],"grammars":[{"language":"pip-requirements","scopeName":"source.pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"views":{"test":[{"id":"python_tests","name":"Python","when":"testsDiscovered"}]}},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","compile":"tsc -watch -p ./","compile-webviews-watch":"npm run build-ipywidgets && cross-env NODE_OPTIONS=--max_old_space_size=9096 webpack --config ./build/webpack/webpack.datascience-ui.config.js --watch","build-ipywidgets":"npm run build-ipywidgets-clean && npm run build-ipywidgets-compile && npm run build-ipywidgets-webpack","build-ipywidgets-clean":"node ./src/ipywidgets/scripts/clean.js","build-ipywidgets-compile":"tsc -p ./src/ipywidgets && rimraf ./out/tsconfig.tsbuildinfo && node ./src/ipywidgets/scripts/copyfiles.js","build-ipywidgets-webpack":"cross-env NODE_OPTIONS=--max_old_space_size=9096 webpack --config ./src/ipywidgets/webpack.config.js","checkDependencies":"gulp checkDependencies","postinstall":"node ./build/ci/postInstall.js","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --opts ./build/.mocha.unittests.js.opts","test:unittests:cover":"nyc --no-clean --nycrc-path build/.nycrc mocha --opts ./build/.mocha.unittests.ts.opts","test:functional":"mocha --require source-map-support/register --opts ./build/.mocha.functional.opts","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --opts ./build/.mocha.functional.perf.opts","test:functional:cover":"npm run test:functional","test:cover:report":"nyc --nycrc-path build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"node ./out/test/smokeTest.js","lint-staged":"node gulpfile.js","lint":"tslint src/**/*.ts -t verbose","prettier-fix":"prettier 'src/**/*.ts*' --write && prettier 'build/**/*.js' --write","clean":"gulp clean","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@jupyter-widgets/schema":"^0.4.0","@jupyterlab/coreutils":"^3.1.0","@jupyterlab/services":"^4.2.0","@koa/cors":"^3.0.0","@loadable/component":"^5.12.0","@nteract/messaging":"^7.0.0","ansi-regex":"^4.1.0","arch":"^2.1.0","azure-storage":"^2.10.3","detect-indent":"^6.0.0","diff-match-patch":"^1.0.0","fast-deep-equal":"^2.0.1","font-awesome":"^4.7.0","fs-extra":"^4.0.3","fuzzy":"^0.1.3","get-port":"^3.2.0","glob":"^7.1.2","hash.js":"^1.1.7","iconv-lite":"^0.4.21","inversify":"^4.11.1","is-online":"^8.2.1","jsonc-parser":"^2.0.3","koa":"^2.11.0","koa-compress":"^3.0.0","koa-logger":"^3.2.1","line-by-line":"^0.1.6","lodash":"^4.17.15","log4js":"^6.1.2","md5":"^2.2.1","minimatch":"^3.0.4","named-js-regexp":"^1.3.3","node-fetch":"^1.0.0","node-stream-zip":"^1.6.0","onigasm":"^2.2.2","pdfkit":"^0.11.0","pidusage":"^1.2.0","portfinder":"^1.0.25","reflect-metadata":"^0.1.12","request":"^2.87.0","request-progress":"^3.0.0","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","sanitize-filename":"^1.6.3","semver":"^5.5.0","stack-trace":"0.0.10","string-argv":"^0.3.1","strip-ansi":"^5.2.0","sudo-prompt":"^8.2.0","svg-to-pdfkit":"^0.1.8","tmp":"^0.0.29","tree-kill":"^1.2.2","typescript-char":"^0.0.0","uint64be":"^1.0.1","unicode":"^10.0.0","untildify":"^3.0.2","vscode-debugadapter":"^1.28.0","vscode-debugprotocol":"^1.28.0","vscode-extension-telemetry":"0.1.0","vscode-jsonrpc":"^5.0.1","vscode-languageclient":"^6.2.0-next.2","vscode-languageserver":"^6.2.0-next.2","vscode-languageserver-protocol":"^3.16.0-next.2","vsls":"^0.3.1291","winreg":"^1.2.4","winston":"^3.2.1","ws":"^6.0.0","xml2js":"^0.4.19","zeromq":"^6.0.0-beta.6"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.4.4","@babel/plugin-transform-runtime":"^7.4.4","@babel/polyfill":"^7.4.4","@babel/preset-env":"^7.1.0","@babel/preset-react":"^7.0.0","@babel/register":"^7.9.0","@blueprintjs/select":"^3.11.2","@enonic/fnv-plus":"^1.3.0","@istanbuljs/nyc-config-typescript":"^0.1.3","@jupyter-widgets/base":"^2.0.1","@jupyter-widgets/controls":"^1.5.2","@jupyter-widgets/jupyterlab-manager":"^1.0.2","@jupyter-widgets/output":"^2.0.1","@nteract/plotly":"^1.48.3","@nteract/transform-dataresource":"^4.3.5","@nteract/transform-geojson":"^3.2.3","@nteract/transform-model-debug":"^3.2.3","@nteract/transform-plotly":"^6.0.0","@nteract/transform-vega":"^6.0.3","@nteract/transforms":"^4.4.4","@phosphor/widgets":"^1.9.3","@testing-library/react":"^9.4.0","@types/ansi-regex":"^4.0.0","@types/chai":"^4.1.2","@types/chai-arrays":"^1.0.2","@types/chai-as-promised":"^7.1.0","@types/copy-webpack-plugin":"^4.4.2","@types/cors":"^2.8.6","@types/debug":"^4.1.5","@types/dedent":"^0.7.0","@types/del":"^3.0.0","@types/diff-match-patch":"^1.0.32","@types/download":"^6.2.2","@types/enzyme":"^3.1.14","@types/enzyme-adapter-react-16":"^1.0.3","@types/event-stream":"^3.3.33","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/html-webpack-plugin":"^3.2.0","@types/iconv-lite":"^0.0.1","@types/jsdom":"^11.12.0","@types/koa":"^2.11.0","@types/koa-compress":"^2.0.9","@types/koa-logger":"^3.1.1","@types/koa__cors":"^2.2.3","@types/loadable__component":"^5.10.0","@types/loader-utils":"^1.1.3","@types/lodash":"^4.14.104","@types/md5":"^2.1.32","@types/memoize-one":"^4.1.1","@types/mocha":"^5.2.7","@types/nock":"^10.0.3","@types/node":"^10.14.18","@types/node-fetch":"^2.3.4","@types/pdfkit":"^0.7.36","@types/promisify-node":"^0.4.0","@types/react":"^16.4.14","@types/react-dom":"^16.0.8","@types/react-json-tree":"^0.6.8","@types/react-redux":"^7.1.5","@types/react-virtualized":"^9.21.2","@types/redux-logger":"^3.0.7","@types/request":"^2.47.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^7.5.1","@types/socket.io":"^2.1.4","@types/stack-trace":"0.0.29","@types/temp":"^0.8.32","@types/tmp":"0.0.33","@types/untildify":"^3.0.0","@types/uuid":"^3.4.3","@types/vscode":"^1.43.0","@types/webpack-bundle-analyzer":"^2.13.0","@types/winreg":"^1.2.30","@types/ws":"^6.0.1","@types/xml2js":"^0.4.2","acorn":"^6.4.1","ansi-to-html":"^0.6.7","awesome-typescript-loader":"^5.2.1","babel-loader":"^8.0.3","babel-plugin-inline-json-import":"^0.3.1","babel-plugin-transform-runtime":"^6.23.0","babel-polyfill":"^6.26.0","bootstrap":"^4.3.1","bootstrap-less":"^3.3.8","brfs":"^2.0.2","canvas":"^2.6.0","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","chai-http":"^4.3.0","codecov":"^3.6.5","colors":"^1.2.1","copy-webpack-plugin":"^5.1.1","cors":"^2.8.5","cross-env":"^6.0.3","cross-spawn":"^6.0.5","css-loader":"^1.0.1","dedent":"^0.7.0","del":"^3.0.0","download":"^7.0.0","enzyme":"^3.7.0","enzyme-adapter-react-16":"^1.6.0","eslint-config-prettier":"^6.9.0","eslint-plugin-prettier":"^3.1.2","event-stream":"3.3.4","expose-loader":"^0.7.5","express":"^4.17.1","extract-zip":"^1.6.7","fast-xml-parser":"^3.16.0","file-loader":"^5.1.0","filemanager-webpack-plugin-fixed":"^2.0.9","flat":"^4.0.0","gulp":"^4.0.0","gulp-azure-storage":"^0.11.1","gulp-chmod":"^2.0.0","gulp-filter":"^5.1.0","gulp-gunzip":"^1.1.0","gulp-rename":"^1.4.0","gulp-sourcemaps":"^2.6.4","gulp-typescript":"^4.0.1","gulp-untar":"0.0.8","gulp-vinyl-zip":"^2.1.2","html-webpack-plugin":"^3.2.0","husky":"^1.1.2","immutable":"^4.0.0-rc.12","jsdom":"^15.0.0","json-loader":"^0.5.7","less":"^3.9.0","less-loader":"^5.0.0","less-plugin-inline-urls":"^1.2.0","loader-utils":"^1.1.0","lolex":"^5.1.2","memoize-one":"^5.1.1","mocha":"^6.2.3","mocha-junit-reporter":"^1.17.0","mocha-multi-reporters":"^1.1.7","monaco-editor":"0.18.1","monaco-editor-textmate":"^2.2.1","monaco-editor-webpack-plugin":"^1.7.0","monaco-textmate":"^3.0.1","nocache":"^2.1.0","nock":"^10.0.6","node-has-native-dependencies":"^1.0.2","node-html-parser":"^1.1.13","nyc":"^15.0.0","playwright-chromium":"^0.13.0","postcss":"^7.0.27","postcss-cssnext":"^3.1.0","postcss-import":"^12.0.1","postcss-loader":"^3.0.0","prettier":"^2.0.2","range-inclusive":"^1.0.2","raw-loader":"^0.5.1","react":"^16.5.2","react-data-grid":"^6.0.2-0","react-dev-utils":"^5.0.2","react-dom":"^16.5.2","react-json-tree":"^0.11.0","react-redux":"^7.1.1","react-svg-pan-zoom":"^3.1.0","react-svgmt":"^1.1.8","react-virtualized":"^9.21.1","redux":"^4.0.4","redux-logger":"^3.0.6","relative":"^3.0.2","remove-files-webpack-plugin":"^1.4.0","requirejs":"^2.3.6","rewiremock":"^3.13.0","rimraf":"^3.0.2","sass-loader":"^7.1.0","serialize-javascript":"^2.1.2","shortid":"^2.2.8","sinon":"^8.0.1","slickgrid":"^2.4.17","socket.io":"^2.3.0","source-map-support":"^0.5.12","style-loader":"^0.23.1","styled-jsx":"^3.1.0","svg-inline-loader":"^0.8.0","svg-inline-react":"^3.1.0","terser-webpack-plugin":"^2.3.2","transform-loader":"^0.2.4","ts-loader":"^5.3.0","ts-mockito":"^2.5.0","ts-node":"^8.3.0","tsconfig-paths-webpack-plugin":"^3.2.0","tslint":"^5.20.1","tslint-config-prettier":"^1.18.0","tslint-eslint-rules":"^5.1.0","tslint-microsoft-contrib":"^5.0.3","tslint-plugin-prettier":"^2.1.0","typed-react-markdown":"^0.1.0","typemoq":"^2.1.0","typescript":"^3.8.3","typescript-formatter":"^7.1.0","unicode-properties":"^1.3.1","url-loader":"^1.1.2","uuid":"^3.3.2","vinyl-fs":"^3.0.3","vsce":"^1.59.0","vscode-debugadapter-testsupport":"^1.27.0","vscode-test":"^1.2.3","webpack":"^4.33.0","webpack-bundle-analyzer":"^3.6.0","webpack-cli":"^3.1.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^4.1.4","webpack-node-externals":"^1.7.2","webpack-require-from":"^1.8.0","why-is-node-running":"^2.0.3","wtfnode":"^0.8.0","yargs":"^12.0.2"},"uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-python.python","identifier":{"value":"ms-python.python","_lower":"ms-python.python"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/ms-python.python-2020.5.80290","path":"/home/ansi/.vscode/extensions/ms-python.python-2020.5.80290","scheme":"file"}},{"name":"trailing-spaces","displayName":"Trailing Spaces","description":"Highlight trailing spaces and delete them in a flash!","version":"0.3.1","publisher":"shardulm94","icon":"icon.png","engines":{"vscode":"^1.6.0"},"categories":["Other"],"main":"./out/src/extension","contributes":{"configuration":{"type":"object","title":"Trailing Spaces Configuration","properties":{"trailing-spaces.logLevel":{"type":"string","enum":["none","log","info","warn","error"],"default":"warn","description":"Controls the verbosity of logging. Logs can be seen in the console by opening the dev tools. `log` is the most verbose and `error` will only show critical errors."},"trailing-spaces.includeEmptyLines":{"type":"boolean","default":true,"description":"By default, empty lines are cleared as well when calling the deletion command. Set to false to ignore empty lines upon deletion."},"trailing-spaces.highlightCurrentLine":{"type":"boolean","default":true,"description":"By default, the line being currently edited will have its trailing spaces highlighted. Set to false to ignore trailing spaces on the edited line."},"trailing-spaces.regexp":{"type":"string","default":"[ \t]+","description":"By default, only simple spaces and tabs are matched as \"trailing spaces\"."},"trailing-spaces.liveMatching":{"type":"boolean","default":true,"description":"By default, Trailing Spaces is \"live\". It means the trailing spaces regions will be matched in the background, and highlighted if a color scope is defined, when the document is opened and edited. Set to false to disable live matching and highlighting (the deletion command remains available, so-called \"lazy matching\")."},"trailing-spaces.deleteModifiedLinesOnly":{"type":"boolean","default":false,"description":"By default, trailing spaces are deleted within the whole document. Set to true to affect only the lines you edited since last save. Trailing spaces will still be searched for and highlighted in the whole document."},"trailing-spaces.syntaxIgnore":{"type":"array","default":[],"description":"With this option you can ignore specific files based on the syntax used. An item has to match the case-sensitive string of the language used in the file."},"trailing-spaces.schemeIgnore":{"type":"array","default":["output"],"description":"With this option you can ignore specific schemes. An item has to match the case-sensitive string of the scheme of the document."},"trailing-spaces.trimOnSave":{"type":"boolean","default":false,"description":"Controls whether trailing spaces are trimmed automatically when saving a file."},"trailing-spaces.showStatusBarMessage":{"type":"boolean","default":true,"description":"By default, trailing space deletions will be communicated through a status bar message. Set to false to disable these messages."},"trailing-spaces.backgroundColor":{"type":"string","default":"rgba(255,0,0,0.3)","description":"Controls the background color of the trailing space decoration."},"trailing-spaces.borderColor":{"type":"string","default":"rgba(255,100,100,0.15)","description":"Controls the color of the border around the trailing space decoration."}}},"commands":[{"command":"trailing-spaces.deleteTrailingSpaces","title":"Delete","category":"Trailing Spaces"},{"command":"trailing-spaces.deleteTrailingSpacesModifiedLinesOnly","title":"Delete - Modified Lines Only","category":"Trailing Spaces"},{"command":"trailing-spaces.highlightTrailingSpaces","title":"Highlight","category":"Trailing Spaces"}]},"activationEvents":["onCommand:trailing-spaces.deleteTrailingSpaces","onCommand:trailing-spaces.deleteTrailingSpacesModifiedLinesOnly","onCommand:trailing-spaces.highlightTrailingSpaces","*"],"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","pretest":"ncp test/files out/test/files","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^3.3.0","vscode":"^1.0.0","mocha":"^5.0.0","@types/node":"^6.0.40","@types/mocha":"^5.0.0","ncp":"^2.0.0","@types/diff":"^4.0.0"},"directories":{"test":"test"},"dependencies":{"diff":"^4.0.0"},"repository":{"type":"git","url":"git+https://github.com/shardulm94/vscode-trailingspaces.git"},"keywords":["trailing","spaces","delete","highlight"],"author":"Shardul Mahadik","license":"MIT","bugs":{"url":"https://github.com/shardulm94/vscode-trailingspaces/issues"},"homepage":"https://github.com/shardulm94/vscode-trailingspaces#readme","uuid":"6ad45f5a-09ec-44e5-b363-867ddc1ec674","isBuiltin":false,"isUnderDevelopment":false,"id":"shardulm94.trailing-spaces","identifier":{"value":"shardulm94.trailing-spaces","_lower":"shardulm94.trailing-spaces"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/shardulm94.trailing-spaces-0.3.1","path":"/home/ansi/.vscode/extensions/shardulm94.trailing-spaces-0.3.1","scheme":"file"}},{"name":"code-spell-checker","description":"Spelling checker for source code","displayName":"Code Spell Checker","icon":"images/SpellCheck.png","author":"Jason Dent","license":"MIT","version":"1.9.0","publisher":"streetsidesoftware","repository":{"type":"git","url":"https://github.com/streetsidesoftware/vscode-spell-checker"},"bugs":{"url":"https://github.com/streetsidesoftware/vscode-spell-checker/issues"},"homepage":"https://github.com/streetsidesoftware/vscode-spell-checker/blob/master/packages/client/README.md","engines":{"vscode":"^1.45.0"},"extensionKind":["workspace"],"enableProposedApi":false,"categories":["Linters","Other"],"keywords":["spell","checker","spellchecker","multi-root ready"],"qna":"marketplace","activationEvents":["*"],"main":"./dist/extension","contributes":{"menus":{"editor/context":[{"command":"cSpell.addWordToFolderDictionary","when":"editorTextFocus && config.cSpell.showCommandsInEditorContextMenu && workspaceFolderCount != 0 && workspaceFolderCount != 1","group":"A_cspell@1"},{"command":"cSpell.addWordToWorkspaceDictionary","when":"editorTextFocus && config.cSpell.showCommandsInEditorContextMenu && workspaceFolderCount != 0","group":"A_cspell@2"},{"command":"cSpell.addWordToUserDictionary","when":"editorTextFocus && config.cSpell.showCommandsInEditorContextMenu","group":"A_cspell@3"},{"command":"cSpell.addIgnoreWord","when":"editorTextFocus && config.cSpell.showCommandsInEditorContextMenu","group":"A_cspell@9"}]},"commands":[{"command":"cSpell.addWordToWorkspaceDictionary","title":"Add Word to Workspace Dictionaries"},{"command":"cSpell.addWordToFolderDictionary","title":"Add Word to Folder Dictionary"},{"command":"cSpell.addWordToUserDictionary","title":"Add Word to User Dictionary"},{"command":"cSpell.enableForWorkspace","title":"Enable Spell Checking For Workspace"},{"command":"cSpell.disableForWorkspace","title":"Disable Spell Checking For Workspace"},{"command":"cSpell.enableForGlobal","title":"Enable Spell Checking by Default"},{"command":"cSpell.disableForGlobal","title":"Disable Spell Checking by Default"},{"command":"cSpell.enableCurrentLanguage","title":"Enable Spell Checking Document Language"},{"command":"cSpell.disableCurrentLanguage","title":"Disable Spell Checking Document Language"},{"command":"cSpell.displayCSpellInfo","title":"Show Spell Checker Configuration Info"},{"command":"cSpell.toggleEnableSpellChecker","title":"Toggle Spell Checking For the Current Workspace"},{"command":"cSpell.removeWordFromFolderDictionary","title":"Remove Words from the Folder Dictionary"},{"command":"cSpell.removeWordFromWorkspaceDictionary","title":"Remove Words from the Workspace Dictionaries"},{"command":"cSpell.removeWordFromUserDictionary","title":"Remove Words from the Global Dictionary"},{"command":"cSpell.logPerfTimeline","title":"Log cSpell performance times to console"},{"command":"cSpell.addIgnoreWord","title":"Ignore Word"},{"command":"cSpell.addIgnoreWordToFolder","title":"Ignore Word in Folder Settings"},{"command":"cSpell.addIgnoreWordToWorkspace","title":"Ignore Word in Workspace Settings"},{"command":"cSpell.addIgnoreWordToUser","title":"Ignore Word in User Settings"}],"languages":[{"id":"jsonc","extensions":["cspell-ext.json","cspell-default.json","cspell.json","cSpell.json"]}],"jsonValidation":[{"fileMatch":"cSpell.json","url":"https://raw.githubusercontent.com/streetsidesoftware/cspell/cspell%404.0.53/cspell.schema.json"},{"fileMatch":"cspell*.json","url":"https://raw.githubusercontent.com/streetsidesoftware/cspell/cspell%404.0.53/cspell.schema.json"}],"configuration":{"type":"object","title":"Code Spell Checker","properties":{"cSpell.language":{"type":"string","scope":"resource","default":"en","description":"The Language locale to use when spell checking. \"en\" and \"en-GB\" are currently supported."},"cSpell.maxNumberOfProblems":{"type":"number","scope":"resource","default":100,"description":"Controls the maximum number of spelling errors per document."},"cSpell.checkLimit":{"type":"number","scope":"resource","default":500,"description":"The limit in K-Bytes to be checked in a file."},"cSpell.numSuggestions":{"type":"number","scope":"resource","default":8,"description":"Controls the number of suggestions shown."},"cSpell.minWordLength":{"type":"number","scope":"resource","default":4,"description":"The minimum length of a word before checking it against a dictionary."},"cSpell.maxDuplicateProblems":{"type":"number","scope":"resource","default":5,"description":"The maximum number of times the same word can be flagged as an error in a file."},"cSpell.enableFiletypes":{"items":{"type":"string"},"markdownDescription":"Enable / Disable checking file types (languageIds).\nThese are in additional to the file types specified by `cSpell.enabledLanguageIds`.\nTo disable a language, prefix with `!` as in `!json`,\n\nExample:\n```\njsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n```","pattern":"^!?[\\w_\\-]+$","scope":"resource","title":"File Types to Check","type":"array","uniqueItems":true},"cSpell.enabledLanguageIds":{"title":"Enabled Language Ids","type":"array","scope":"resource","items":{"type":"string"},"default":["asciidoc","c","cpp","csharp","css","git-commit","go","handlebars","haskell","html","jade","java","javascript","javascriptreact","json","jsonc","latex","less","markdown","php","plaintext","python","pug","restructuredtext","rust","scala","scss","text","typescript","typescriptreact","yaml","yml"],"description":"Specify file types to spell check. Use `cSpell.enableFiletypes` to Enable / Disable checking files types.","markdownDescription":"Specify a list of file types to spell check. It is better to use `cSpell.enableFiletypes` to Enable / Disable checking files types.","uniqueItems":true},"cSpell.import":{"type":"array","scope":"resource","items":{"type":"string"},"default":[],"description":"List of paths of cspell.json files to import."},"cSpell.words":{"type":"array","scope":"resource","items":{"type":"string"},"default":[],"description":"Words to add to dictionary for a workspace."},"cSpell.userWords":{"type":"array","scope":"resource","items":{"type":"string"},"default":[],"description":"User words to add to dictionary.  Should only be in the user settings."},"cSpell.ignoreWords":{"type":"array","scope":"resource","items":{"type":"string"},"default":[],"description":"A list of words to be ignored by the spell checker."},"cSpell.enabled":{"type":"boolean","scope":"resource","default":true,"description":"Enable / Disable the spell checker."},"cSpell.diagnosticLevel":{"type":"string","scope":"resource","enum":["Error","Warning","Information","Hint"],"default":"Information","description":"Issues found by the spell checker are marked with a Diagnostic Severity Level. This affects the color of squiggle."},"cSpell.showStatus":{"type":"boolean","scope":"resource","default":true,"description":"Display the spell checker status on the status bar."},"cSpell.spellCheckDelayMs":{"type":"number","default":50,"description":"Delay in ms after a document has changed before checking it for spelling errors."},"cSpell.ignorePaths":{"type":"array","scope":"resource","items":{"type":"string"},"default":["**/package-lock.json","**/node_modules/**","**/vscode-extension/**","**/.git/objects/**",".vscode"],"description":"Specify paths/files to ignore. (Supports Globs)"},"cSpell.flagWords":{"type":"array","scope":"resource","items":{"type":"string"},"default":[],"description":"Words to always be flagged as an error."},"cSpell.patterns":{"type":"array","scope":"resource","items":{"type":"object","properties":{"name":{"type":"string","description":"The pattern identifier."},"pattern":{"type":"string","description":"Regular expression, default flags are: 'gim'"}},"description":"Define a pattern"},"default":[],"description":"Defines a list of named regular expression patterns that can be used in exclusion or inclusion lists."},"cSpell.ignoreRegExpList":{"type":"array","scope":"resource","items":{"type":"string"},"default":[],"description":"List of regular expressions used to exclude the matching text from being checked.\n Example: \"0x[a-f0-9]+\" to skip 0x hex values.\n By default the flags are 'gim'.\n You can specify them like this:\n \"/0x[A-F0-9]/g\" to match only upper case hex numbers.\n Example to match email: \"<?[\\\\w.\\\\-+]+@\\\\w+(\\\\.\\\\w+)+>?\" "},"cSpell.includeRegExpList":{"type":"array","scope":"resource","items":{"type":"string"},"default":[],"description":"List of regular expressions used to include text to be spell checked.\nBy default, all text is checked.  Adding regular expresses to this list will limit the text to be spell checked to only text that matches any of the expressions in the list.\nLogic: text to be checked = include - exclude\nNote: Slashes need to be double: \\\\ because it is in a json string. \nExamples:\n* \".*\" -- include everything.\n* \"'(?:[^'\\\\n]|\\\\\\\\')*'\" -- single quote strings. \n"},"cSpell.allowCompoundWords":{"type":"boolean","scope":"resource","default":false,"description":"Enable / Disable allowing word compounds. true means 'arraylength' would be ok, false means it would not pass."},"cSpell.languageSettings":{"type":"array","scope":"resource","description":"Define settings on a per programming language basis.","items":{"$ref":"https://raw.githubusercontent.com/streetsidesoftware/cspell/cspell%404.0.53/cspell.schema.json#/definitions/LanguageSetting"}},"cSpell.dictionaries":{"type":"array","scope":"resource","description":"List of dictionaries to use when checking files.","items":{"type":"string","description":"Name of dictionary to use."}},"cSpell.dictionaryDefinitions":{"type":"array","scope":"resource","description":"A List of Dictionary Definitions.","items":{"$ref":"https://raw.githubusercontent.com/streetsidesoftware/cspell/cspell%404.0.53/cspell.schema.json#/definitions/DictionaryDefinition"}},"cSpell.showCommandsInEditorContextMenu":{"type":"boolean","scope":"application","description":"Show Spell Checker actions in Editor Context Menu","default":true},"cSpell.fixSpellingWithRenameProvider":{"type":"boolean","scope":"application","description":"Use Rename when fixing spelling issues.","default":true},"cSpell.logLevel":{"type":"string","scope":"window","description":"Set the Debug Level for logging messages.","enum":["None","Error","Warning","Information","Debug"],"default":"Error"},"cSpell.allowedSchemas":{"type":"array","scope":"window","description":"Control which file schemas will be checked for spelling (VS Code must be restarted for this setting to take effect).","items":{"type":"string"},"default":["file","gist","sftp","untitled"]},"cSpell.overrides":{"type":"array","description":"Overrides to apply based upon the file path.","items":{"$ref":"https://raw.githubusercontent.com/streetsidesoftware/cspell/cspell%404.0.53/cspell.schema.json#/definitions/OverrideSettings"}},"cSpell.workspaceRootPath":{"markdownDescription":"Define the path to the workspace root folder in a multi-root workspace.\nBy default it is the first folder.\n\nThis is used to find the `cspell.json` file for the workspace.\n\nExample: use the `client` folder\n```\n     \"cSpell.workspaceRootPath\": \"${workspaceFolder:client}\"\n```","scope":"resource","title":"Workspace Root Folder Path","type":"string"},"cSpell.customFolderDictionaries":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":false,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"description":"This matches the name in a dictionary definition","markdownDescription":"The reference name of the dictionary.\nexample: `My Words` or `custom`\nIf they name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","title":"Name of Dictionary","type":"string"},"path":{"description":"A File System Path","markdownDescription":"Define the path to the dictionary text file.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\nExample: relative to User's folder\n```\n~/dictionaries/custom_dictionary.txt\n```\n\nExample: relative to the `client` folder in a multi-root workspace\n```\n${workspaceFolder:client}/build/custom_dictionary.txt\n```\n\nExample: relative to the current workspace folder in a single-root workspace\nNote - this might no as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n```\n${workspaceFolder}/build/custom_dictionary.txt\n```\n\nExample: relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n```\n./build/custom_dictionary.txt\n```","title":"Path to Dictionary Text File","type":"string"}},"required":["name"],"type":"object"},{"description":"This matches the name in a dictionary definition","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the folder.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"resource","title":"Custom Folder Dictionaries","type":"array"},"cSpell.customUserDictionaries":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":false,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"description":"This matches the name in a dictionary definition","markdownDescription":"The reference name of the dictionary.\nexample: `My Words` or `custom`\nIf they name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","title":"Name of Dictionary","type":"string"},"path":{"description":"A File System Path","markdownDescription":"Define the path to the dictionary text file.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\nExample: relative to User's folder\n```\n~/dictionaries/custom_dictionary.txt\n```\n\nExample: relative to the `client` folder in a multi-root workspace\n```\n${workspaceFolder:client}/build/custom_dictionary.txt\n```\n\nExample: relative to the current workspace folder in a single-root workspace\nNote - this might no as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n```\n${workspaceFolder}/build/custom_dictionary.txt\n```\n\nExample: relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n```\n./build/custom_dictionary.txt\n```","title":"Path to Dictionary Text File","type":"string"}},"required":["name"],"type":"object"},{"description":"This matches the name in a dictionary definition","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the user.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"application","title":"Custom User Dictionaries","type":"array"},"cSpell.customWorkspaceDictionaries":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":false,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"description":"This matches the name in a dictionary definition","markdownDescription":"The reference name of the dictionary.\nexample: `My Words` or `custom`\nIf they name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","title":"Name of Dictionary","type":"string"},"path":{"description":"A File System Path","markdownDescription":"Define the path to the dictionary text file.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\nExample: relative to User's folder\n```\n~/dictionaries/custom_dictionary.txt\n```\n\nExample: relative to the `client` folder in a multi-root workspace\n```\n${workspaceFolder:client}/build/custom_dictionary.txt\n```\n\nExample: relative to the current workspace folder in a single-root workspace\nNote - this might no as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n```\n${workspaceFolder}/build/custom_dictionary.txt\n```\n\nExample: relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n```\n./build/custom_dictionary.txt\n```","title":"Path to Dictionary Text File","type":"string"}},"required":["name"],"type":"object"},{"description":"This matches the name in a dictionary definition","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the workspace.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"resource","title":"Custom Workspace Dictionaries","type":"array"}}}},"scripts":{"clean":"rimraf out","clean-build":"npm run clean && npm run build","build":"webpack --mode none","build-production":"webpack --mode production","build-integration-test":"npm run build && cd ../_integrationTests && npm install && npm run build","lint":"eslint 'src/**'","vscode:prepublish":"npm run clean && npm run build-production","package-extension":"npx vsce package -o ../../build","version":"npm run package-extension","watch":"npm run build -- watch","test":"jest","test-integration":"cross-env CODE_DISABLE_EXTENSIONS=true CODE_TESTS_PATH=./../_integrationTests/out CODE_TESTS_DATA_DIR=./temp/vscode node ../_integrationTests/integrationTestRunner","test-watch":"jest --watch"},"devDependencies":{"@types/fs-extra":"^9.0.0","@types/jest":"^25.2.1","@types/kefir":"^3.8.2","@types/node":"^12.12.39","@types/source-map-support":"^0.4.2","@types/vscode":"^1.45.0","@typescript-eslint/eslint-plugin":"^2.33.0","@typescript-eslint/parser":"^2.33.0","cross-env":"^5.2.1","eslint":"^6.8.0","jest":"^25.5.4","lorem-ipsum":"^2.0.3","rimraf":"^3.0.2","source-map-support":"^0.5.19","ts-jest":"^25.5.1","ts-loader":"^6.2.2","typescript":"^3.9.2","vscode-uri":"^2.1.1","webpack":"^4.43.0","webpack-cli":"^3.3.11"},"dependencies":{"comment-json":"^3.0.2","fs-extra":"^9.0.0","kefir":"^3.8.6","node-watch":"^0.6.4","vscode-languageclient":"^6.1.3"},"uuid":"f6dbd813-b0a0-42c1-90ea-10dde9d925a7","isBuiltin":false,"isUnderDevelopment":false,"id":"streetsidesoftware.code-spell-checker","identifier":{"value":"streetsidesoftware.code-spell-checker","_lower":"streetsidesoftware.code-spell-checker"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/streetsidesoftware.code-spell-checker-1.9.0","path":"/home/ansi/.vscode/extensions/streetsidesoftware.code-spell-checker-1.9.0","scheme":"file"}},{"name":"python","version":"0.2.3","displayName":"Python for VSCode","title":"Python for VSCode","description":"Python language extension for vscode","authors":["Thomas Haakon Townsend"],"publisher":"tht13","repository":{"type":"git","url":"https://github.com/tht13/Python-vscode.git"},"license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"installServerIntoExtension ./out ./src/server/package.json ./src/server/tsconfig.json && node ./node_modules/vscode/bin/compile -p ./","build":"node ./node_modules/vscode/bin/compile -p ./"},"devDependencies":{"typescript":"^1.7.5","vscode":"^0.10.7"},"dependencies":{"vscode-languageclient":"^1.3.1","vscode-languageserver":"^1.3.0"},"activationEvents":["onLanguage:python"],"main":"out/client/src/pythonMain","icon":"images/python_icon.png","galleryBanner":{"color":"#2b5b84","theme":"light"},"bugs":"https://github.com/tht13/Python-vscode/issues","homepage":"https://github.com/tht13/Python-vscode/blob/master/README.md","categories":["Languages","Snippets","Linters"],"contributes":{"languages":[{"id":"python","aliases":["Python"],"extensions":[".py",".rpy",".pyw",".cpy",".SConstruct",".Sconstruct",".sconstruct",".SConscript",".gyp",".gypi"],"firstLine":"^#!/.*\\bpython[0-9.-]*\\b","configuration":"./python.configuration.json"}],"grammars":[{"language":"python","scopeName":"source.python","path":"./syntaxes/python.tmLanguage"},{"scopeName":"source.regexp.python","path":"./syntaxes/Regular Expressions (Python).tmLanguage"}],"snippets":[{"language":"python","path":"./snippets/python.json"}],"jsonValidation":[{"fileMatch":"pyconfig.json","url":"/schemas/pyconfig.schema.json"}],"configuration":{"type":"object","title":"Python configuration","properties":{"python.maxNumberOfProblems":{"type":"number","default":100,"description":"Controls the maximum number of problems produced by the server."},"python.linter":{"type":"string","default":"pyLint","description":"The linter to use","oneOf":[{"default":"pyLint"},{"default":"flake8"}]}}}},"uuid":"19e1cdbe-42df-443e-89c0-bfecc7204b1d","isBuiltin":false,"isUnderDevelopment":false,"id":"tht13.python","identifier":{"value":"tht13.python","_lower":"tht13.python"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/tht13.python-0.2.3","path":"/home/ansi/.vscode/extensions/tht13.python-0.2.3","scheme":"file"}},{"name":"ansible-autocomplete","displayName":"ansible-autocomplete","description":"Ansible autocompletion","keywords":["Ansible","Snippets"],"version":"0.0.2","publisher":"timonwong","license":"MIT","engines":{"vscode":"^1.0.0"},"categories":["Languages"],"private":true,"repository":{"type":"git","url":"https://github.com/timonwong/vscode-ansible-autocomplete"},"bugs":{"url":"https://github.com/timonwong/vscode-ansible-autocomplete/issues"},"activationEvents":["onLanguage:ansible","onLanguage:yaml"],"main":"./out/src/extension","contributes":{},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/fuzzaldrin-plus":"0.0.1","@types/mocha":"^2.2.32","@types/node":"^6.0.40","mocha":"^2.3.3","tslint":"^3.15.1","typescript":"^2.0.3","vscode":"^1.0.0"},"dependencies":{"fuzzaldrin-plus":"^0.3.1"},"uuid":"84fb492e-7108-4691-88d0-5fd29513a261","isBuiltin":false,"isUnderDevelopment":false,"id":"timonwong.ansible-autocomplete","identifier":{"value":"timonwong.ansible-autocomplete","_lower":"timonwong.ansible-autocomplete"},"extensionLocation":{"$mid":1,"fsPath":"/home/ansi/.vscode/extensions/timonwong.ansible-autocomplete-0.0.2","path":"/home/ansi/.vscode/extensions/timonwong.ansible-autocomplete-0.0.2","scheme":"file"}}]}